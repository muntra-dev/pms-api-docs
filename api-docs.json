{
    "swagger": "2.0",
    "info": {
        "title": "API Documentation",
        "description": "Muntra Practice Management System API",
        "version": "3.5.234"
    },
    "basePath": "https://api.muntra.com",
    "schemes": [
        "http",
        "https"
    ],
    "paths": {
        "/api/action-needed-patient-report-rows": {
            "get": {
                "tags": [
                    "action-needed-patient-report-rows"
                ],
                "summary": "List action-needed-patient-report-rows",
                "description": "Returns a list of action needed patient report rows based on the given filters",
                "operationId": "getActionNeededPatientReportRows",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "clinic_id",
                        "in": "query",
                        "description": "'clinic_id' field",
                        "required": false,
                        "type": "number",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "user_ids",
                        "in": "query",
                        "description": "'user_ids' field",
                        "required": false,
                        "type": "array",
                        "allowEmptyValue": true,
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "default": ""
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "'per_page' field",
                        "required": false,
                        "type": "number",
                        "allowEmptyValue": true,
                        "default": ""
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "List action-needed-patient-report-rows",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/ActionNeededPatientReportRowResponse"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "schema": {
                            "properties": {
                                "message": {
                                    "description": "List action-needed-patient-report-rows",
                                    "type": "string",
                                    "example": "Please make sure that request parameters is correct"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/animal-journal-entries": {
            "get": {
                "tags": [
                    "animal-journal-entries"
                ],
                "summary": "List animal-journal-entries",
                "description": "Returns list of animal journal entries based on the given filters",
                "operationId": "getAnimalJournalEntries",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "description": "Including 'user', 'animal', 'price', 'vat_code', 'signer', 'animal_prescription', 'animal_owner_invoice_row'.",
                        "required": false,
                        "type": "array",
                        "allowEmptyValue": true,
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "default": ""
                    },
                    {
                        "name": "user_id",
                        "in": "query",
                        "description": "'user_id' field",
                        "required": false,
                        "type": "number",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "animal_id",
                        "in": "query",
                        "description": "'animal_id' field",
                        "required": false,
                        "type": "number",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "from_date",
                        "in": "query",
                        "description": "'from_date' field",
                        "required": false,
                        "type": "string",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "to_date",
                        "in": "query",
                        "description": "'to_date' field",
                        "required": false,
                        "type": "string",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "deleted",
                        "in": "query",
                        "description": "'deleted' field",
                        "required": false,
                        "type": "boolean",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "sort_by",
                        "in": "query",
                        "description": "'sort_by' field",
                        "required": false,
                        "type": "string",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "'per_page' field",
                        "required": false,
                        "type": "number",
                        "allowEmptyValue": true,
                        "default": ""
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "List animal-journal-entries",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/AnimalJournalEntryResponse"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "schema": {
                            "properties": {
                                "message": {
                                    "description": "List animal-journal-entries",
                                    "type": "string",
                                    "example": "Please make sure that request parameters is correct"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "animal-journal-entries"
                ],
                "summary": "Create an animal-journal-entry",
                "description": "Returns created animal journal entry based on the given filters",
                "operationId": "postAnimalJournalEntry",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Body of request (obligatory)",
                        "required": true,
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "Create an animal-journal-entry",
                                    "properties": {
                                        "attributes": {
                                            "description": "Create an animal-journal-entry",
                                            "properties": {
                                                "user_id": {
                                                    "description": "Create an animal-journal-entry",
                                                    "type": "number",
                                                    "example": 1
                                                },
                                                "animal_id": {
                                                    "description": "Create an animal-journal-entry",
                                                    "type": "number",
                                                    "example": 2
                                                },
                                                "entry_date": {
                                                    "description": "Create an animal-journal-entry",
                                                    "type": "string",
                                                    "example": "2028-10-22T00:00:00+02:00"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "Create an animal-journal-entry",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/AnimalJournalEntryResponse"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "schema": {
                            "properties": {
                                "message": {
                                    "description": "Create an animal-journal-entry",
                                    "type": "string",
                                    "example": "Please make sure that request parameters is correct"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/animal-journal-entries/{id}": {
            "get": {
                "tags": [
                    "animal-journal-entries"
                ],
                "summary": "Retrieve an animal-journal-entry",
                "description": "Returns certain animal journal entry based on the given filters",
                "operationId": "getAnimalJournalEntry",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "'id' field",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "description": "Including 'user', 'animal', 'price', 'vat_code', 'signer', 'animal_prescription', 'animal_owner_invoice_row'.",
                        "required": false,
                        "type": "array",
                        "allowEmptyValue": true,
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "default": ""
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "Retrieve an animal-journal-entry",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/AnimalJournalEntryResponse"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "schema": {
                            "properties": {
                                "message": {
                                    "description": "Retrieve an animal-journal-entry",
                                    "type": "string",
                                    "example": "Please make sure that request parameters is correct"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "animal-journal-entries"
                ],
                "summary": "Edit an animal-journal-entry",
                "description": "Returns edited animal journal entry based on the given filters",
                "operationId": "patchAnimalJournalEntry",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "'id' field",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Body of request (obligatory)",
                        "required": true,
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "Edit an animal-journal-entry",
                                    "properties": {
                                        "attributes": {
                                            "description": "Edit an animal-journal-entry",
                                            "properties": {
                                                "user_id": {
                                                    "description": "Edit an animal-journal-entry",
                                                    "type": "number",
                                                    "example": 1
                                                },
                                                "animal_id": {
                                                    "description": "Edit an animal-journal-entry",
                                                    "type": "number",
                                                    "example": 2
                                                },
                                                "entry_date": {
                                                    "description": "Edit an animal-journal-entry",
                                                    "type": "string",
                                                    "example": "2028-10-22T00:00:00+02:00"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "Edit an animal-journal-entry",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/AnimalJournalEntryResponse"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "schema": {
                            "properties": {
                                "message": {
                                    "description": "Edit an animal-journal-entry",
                                    "type": "string",
                                    "example": "Please make sure that request parameters is correct"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/animal-owners": {
            "get": {
                "tags": [
                    "animal-owners"
                ],
                "summary": "List animal-owners",
                "description": "Returns list of animal owners based on the given filters",
                "operationId": "getAnimalOwners",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "description": "Including 'legal_entity', 'person', 'animals', 'animal_prescriptions'.",
                        "required": false,
                        "type": "array",
                        "allowEmptyValue": true,
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "default": ""
                    },
                    {
                        "name": "deleted",
                        "in": "query",
                        "description": "'deleted' field",
                        "required": false,
                        "type": "boolean",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "organization_number",
                        "in": "query",
                        "description": "'organization_number' field",
                        "required": false,
                        "type": "number",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "social_security_number",
                        "in": "query",
                        "description": "'social_security_number' field",
                        "required": false,
                        "type": "string",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "sort_by",
                        "in": "query",
                        "description": "'sort_by' field",
                        "required": false,
                        "type": "string",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "'per_page' field",
                        "required": false,
                        "type": "number",
                        "allowEmptyValue": true,
                        "default": ""
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "List animal-owners",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/AnimalOwnerResponse"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "schema": {
                            "properties": {
                                "message": {
                                    "description": "List animal-owners",
                                    "type": "string",
                                    "example": "Please make sure that request parameters is correct"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "animal-owners"
                ],
                "summary": "Create an animal-owner",
                "description": "Returns created animal owner based on the given filters",
                "operationId": "postAnimalOwner",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Body of request (obligatory)",
                        "required": true,
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "Create an animal-owner",
                                    "properties": {
                                        "attributes": {
                                            "description": "Create an animal-owner",
                                            "properties": {
                                                "legal_entity_id": {
                                                    "description": "Create an animal-owner",
                                                    "type": "number",
                                                    "example": "The legal entity id field is required when person id is empty."
                                                },
                                                "person_id": {
                                                    "description": "Create an animal-owner",
                                                    "type": "number",
                                                    "example": "The person id field is required when legal entity id is empty."
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "Create an animal-owner",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/AnimalOwnerResponse"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "schema": {
                            "properties": {
                                "message": {
                                    "description": "Create an animal-owner",
                                    "type": "string",
                                    "example": "Please make sure that request parameters is correct"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/animal-owners/{id}": {
            "get": {
                "tags": [
                    "animal-owners"
                ],
                "summary": "Retrieve an animal-owner",
                "description": "Returns certain animal owner based on the given filters",
                "operationId": "getAnimalOwner",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "'id' field",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "Retrieve an animal-owner",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/AnimalOwnerResponse"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "schema": {
                            "properties": {
                                "message": {
                                    "description": "Retrieve an animal-owner",
                                    "type": "string",
                                    "example": "Please make sure that request parameters is correct"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "animal-owners"
                ],
                "summary": "Edit an animal-owner",
                "description": "Returns edited animal owner based on the given filters",
                "operationId": "patchAnimalOwner",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "'id' field",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "deleted",
                        "in": "query",
                        "description": "'deleted' field",
                        "required": false,
                        "type": "boolean",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Body of request (obligatory)",
                        "required": true,
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "Edit an animal-owner",
                                    "properties": {
                                        "attributes": {
                                            "description": "Edit an animal-owner",
                                            "properties": {
                                                "legal_entity_id": {
                                                    "description": "Edit an animal-owner",
                                                    "type": "number",
                                                    "example": "The legal entity id field is required when person id is empty."
                                                },
                                                "person_id": {
                                                    "description": "Edit an animal-owner",
                                                    "type": "number",
                                                    "example": "The person id field is required when legal entity id is empty."
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "Edit an animal-owner",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/AnimalOwnerResponse"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "schema": {
                            "properties": {
                                "message": {
                                    "description": "Edit an animal-owner",
                                    "type": "string",
                                    "example": "Please make sure that request parameters is correct"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/animal-prescription-rows": {
            "get": {
                "tags": [
                    "animal-prescription-rows"
                ],
                "summary": "List animal-prescription-rows",
                "description": "Returns a list of animal prescription rows based on the given filters",
                "operationId": "getAnimalPrescriptionRows",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "description": "Including 'animal_prescription', 'animal', 'license_pharmacy', 'animal_prescription_row_waiting_times'.",
                        "required": false,
                        "type": "array",
                        "allowEmptyValue": true,
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "default": ""
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "List animal-prescription-rows",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/AnimalPrescriptionRowResponse"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "schema": {
                            "properties": {
                                "message": {
                                    "description": "List animal-prescription-rows",
                                    "type": "string",
                                    "example": "Please make sure that request parameters is correct"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "animal-prescription-rows"
                ],
                "summary": "Create an animal-prescription-row",
                "description": "Returns created animal prescription row based on the given filters",
                "operationId": "postAnimalPrescriptionRow",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Body of request (obligatory)",
                        "required": true,
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "Create an animal-prescription-row",
                                    "properties": {
                                        "attributes": {
                                            "description": "Create an animal-prescription-row",
                                            "properties": {
                                                "animal_prescription_id": {
                                                    "description": "Create an animal-prescription-row",
                                                    "type": "number",
                                                    "example": true
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "Create an animal-prescription-row",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/AnimalPrescriptionRowResponse"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "schema": {
                            "properties": {
                                "message": {
                                    "description": "Create an animal-prescription-row",
                                    "type": "string",
                                    "example": "Please make sure that request parameters is correct"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/animal-prescription-rows/{id}": {
            "get": {
                "tags": [
                    "animal-prescription-rows"
                ],
                "summary": "Retrieve an animal-prescription-row",
                "description": "Returns certain animal prescription rows based on the given filters",
                "operationId": "getAnimalPrescriptionRow",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "'id' field",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "description": "Including 'animal_prescription', 'animal', 'license_pharmacy', 'animal_prescription_row_waiting_times'.",
                        "required": false,
                        "type": "array",
                        "allowEmptyValue": true,
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "default": ""
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "Retrieve an animal-prescription-row",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/AnimalPrescriptionRowResponse"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "schema": {
                            "properties": {
                                "message": {
                                    "description": "Retrieve an animal-prescription-row",
                                    "type": "string",
                                    "example": "Please make sure that request parameters is correct"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "animal-prescription-rows"
                ],
                "summary": "Edit an animal-prescription-row",
                "description": "Returns edited animal prescription rows based on the given filters",
                "operationId": "patchAnimalPrescriptionRow",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "'id' field",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Body of request (obligatory)",
                        "required": true,
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "Edit an animal-prescription-row",
                                    "properties": {
                                        "attributes": {
                                            "description": "Edit an animal-prescription-row",
                                            "properties": {
                                                "animal_prescription_id": {
                                                    "description": "Edit an animal-prescription-row",
                                                    "type": "number",
                                                    "example": true
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "Edit an animal-prescription-row",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/AnimalPrescriptionRowResponse"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "schema": {
                            "properties": {
                                "message": {
                                    "description": "Edit an animal-prescription-row",
                                    "type": "string",
                                    "example": "Please make sure that request parameters is correct"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/animal-prescriptions": {
            "get": {
                "tags": [
                    "animal-prescriptions"
                ],
                "summary": "List animal-prescriptions",
                "description": "Returns a list of animal prescriptions based on the given filters",
                "operationId": "getAnimalPrescriptions",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "description": "Including 'user', 'language', 'journal_pharmacy', 'journal_entry', 'animal_owner', 'animal_prescription_rows', 'animal_journal_entries', 'clinic'.",
                        "required": false,
                        "type": "array",
                        "allowEmptyValue": true,
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "default": ""
                    },
                    {
                        "name": "user_ids",
                        "in": "query",
                        "description": "'user_ids' field",
                        "required": false,
                        "type": "array",
                        "allowEmptyValue": true,
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "default": ""
                    },
                    {
                        "name": "animal_owner_id",
                        "in": "query",
                        "description": "'animal_owner_id' field",
                        "required": false,
                        "type": "string",
                        "allowEmptyValue": true
                    },
                    {
                        "name": "animal_id",
                        "in": "query",
                        "description": "'animal_id' field",
                        "required": false,
                        "type": "string",
                        "allowEmptyValue": true
                    },
                    {
                        "name": "deleted",
                        "in": "query",
                        "description": "'deleted' field",
                        "required": false,
                        "type": "boolean",
                        "allowEmptyValue": true
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "'status' field",
                        "required": false,
                        "type": "string",
                        "allowEmptyValue": true
                    },
                    {
                        "name": "query",
                        "in": "query",
                        "description": "'query' field",
                        "required": false,
                        "type": "array",
                        "allowEmptyValue": true,
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "default": ""
                    },
                    {
                        "name": "sort_by",
                        "in": "query",
                        "description": "'sort_by' field",
                        "required": false,
                        "type": "string",
                        "allowEmptyValue": true
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "'per_page' field",
                        "required": false,
                        "type": "number",
                        "allowEmptyValue": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "List animal-prescriptions",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/AnimalPrescriptionResponse"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "schema": {
                            "properties": {
                                "message": {
                                    "description": "List animal-prescriptions",
                                    "type": "string",
                                    "example": "Please make sure that request parameters is correct"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "animal-prescriptions"
                ],
                "summary": "Create an animal-prescription",
                "description": "Returns created animal prescription based on the given filters",
                "operationId": "postAnimalPrescription",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "order_line_id",
                        "in": "query",
                        "description": "'order_line_id' field",
                        "required": false,
                        "type": "string",
                        "allowEmptyValue": true
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Body of request (not obligatory)",
                        "required": false,
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "Create an animal-prescription",
                                    "properties": {
                                        "attributes": {
                                            "description": "Create an animal-prescription",
                                            "properties": {
                                                "accepted": {
                                                    "description": "Create an animal-prescription",
                                                    "type": "boolean",
                                                    "example": true
                                                },
                                                "date": {
                                                    "description": "Create an animal-prescription",
                                                    "type": "string",
                                                    "example": "2024-09-01T19:25:31+02:00"
                                                },
                                                "delivery_method": {
                                                    "description": "Create an animal-prescription",
                                                    "type": "string"
                                                },
                                                "prescriber_cit": {
                                                    "description": "Create an animal-prescription",
                                                    "type": "string"
                                                },
                                                "prescriber_code": {
                                                    "description": "Create an animal-prescription",
                                                    "type": "string"
                                                },
                                                "prescriber_name": {
                                                    "description": "Create an animal-prescription",
                                                    "type": "string"
                                                },
                                                "prescriber_number_or_name_of_house": {
                                                    "description": "Create an animal-prescription",
                                                    "type": "string"
                                                },
                                                "prescriber_postal_code": {
                                                    "description": "Create an animal-prescription",
                                                    "type": "string"
                                                },
                                                "prescriber_qualification_code": {
                                                    "description": "Create an animal-prescription",
                                                    "type": "string"
                                                },
                                                "prescriber_telecommunication": {
                                                    "description": "Create an animal-prescription",
                                                    "type": "string"
                                                },
                                                "prescribers_comment": {
                                                    "description": "Create an animal-prescription",
                                                    "type": "string"
                                                },
                                                "subject_of_care_city": {
                                                    "description": "Create an animal-prescription",
                                                    "type": "string"
                                                },
                                                "subject_of_care_family_name": {
                                                    "description": "Create an animal-prescription",
                                                    "type": "string"
                                                },
                                                "subject_of_care_first_given_name": {
                                                    "description": "Create an animal-prescription",
                                                    "type": "string"
                                                },
                                                "subject_of_care_id_scheme": {
                                                    "description": "Create an animal-prescription",
                                                    "type": "string"
                                                },
                                                "subject_of_care_id_value": {
                                                    "description": "Create an animal-prescription",
                                                    "type": "string"
                                                },
                                                "subject_of_care_postal_code": {
                                                    "description": "Create an animal-prescription",
                                                    "type": "string"
                                                },
                                                "subject_of_care_street_name": {
                                                    "description": "Create an animal-prescription",
                                                    "type": "string"
                                                },
                                                "subject_of_care_phone_number": {
                                                    "description": "Create an animal-prescription",
                                                    "type": "string"
                                                },
                                                "test_indicator": {
                                                    "description": "Create an animal-prescription",
                                                    "type": "string"
                                                },
                                                "callback_url": {
                                                    "description": "Create an animal-prescription",
                                                    "type": "string"
                                                },
                                                "uuid": {
                                                    "description": "Create an animal-prescription",
                                                    "type": "string"
                                                },
                                                "delivery_location_city": {
                                                    "description": "Create an animal-prescription",
                                                    "type": "string",
                                                    "example": "Stockholm"
                                                },
                                                "delivery_location_id": {
                                                    "description": "Create an animal-prescription",
                                                    "type": "string"
                                                },
                                                "delivery_location_postal_code": {
                                                    "description": "Create an animal-prescription",
                                                    "type": "string"
                                                },
                                                "delivery_location_street_name": {
                                                    "description": "Create an animal-prescription",
                                                    "type": "string"
                                                },
                                                "delivery_location_telecommunication": {
                                                    "description": "Create an animal-prescription",
                                                    "type": "string"
                                                },
                                                "include_prescription_fee": {
                                                    "description": "Create an animal-prescription",
                                                    "type": "boolean",
                                                    "example": true
                                                },
                                                "prescription_fee_including_vat": {
                                                    "description": "Create an animal-prescription",
                                                    "type": "number",
                                                    "example": 10
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "Create an animal-prescription",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/AnimalPrescriptionResponse"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "schema": {
                            "properties": {
                                "message": {
                                    "description": "Create an animal-prescription",
                                    "type": "string",
                                    "example": "Please make sure that request parameters is correct"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/animal-prescriptions/shortcut": {
            "post": {
                "tags": [
                    "animal-prescriptions"
                ],
                "summary": "Create an animal-prescription and all required relations",
                "description": "Returns created animal prescription, animal prescription rows and the following objects that are created if they don't already exist: animal, animal-owner, person, legal entity, pharmacy (based on designated_message_receiver) and pharmaceutical article (based on article_code, npl_pack_id or npl_id).",
                "operationId": "postAnimalPrescriptionShortcut",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Body of request (obligatory)",
                        "required": true,
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "Create an animal-prescription and all required relations",
                                    "properties": {
                                        "type": {
                                            "description": "Create an animal-prescription and all required relations",
                                            "type": "string",
                                            "example": "animal_prescription"
                                        },
                                        "attributes": {
                                            "description": "Create an animal-prescription and all required relations",
                                            "properties": {
                                                "designated_message_receiver": {
                                                    "description": "Create an animal-prescription and all required relations",
                                                    "type": "string",
                                                    "example": "7350045514448"
                                                },
                                                "delivery_method": {
                                                    "description": "Create an animal-prescription and all required relations",
                                                    "type": "string",
                                                    "example": "ADR"
                                                },
                                                "delivery_location_city": {
                                                    "description": "Create an animal-prescription and all required relations",
                                                    "type": "string",
                                                    "example": "Testort"
                                                },
                                                "delivery_location_id": {
                                                    "description": "Create an animal-prescription and all required relations",
                                                    "type": "string"
                                                },
                                                "delivery_location_postal_code": {
                                                    "description": "Create an animal-prescription and all required relations",
                                                    "type": "string",
                                                    "example": "12345"
                                                },
                                                "delivery_location_street_name": {
                                                    "description": "Create an animal-prescription and all required relations",
                                                    "type": "string",
                                                    "example": "Testgatan 1034"
                                                },
                                                "delivery_location_telecommunication": {
                                                    "description": "Create an animal-prescription and all required relations",
                                                    "type": "string"
                                                },
                                                "prescribers_comment": {
                                                    "description": "Create an animal-prescription and all required relations",
                                                    "type": "string"
                                                },
                                                "include_prescription_fee": {
                                                    "description": "Create an animal-prescription and all required relations",
                                                    "type": "boolean",
                                                    "example": true
                                                },
                                                "prescription_fee_including_vat": {
                                                    "description": "Create an animal-prescription and all required relations",
                                                    "type": "number",
                                                    "example": 100
                                                },
                                                "test_indicator": {
                                                    "description": "Create an animal-prescription and all required relations",
                                                    "type": "string",
                                                    "example": "false"
                                                },
                                                "callback_url": {
                                                    "description": "Create an animal-prescription and all required relations",
                                                    "type": "string",
                                                    "example": "https://vetmanager.se/erecetps/253/approved"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "relationships": {
                                            "description": "Create an animal-prescription and all required relations",
                                            "properties": {
                                                "animal_owner": {
                                                    "description": "Create an animal-prescription and all required relations",
                                                    "properties": {
                                                        "data": {
                                                            "description": "Create an animal-prescription and all required relations",
                                                            "properties": {
                                                                "type": {
                                                                    "description": "Create an animal-prescription and all required relations",
                                                                    "type": "string",
                                                                    "example": "animal_owner"
                                                                },
                                                                "relationships": {
                                                                    "description": "Create an animal-prescription and all required relations",
                                                                    "properties": {
                                                                        "legal_entity": {
                                                                            "description": "Create an animal-prescription and all required relations",
                                                                            "properties": {
                                                                                "data": {
                                                                                    "description": "Create an animal-prescription and all required relations",
                                                                                    "properties": {
                                                                                        "type": {
                                                                                            "description": "Create an animal-prescription and all required relations",
                                                                                            "type": "string",
                                                                                            "example": "legal_entity"
                                                                                        },
                                                                                        "attributes": {
                                                                                            "description": "Create an animal-prescription and all required relations",
                                                                                            "properties": {
                                                                                                "organization_number": {
                                                                                                    "description": "Create an animal-prescription and all required relations",
                                                                                                    "type": "string",
                                                                                                    "example": "1234123415"
                                                                                                },
                                                                                                "organization_name": {
                                                                                                    "description": "Create an animal-prescription and all required relations",
                                                                                                    "type": "string",
                                                                                                    "example": "Test AB"
                                                                                                },
                                                                                                "invoice_address_1": {
                                                                                                    "description": "Create an animal-prescription and all required relations",
                                                                                                    "type": "string",
                                                                                                    "example": "Katarinav\u00e4gen 15"
                                                                                                },
                                                                                                "invoice_address_2": {
                                                                                                    "description": "Create an animal-prescription and all required relations",
                                                                                                    "type": "string"
                                                                                                },
                                                                                                "invoice_postal_code": {
                                                                                                    "description": "Create an animal-prescription and all required relations",
                                                                                                    "type": "string",
                                                                                                    "example": "11645"
                                                                                                },
                                                                                                "invoice_city": {
                                                                                                    "description": "Create an animal-prescription and all required relations",
                                                                                                    "type": "string",
                                                                                                    "example": "STOCKHOLM"
                                                                                                },
                                                                                                "invoice_email_address": {
                                                                                                    "description": "Create an animal-prescription and all required relations",
                                                                                                    "type": "string",
                                                                                                    "example": "test@emailtest.com"
                                                                                                },
                                                                                                "invoice_phone_number": {
                                                                                                    "description": "Create an animal-prescription and all required relations",
                                                                                                    "type": "string"
                                                                                                },
                                                                                                "invoice_phone_number_2": {
                                                                                                    "description": "Create an animal-prescription and all required relations",
                                                                                                    "type": "string"
                                                                                                },
                                                                                                "invoice_phone_mobile": {
                                                                                                    "description": "Create an animal-prescription and all required relations",
                                                                                                    "type": "string",
                                                                                                    "example": "46734100450"
                                                                                                },
                                                                                                "invoice_fax": {
                                                                                                    "description": "Create an animal-prescription and all required relations",
                                                                                                    "type": "string"
                                                                                                }
                                                                                            },
                                                                                            "type": "object"
                                                                                        }
                                                                                    },
                                                                                    "type": "object"
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        },
                                                                        "person": {
                                                                            "description": "Create an animal-prescription and all required relations",
                                                                            "properties": {
                                                                                "data": {
                                                                                    "description": "Create an animal-prescription and all required relations",
                                                                                    "type": "string"
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                }
                                                            },
                                                            "type": "object"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "animal_prescription_rows": {
                                                    "description": "Create an animal-prescription and all required relations",
                                                    "properties": {
                                                        "data": {
                                                            "description": "Create an animal-prescription and all required relations",
                                                            "type": "array",
                                                            "items": {
                                                                "properties": {
                                                                    "type": {
                                                                        "description": "Create an animal-prescription and all required relations",
                                                                        "type": "string",
                                                                        "example": "animal_prescription_row"
                                                                    },
                                                                    "attributes": {
                                                                        "description": "Create an animal-prescription and all required relations",
                                                                        "properties": {
                                                                            "dispensing_repeat_number": {
                                                                                "description": "Create an animal-prescription and all required relations",
                                                                                "type": "number",
                                                                                "example": 1
                                                                            },
                                                                            "dispensing_repeat_time_unit": {
                                                                                "description": "Create an animal-prescription and all required relations",
                                                                                "type": "string",
                                                                                "example": "Mn"
                                                                            },
                                                                            "dispensing_repeat_time_value": {
                                                                                "description": "Create an animal-prescription and all required relations",
                                                                                "type": "number",
                                                                                "example": 12
                                                                            },
                                                                            "latest_requested_time_for_dispensing": {
                                                                                "description": "Create an animal-prescription and all required relations",
                                                                                "type": "string",
                                                                                "example": "2029-10-12T00:00:00+02:00"
                                                                            },
                                                                            "nvn": {
                                                                                "description": "Create an animal-prescription and all required relations",
                                                                                "type": "number",
                                                                                "example": 640000
                                                                            },
                                                                            "number_of_packages": {
                                                                                "description": "Create an animal-prescription and all required relations",
                                                                                "type": "number",
                                                                                "example": 1
                                                                            },
                                                                            "unstructured_dosage_admin": {
                                                                                "description": "Create an animal-prescription and all required relations",
                                                                                "type": "string",
                                                                                "example": "Injiceras subcutant enligt schema. Mot allergi."
                                                                            },
                                                                            "dosage_form": {
                                                                                "description": "Create an animal-prescription and all required relations",
                                                                                "type": "string",
                                                                                "example": "injektionsl\u00f6sning"
                                                                            },
                                                                            "license_id": {
                                                                                "description": "Create an animal-prescription and all required relations",
                                                                                "type": "number",
                                                                                "example": 2018320512
                                                                            },
                                                                            "package_content": {
                                                                                "description": "Create an animal-prescription and all required relations",
                                                                                "type": "number",
                                                                                "example": 1
                                                                            },
                                                                            "quantity": {
                                                                                "description": "Create an animal-prescription and all required relations",
                                                                                "type": "number",
                                                                                "example": 1
                                                                            },
                                                                            "quantity_unit": {
                                                                                "description": "Create an animal-prescription and all required relations",
                                                                                "type": "string",
                                                                                "example": "st"
                                                                            },
                                                                            "strength": {
                                                                                "description": "Create an animal-prescription and all required relations",
                                                                                "type": "string",
                                                                                "example": "individuell"
                                                                            },
                                                                            "supplementary_information": {
                                                                                "description": "Create an animal-prescription and all required relations",
                                                                                "type": "string",
                                                                                "example": "immucept"
                                                                            },
                                                                            "delegated": {
                                                                                "description": "Create an animal-prescription and all required relations",
                                                                                "type": "boolean",
                                                                                "example": true
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    },
                                                                    "relationships": {
                                                                        "description": "Create an animal-prescription and all required relations",
                                                                        "properties": {
                                                                            "journal_pharmaceutical_article": {
                                                                                "description": "Create an animal-prescription and all required relations",
                                                                                "properties": {
                                                                                    "data": {
                                                                                        "description": "Create an animal-prescription and all required relations",
                                                                                        "properties": {
                                                                                            "type": {
                                                                                                "description": "Create an animal-prescription and all required relations",
                                                                                                "type": "string",
                                                                                                "example": "journal_pharmaceutical_article"
                                                                                            },
                                                                                            "attributes": {
                                                                                                "description": "Create an animal-prescription and all required relations",
                                                                                                "properties": {
                                                                                                    "npl_pack_id": {
                                                                                                        "description": "Create an animal-prescription and all required relations",
                                                                                                        "type": "string",
                                                                                                        "example": "20101220100540"
                                                                                                    },
                                                                                                    "npl_id": {
                                                                                                        "description": "Create an animal-prescription and all required relations",
                                                                                                        "type": "string",
                                                                                                        "example": "20050505000030"
                                                                                                    }
                                                                                                },
                                                                                                "type": "object"
                                                                                            }
                                                                                        },
                                                                                        "type": "object"
                                                                                    }
                                                                                },
                                                                                "type": "object"
                                                                            },
                                                                            "animal": {
                                                                                "description": "Create an animal-prescription and all required relations",
                                                                                "properties": {
                                                                                    "data": {
                                                                                        "description": "Create an animal-prescription and all required relations",
                                                                                        "properties": {
                                                                                            "type": {
                                                                                                "description": "Create an animal-prescription and all required relations",
                                                                                                "type": "string",
                                                                                                "example": "animal"
                                                                                            },
                                                                                            "attributes": {
                                                                                                "description": "Create an animal-prescription and all required relations",
                                                                                                "properties": {
                                                                                                    "animal_identification": {
                                                                                                        "description": "Create an animal-prescription and all required relations",
                                                                                                        "type": "string",
                                                                                                        "example": "Nytt test2"
                                                                                                    },
                                                                                                    "animal_id_qualifier": {
                                                                                                        "description": "Create an animal-prescription and all required relations",
                                                                                                        "type": "string",
                                                                                                        "example": "IND2"
                                                                                                    }
                                                                                                },
                                                                                                "type": "object"
                                                                                            },
                                                                                            "relationships": {
                                                                                                "description": "Create an animal-prescription and all required relations",
                                                                                                "properties": {
                                                                                                    "animal_species": {
                                                                                                        "description": "Create an animal-prescription and all required relations",
                                                                                                        "properties": {
                                                                                                            "data": {
                                                                                                                "description": "Create an animal-prescription and all required relations",
                                                                                                                "properties": {
                                                                                                                    "type": {
                                                                                                                        "description": "Create an animal-prescription and all required relations",
                                                                                                                        "type": "string",
                                                                                                                        "example": "animal_species"
                                                                                                                    },
                                                                                                                    "attributes": {
                                                                                                                        "description": "Create an animal-prescription and all required relations",
                                                                                                                        "properties": {
                                                                                                                            "code": {
                                                                                                                                "description": "Create an animal-prescription and all required relations",
                                                                                                                                "type": "string",
                                                                                                                                "example": "051"
                                                                                                                            }
                                                                                                                        },
                                                                                                                        "type": "object"
                                                                                                                    }
                                                                                                                },
                                                                                                                "type": "object"
                                                                                                            }
                                                                                                        },
                                                                                                        "type": "object"
                                                                                                    }
                                                                                                },
                                                                                                "type": "object"
                                                                                            }
                                                                                        },
                                                                                        "type": "object"
                                                                                    }
                                                                                },
                                                                                "type": "object"
                                                                            },
                                                                            "animal_prescription_row_waiting_times": {
                                                                                "description": "Create an animal-prescription and all required relations",
                                                                                "properties": {
                                                                                    "data": {
                                                                                        "description": "Create an animal-prescription and all required relations",
                                                                                        "properties": {
                                                                                            "type": {
                                                                                                "description": "Create an animal-prescription and all required relations",
                                                                                                "type": "string",
                                                                                                "example": "animal_prescription_row_waiting_time"
                                                                                            },
                                                                                            "attributes": {
                                                                                                "description": "Create an animal-prescription and all required relations",
                                                                                                "properties": {
                                                                                                    "number_of_days": {
                                                                                                        "description": "Create an animal-prescription and all required relations",
                                                                                                        "type": "number",
                                                                                                        "example": 0
                                                                                                    },
                                                                                                    "type": {
                                                                                                        "description": "Create an animal-prescription and all required relations",
                                                                                                        "type": "string",
                                                                                                        "example": "SLAKT"
                                                                                                    }
                                                                                                },
                                                                                                "type": "object"
                                                                                            }
                                                                                        },
                                                                                        "type": "array",
                                                                                        "items": {
                                                                                            "properties": {
                                                                                                "type": {
                                                                                                    "description": "Create an animal-prescription and all required relations",
                                                                                                    "type": "string",
                                                                                                    "example": "animal_prescription_row_waiting_time"
                                                                                                },
                                                                                                "attributes": {
                                                                                                    "description": "Create an animal-prescription and all required relations",
                                                                                                    "properties": {
                                                                                                        "number_of_days": {
                                                                                                            "description": "Create an animal-prescription and all required relations",
                                                                                                            "type": "number",
                                                                                                            "example": 1
                                                                                                        },
                                                                                                        "type": {
                                                                                                            "description": "Create an animal-prescription and all required relations",
                                                                                                            "type": "string",
                                                                                                            "example": "MJOLK"
                                                                                                        }
                                                                                                    },
                                                                                                    "type": "object"
                                                                                                }
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                },
                                                                                "type": "object"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "Create an animal-prescription and all required relations",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/AnimalPrescriptionResponse"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "schema": {
                            "properties": {
                                "message": {
                                    "description": "Create an animal-prescription and all required relations",
                                    "type": "string",
                                    "example": "Please make sure that request parameters is correct"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/animal-prescriptions/{id}": {
            "get": {
                "tags": [
                    "animal-prescriptions"
                ],
                "summary": "Retrieve an animal-prescription",
                "description": "Returns certain animal prescription based on the given filters",
                "operationId": "getAnimalPrescription",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "'id' field",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "description": "Including 'user', 'language', 'journal_pharmacy', 'journal_entry', 'animal_owner', 'animal_prescription_rows', 'animal_journal_entries', 'clinic'.",
                        "required": false,
                        "type": "array",
                        "allowEmptyValue": true,
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "default": ""
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "Retrieve an animal-prescription",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/AnimalPrescriptionResponse"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "schema": {
                            "properties": {
                                "message": {
                                    "description": "Retrieve an animal-prescription",
                                    "type": "string",
                                    "example": "Please make sure that request parameters is correct"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "animal-prescriptions"
                ],
                "summary": "Edit an animal-prescription",
                "description": "Returns edited animal prescription based on the given filters",
                "operationId": "patchAnimalPrescription",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "'id' field",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "order_line_id",
                        "in": "query",
                        "description": "'order_line_id' field",
                        "required": false,
                        "type": "string",
                        "allowEmptyValue": true
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Body of request (not obligatory)",
                        "required": false,
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "Edit an animal-prescription",
                                    "properties": {
                                        "attributes": {
                                            "description": "Edit an animal-prescription",
                                            "properties": {
                                                "accepted": {
                                                    "description": "Edit an animal-prescription",
                                                    "type": "boolean",
                                                    "example": true
                                                },
                                                "date": {
                                                    "description": "Edit an animal-prescription",
                                                    "type": "string",
                                                    "example": "2024-09-01T19:25:31+02:00"
                                                },
                                                "delivery_method": {
                                                    "description": "Edit an animal-prescription",
                                                    "type": "string"
                                                },
                                                "prescriber_cit": {
                                                    "description": "Edit an animal-prescription",
                                                    "type": "string"
                                                },
                                                "prescriber_code": {
                                                    "description": "Edit an animal-prescription",
                                                    "type": "string"
                                                },
                                                "prescriber_name": {
                                                    "description": "Edit an animal-prescription",
                                                    "type": "string"
                                                },
                                                "prescriber_number_or_name_of_house": {
                                                    "description": "Edit an animal-prescription",
                                                    "type": "string"
                                                },
                                                "prescriber_postal_code": {
                                                    "description": "Edit an animal-prescription",
                                                    "type": "string"
                                                },
                                                "prescriber_qualification_code": {
                                                    "description": "Edit an animal-prescription",
                                                    "type": "string"
                                                },
                                                "prescriber_telecommunication": {
                                                    "description": "Edit an animal-prescription",
                                                    "type": "string"
                                                },
                                                "prescribers_comment": {
                                                    "description": "Edit an animal-prescription",
                                                    "type": "string"
                                                },
                                                "subject_of_care_city": {
                                                    "description": "Edit an animal-prescription",
                                                    "type": "string"
                                                },
                                                "subject_of_care_family_name": {
                                                    "description": "Edit an animal-prescription",
                                                    "type": "string"
                                                },
                                                "subject_of_care_first_given_name": {
                                                    "description": "Edit an animal-prescription",
                                                    "type": "string"
                                                },
                                                "subject_of_care_id_scheme": {
                                                    "description": "Edit an animal-prescription",
                                                    "type": "string"
                                                },
                                                "subject_of_care_id_value": {
                                                    "description": "Edit an animal-prescription",
                                                    "type": "string"
                                                },
                                                "subject_of_care_postal_code": {
                                                    "description": "Edit an animal-prescription",
                                                    "type": "string"
                                                },
                                                "subject_of_care_street_name": {
                                                    "description": "Edit an animal-prescription",
                                                    "type": "string"
                                                },
                                                "subject_of_care_phone_number": {
                                                    "description": "Edit an animal-prescription",
                                                    "type": "string"
                                                },
                                                "test_indicator": {
                                                    "description": "Edit an animal-prescription",
                                                    "type": "string"
                                                },
                                                "callback_url": {
                                                    "description": "Edit an animal-prescription",
                                                    "type": "string"
                                                },
                                                "uuid": {
                                                    "description": "Edit an animal-prescription",
                                                    "type": "string"
                                                },
                                                "delivery_location_city": {
                                                    "description": "Edit an animal-prescription",
                                                    "type": "string",
                                                    "example": "Stockholm"
                                                },
                                                "delivery_location_id": {
                                                    "description": "Edit an animal-prescription",
                                                    "type": "string"
                                                },
                                                "delivery_location_postal_code": {
                                                    "description": "Edit an animal-prescription",
                                                    "type": "string"
                                                },
                                                "delivery_location_street_name": {
                                                    "description": "Edit an animal-prescription",
                                                    "type": "string"
                                                },
                                                "delivery_location_telecommunication": {
                                                    "description": "Edit an animal-prescription",
                                                    "type": "string"
                                                },
                                                "include_prescription_fee": {
                                                    "description": "Edit an animal-prescription",
                                                    "type": "boolean",
                                                    "example": true
                                                },
                                                "prescription_fee_including_vat": {
                                                    "description": "Edit an animal-prescription",
                                                    "type": "number",
                                                    "example": 10
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "Edit an animal-prescription",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/AnimalPrescriptionResponse"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "schema": {
                            "properties": {
                                "message": {
                                    "description": "Edit an animal-prescription",
                                    "type": "string",
                                    "example": "Please make sure that request parameters is correct"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/animal-species": {
            "get": {
                "tags": [
                    "animal-species"
                ],
                "summary": "List animal-species",
                "description": "Returns list of animal species based on the given filters",
                "operationId": "getAnimalSpecies",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "code",
                        "in": "query",
                        "description": "'code' field",
                        "required": false,
                        "type": "number",
                        "allowEmptyValue": true,
                        "default": ""
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "List animal-species",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/AnimalSpeciesResponse"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "schema": {
                            "properties": {
                                "message": {
                                    "description": "List animal-species",
                                    "type": "string",
                                    "example": "Please make sure that request parameters is correct"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/animal-species/{id}": {
            "get": {
                "tags": [
                    "animal-species"
                ],
                "summary": "Retrieve an animal-species",
                "description": "Returns certain animal species based on the given filters",
                "operationId": "getAnimalSpeciesById",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "'id' field",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "Retrieve an animal-species",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/AnimalSpeciesResponse"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "schema": {
                            "properties": {
                                "message": {
                                    "description": "Retrieve an animal-species",
                                    "type": "string",
                                    "example": "Please make sure that request parameters is correct"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/animals": {
            "get": {
                "tags": [
                    "animals"
                ],
                "summary": "List an animals",
                "description": "Returns a list of animals based on the given filters",
                "operationId": "getAnimals",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "description": "Including 'animal_owner', 'animal_species'.",
                        "required": false,
                        "type": "array",
                        "allowEmptyValue": true,
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "default": ""
                    },
                    {
                        "name": "deleted",
                        "in": "query",
                        "description": "'deleted' field",
                        "required": false,
                        "type": "boolean",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "animal_owner_id",
                        "in": "query",
                        "description": "'animal_owner_id' field",
                        "required": false,
                        "type": "number",
                        "allowEmptyValue": true,
                        "default": ""
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "List an animals",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/AnimalResponse"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "schema": {
                            "properties": {
                                "message": {
                                    "description": "List an animals",
                                    "type": "string",
                                    "example": "Please make sure that request parameters is correct"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "animals"
                ],
                "summary": "Create an animal",
                "description": "Returns created animal based on the given filters",
                "operationId": "postAnimal",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Body of request (obligatory)",
                        "required": true,
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "Create an animal",
                                    "properties": {
                                        "attributes": {
                                            "description": "Create an animal",
                                            "properties": {
                                                "animal_owner_id": {
                                                    "description": "Create an animal",
                                                    "type": "number",
                                                    "example": 1
                                                },
                                                "animal_species_id": {
                                                    "description": "Create an animal",
                                                    "type": "number",
                                                    "example": 2
                                                },
                                                "animal_identification": {
                                                    "description": "Create an animal",
                                                    "type": "number",
                                                    "example": 3
                                                },
                                                "animal_id_qualifier": {
                                                    "description": "Create an animal",
                                                    "type": "number",
                                                    "example": 4
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "Create an animal",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/AnimalResponse"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "schema": {
                            "properties": {
                                "message": {
                                    "description": "Create an animal",
                                    "type": "string",
                                    "example": "Please make sure that request parameters is correct"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/animals/{id}": {
            "get": {
                "tags": [
                    "animals"
                ],
                "summary": "Retrieve an animal",
                "description": "Returns certain animal based on the given filters",
                "operationId": "getAnimal",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "'id' field",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "description": "Including 'animal_owner', 'animal_species'.",
                        "required": false,
                        "type": "array",
                        "allowEmptyValue": true,
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "default": ""
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "Retrieve an animal",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/AnimalResponse"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "schema": {
                            "properties": {
                                "message": {
                                    "description": "Retrieve an animal",
                                    "type": "string",
                                    "example": "Please make sure that request parameters is correct"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "animals"
                ],
                "summary": "Edit an animal",
                "description": "Returns edited animal based on the given filters",
                "operationId": "patchAnimal",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "'id' field",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "description": "Including 'animal_owner', 'animal_species'.",
                        "required": false,
                        "type": "array",
                        "allowEmptyValue": true,
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "default": ""
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "Edit an animal",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/AnimalResponse"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "schema": {
                            "properties": {
                                "message": {
                                    "description": "Edit an animal",
                                    "type": "string",
                                    "example": "Please make sure that request parameters is correct"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/anonymous-claim-payments": {
            "get": {
                "tags": [
                    "anonymous-claim-payments"
                ],
                "summary": "List anonymous-claim-payments",
                "description": "Returns list of anonymous claim payments based on the given filters",
                "operationId": "getAnonymousClaimPayments",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "description": "Including 'claim_payment_specification', 'claim'.",
                        "required": false,
                        "type": "array",
                        "allowEmptyValue": true,
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "default": ""
                    },
                    {
                        "name": "claim_payment_specification_id",
                        "in": "query",
                        "description": "'claim_payment_specification_id' field",
                        "required": false,
                        "type": "number",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "'status' field",
                        "required": false,
                        "type": "string",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "sort_by",
                        "in": "query",
                        "description": "'sort_by' field",
                        "required": false,
                        "type": "string",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "'per_page' field",
                        "required": false,
                        "type": "number",
                        "allowEmptyValue": true,
                        "default": ""
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "List anonymous-claim-payments",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/AnonymousClaimPaymentResponse"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "schema": {
                            "properties": {
                                "message": {
                                    "description": "List anonymous-claim-payments",
                                    "type": "string",
                                    "example": "Please make sure that request parameters is correct"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/anonymous-claim-payments/{id}": {
            "get": {
                "tags": [
                    "anonymous-claim-payments"
                ],
                "summary": "Retrieve a anonymous-claim-payment",
                "description": "Returns certain anonymous claim payment based on the given filters",
                "operationId": "getAnonymousClaimPayment",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Bearer token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "description": "Including 'claim_payment_specification', 'claim'.",
                        "required": false,
                        "type": "array",
                        "allowEmptyValue": true,
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "default": ""
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "Retrieve a anonymous-claim-payment",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/AnonymousClaimPaymentResponse"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "schema": {
                            "properties": {
                                "message": {
                                    "description": "Retrieve a anonymous-claim-payment",
                                    "type": "string",
                                    "example": "Please make sure that request parameters is correct"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/anonymous-claims": {
            "get": {
                "tags": [
                    "anonymous-claims"
                ],
                "summary": "List anonymous-claims",
                "description": "Returns list of anonymous claims based on the given filters",
                "operationId": "getAnonymousClaims",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "clinic_ids",
                        "in": "query",
                        "description": "'clinic_ids' field",
                        "required": false,
                        "type": "array",
                        "allowEmptyValue": true,
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "default": ""
                    },
                    {
                        "name": "user_id",
                        "in": "query",
                        "description": "'user_id' field",
                        "required": false,
                        "type": "string",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "submitted",
                        "in": "query",
                        "description": "'submitted' field",
                        "required": false,
                        "type": "boolean",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "validated",
                        "in": "query",
                        "description": "'validated' field",
                        "required": false,
                        "type": "boolean",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "from_date",
                        "in": "query",
                        "description": "'from_date' field",
                        "required": false,
                        "type": "string",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "to_date",
                        "in": "query",
                        "description": "'to_date' field",
                        "required": false,
                        "type": "string",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "sort_by",
                        "in": "query",
                        "description": "'sort_by' field",
                        "required": false,
                        "type": "string",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "'per_page' field",
                        "required": false,
                        "type": "string",
                        "allowEmptyValue": true,
                        "default": ""
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "List anonymous-claims",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/AnonymousClaimResponse"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "schema": {
                            "properties": {
                                "message": {
                                    "description": "List anonymous-claims",
                                    "type": "string",
                                    "example": "Please make sure that request parameters is correct"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/anonymous-claims/{id}": {
            "get": {
                "tags": [
                    "anonymous-claims"
                ],
                "summary": "Retrieve a anonymous-claim",
                "description": "Returns certain anonymous claim based on the given filters",
                "operationId": "getAnonymousClaim",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "'id' field",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "Retrieve a anonymous-claim",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/AnonymousClaimResponse"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "schema": {
                            "properties": {
                                "message": {
                                    "description": "Retrieve a anonymous-claim",
                                    "type": "string",
                                    "example": "Please make sure that request parameters is correct"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "anonymous-claims"
                ],
                "summary": "Edit a anonymous-claim",
                "description": "Returns edited anonymous claim based on the given filters",
                "operationId": "patchAnonymousClaim",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "'id' field",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Body of request (not obligatory)",
                        "required": false,
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "Edit a anonymous-claim",
                                    "properties": {
                                        "attributes": {
                                            "description": "Edit a anonymous-claim",
                                            "properties": {
                                                "verification_id": {
                                                    "description": "Edit a anonymous-claim",
                                                    "type": "number",
                                                    "example": "1"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "Edit a anonymous-claim",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/AnonymousClaimResponse"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "schema": {
                            "properties": {
                                "message": {
                                    "description": "Edit a anonymous-claim",
                                    "type": "string",
                                    "example": "Please make sure that request parameters is correct"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/anonymous-invoice-payments": {
            "get": {
                "tags": [
                    "anonymous-invoice-payments"
                ],
                "summary": "List anonymous-invoice-payments",
                "description": "Returns a list of anonymous invoice payments based on the given filters",
                "operationId": "getAnonymouseInvoicePayments",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "description": "Including 'patient', 'patient_invoice', 'payments_per_invoices', 'patient_payment_method', 'daily_reconciliation', 'payment_service'.",
                        "required": false,
                        "type": "array",
                        "allowEmptyValue": true,
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "default": ""
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "List anonymous-invoice-payments",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/AnonymouseInvoicePaymentResponse"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "schema": {
                            "properties": {
                                "message": {
                                    "description": "List anonymous-invoice-payments",
                                    "type": "string",
                                    "example": "Please make sure that request parameters is correct"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "anonymous-invoice-payments"
                ],
                "summary": "Create an anonymous-invoice-payment",
                "description": "Returns created anonymous invoice payment based on the given filters",
                "operationId": "postAnonymouseInvoicePayment",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Body of request (obligatory)",
                        "required": true,
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "Create an anonymous-invoice-payment",
                                    "properties": {
                                        "attributes": {
                                            "description": "Create an anonymous-invoice-payment",
                                            "properties": {
                                                "currency_id": {
                                                    "description": "Create an anonymous-invoice-payment",
                                                    "type": "string"
                                                },
                                                "payment_type_id": {
                                                    "description": "Create an anonymous-invoice-payment",
                                                    "type": "number",
                                                    "example": 1
                                                },
                                                "fiscal_year_id": {
                                                    "description": "Create an anonymous-invoice-payment",
                                                    "type": "string",
                                                    "example": "John"
                                                },
                                                "custom_payment_type_id": {
                                                    "description": "Create an anonymous-invoice-payment",
                                                    "type": "string",
                                                    "example": "Otto"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "Create an anonymous-invoice-payment",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/AnonymouseInvoicePaymentResponse"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "schema": {
                            "properties": {
                                "message": {
                                    "description": "Create an anonymous-invoice-payment",
                                    "type": "string",
                                    "example": "Please make sure that request parameters is correct"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/anonymous-invoice-payments/{id}": {
            "patch": {
                "tags": [
                    "anonymous-invoice-payments"
                ],
                "summary": "Edit an anonymous-invoice-payment",
                "description": "Returns edited anonymous invoice payment based on the given filters",
                "operationId": "patchAnonymouseInvoicePayment",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "'id' field",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Body of request (not obligatory)",
                        "required": true,
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "Edit an anonymous-invoice-payment",
                                    "properties": {
                                        "attributes": {
                                            "description": "Edit an anonymous-invoice-payment",
                                            "properties": {
                                                "currency_id": {
                                                    "description": "Edit an anonymous-invoice-payment",
                                                    "type": "string"
                                                },
                                                "payment_type_id": {
                                                    "description": "Edit an anonymous-invoice-payment",
                                                    "type": "number",
                                                    "example": 1
                                                },
                                                "fiscal_year_id": {
                                                    "description": "Edit an anonymous-invoice-payment",
                                                    "type": "string",
                                                    "example": "John"
                                                },
                                                "custom_payment_type_id": {
                                                    "description": "Edit an anonymous-invoice-payment",
                                                    "type": "string",
                                                    "example": "Otto"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "Edit an anonymous-invoice-payment",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/AnonymouseInvoicePaymentResponse"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "schema": {
                            "properties": {
                                "message": {
                                    "description": "Edit an anonymous-invoice-payment",
                                    "type": "string",
                                    "example": "Please make sure that request parameters is correct"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/anonymous-patient-invoices": {
            "get": {
                "tags": [
                    "anonymous-patient-invoices"
                ],
                "summary": "List anonymous-patient-invoices",
                "description": "Returns a list of anonymous patient invoices based on the given filters",
                "operationId": "getAnonymousPatientInvoices",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "description": "Including 'organization', 'user', 'fiscal_year', 'verification', 'invoice_type', 'payment_type', 'currency', 'patient', 'county_council'.",
                        "required": false,
                        "type": "array",
                        "allowEmptyValue": true,
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "default": ""
                    },
                    {
                        "name": "fiscal_year_id",
                        "in": "query",
                        "description": "'fiscal_year_id' field",
                        "required": false,
                        "type": "number",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "clinic_ids",
                        "in": "query",
                        "description": "'clinic_ids' field",
                        "required": false,
                        "type": "array",
                        "allowEmptyValue": true,
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "default": ""
                    },
                    {
                        "name": "patient_id",
                        "in": "query",
                        "description": "'patient_id' field",
                        "required": false,
                        "type": "string",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "invoice_type_ids",
                        "in": "query",
                        "description": "'invoice_type_ids' field",
                        "required": false,
                        "type": "array",
                        "allowEmptyValue": true,
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "default": ""
                    },
                    {
                        "name": "category",
                        "in": "query",
                        "description": "'category' field",
                        "required": false,
                        "type": "string",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "only_third_party_tags",
                        "in": "query",
                        "description": "'only_third_party_tags' field",
                        "required": false,
                        "type": "string",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "exclude_third_party_tags",
                        "in": "query",
                        "description": "'exclude_third_party_tags' field",
                        "required": false,
                        "type": "string",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "printed",
                        "in": "query",
                        "description": "'printed' field",
                        "required": false,
                        "type": "boolean",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "only_include_unbooked_patients",
                        "in": "query",
                        "description": "'only_include_unbooked_patients' field",
                        "required": false,
                        "type": "boolean",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "has_reminder",
                        "in": "query",
                        "description": "'has_reminder' field",
                        "required": false,
                        "type": "boolean",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "deleted",
                        "in": "query",
                        "description": "'deleted' field",
                        "required": false,
                        "type": "boolean",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "from_date",
                        "in": "query",
                        "description": "'from_date' field",
                        "required": false,
                        "type": "string",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "to_date",
                        "in": "query",
                        "description": "'to_date' field (required when 'from_date' provided)",
                        "required": false,
                        "type": "string",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "receipt_from_date",
                        "in": "query",
                        "description": "'receipt_from_date' field",
                        "required": false,
                        "type": "string",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "caregiver_ids",
                        "in": "query",
                        "description": "'caregiver_ids' field",
                        "required": false,
                        "type": "array",
                        "allowEmptyValue": true,
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "default": ""
                    },
                    {
                        "name": "location_ids",
                        "in": "query",
                        "description": "'location_ids' field",
                        "required": false,
                        "type": "array",
                        "allowEmptyValue": true,
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "default": ""
                    },
                    {
                        "name": "user_id",
                        "in": "query",
                        "description": "'user_id' field",
                        "required": false,
                        "type": "string",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "query",
                        "in": "query",
                        "description": "'query' field",
                        "required": false,
                        "type": "array",
                        "allowEmptyValue": true,
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "default": ""
                    },
                    {
                        "name": "sort_by",
                        "in": "query",
                        "description": "'sort_by' field",
                        "required": false,
                        "type": "string",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "'per_page' field",
                        "required": false,
                        "type": "number",
                        "allowEmptyValue": true,
                        "default": ""
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "List anonymous-patient-invoices",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/AnonymousPatientInvoicesResponse"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "schema": {
                            "properties": {
                                "message": {
                                    "description": "List anonymous-patient-invoices",
                                    "type": "string",
                                    "example": "Please make sure that request parameters is correct"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/anonymous-patient-invoices/{id}": {
            "get": {
                "tags": [
                    "anonymous-patient-invoices"
                ],
                "summary": "Retrieve an anonymous-patient-invoice",
                "description": "Returns a certain anonymous patient invoice based on the given filters",
                "operationId": "getAnonymousPatientInvoice",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Bearer token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "description": "Including 'organization', 'user', 'fiscal_year', 'verification', 'invoice_type', 'payment_type', 'currency', 'patient', 'county_council'.",
                        "required": false,
                        "type": "array",
                        "allowEmptyValue": true,
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "default": ""
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "Retrieve an anonymous-patient-invoice",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/AnonymousPatientInvoicesResponse"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "schema": {
                            "properties": {
                                "message": {
                                    "description": "Retrieve an anonymous-patient-invoice",
                                    "type": "string",
                                    "example": "Please make sure that request parameters is correct"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "anonymous-patient-invoices"
                ],
                "summary": "Edit an anonymous-patient-invoice",
                "description": "Returns a edited anonymous patient invoice based on the given filters",
                "operationId": "patchAnonymousPatientInvoice",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "'id' field",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Body of request (obligatory)",
                        "required": true,
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "Edit an anonymous-patient-invoice",
                                    "properties": {
                                        "attributes": {
                                            "description": "Edit an anonymous-patient-invoice",
                                            "properties": {
                                                "invoice_type_id": {
                                                    "description": "Edit an anonymous-patient-invoice",
                                                    "type": "number"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "Edit an anonymous-patient-invoice",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/AnonymousPatientInvoicesResponse"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "schema": {
                            "properties": {
                                "message": {
                                    "description": "Edit an anonymous-patient-invoice",
                                    "type": "string",
                                    "example": "Please make sure that request parameters is correct"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/anonymous-payment-report-rows": {
            "get": {
                "tags": [
                    "anonymous-payment-report-rows"
                ],
                "summary": "List anonymous-payment-report-rows",
                "description": "Returns a list of anonymous payment report rows based on the given filters",
                "operationId": "getAnonymousPaymentReportRows",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "description": "Including 'currency'.",
                        "required": false,
                        "type": "array",
                        "allowEmptyValue": true,
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "default": ""
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "List anonymous-payment-report-rows",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/AnonymousPaymentReportRowResponse"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "schema": {
                            "properties": {
                                "message": {
                                    "description": "List anonymous-payment-report-rows",
                                    "type": "string",
                                    "example": "Please make sure that request parameters is correct"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/booking-attendees": {
            "get": {
                "tags": [
                    "booking-attendees"
                ],
                "summary": "List booking attendees",
                "description": "Returns a list of booking attenees based on the given filters",
                "operationId": "getBookingAttendees",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "description": "Including 'booking', 'user', 'patient', 'room', 'resource'.",
                        "required": false,
                        "type": "array",
                        "allowEmptyValue": true,
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "default": ""
                    },
                    {
                        "name": "booking_id",
                        "in": "query",
                        "description": "Booking id field",
                        "required": false,
                        "type": "string",
                        "allowEmptyValue": true,
                        "default": ""
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "List booking attendees",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/BookingAttendeeResponse"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/booking-attendees/{id}": {
            "get": {
                "tags": [
                    "booking-attendees"
                ],
                "summary": "Retrieve a booking attendee",
                "description": "Returns a booking attenee based on the given filters",
                "operationId": "getBookingAttendee",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "'id' field",
                        "required": true,
                        "type": "string",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "description": "Including 'booking', 'user', 'patient', 'room', 'resource'.",
                        "required": false,
                        "type": "array",
                        "allowEmptyValue": true,
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "default": ""
                    },
                    {
                        "name": "booking_id",
                        "in": "query",
                        "description": "Booking id field",
                        "required": false,
                        "type": "string",
                        "allowEmptyValue": true,
                        "default": ""
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "Retrieve a booking attendee",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/BookingAttendeeResponse"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "schema": {
                            "properties": {
                                "message": {
                                    "description": "Retrieve a booking attendee",
                                    "type": "string",
                                    "example": "Please make sure that request parameters is correct"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "booking-attendees"
                ],
                "summary": "Edit a booking attendee",
                "description": "",
                "operationId": "patchBookingAttendees",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "'id' field",
                        "required": true,
                        "type": "number"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Body of request (obligatory)",
                        "required": true,
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "Edit a booking attendee",
                                    "properties": {
                                        "attributes": {
                                            "description": "Edit a booking attendee",
                                            "properties": {
                                                "booking_id": {
                                                    "description": "Edit a booking attendee",
                                                    "type": "number",
                                                    "example": "1"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "description": "Including 'booking', 'user', 'patient', 'room', 'resource', 'emails', 'email_ics', 'declaration_emails', 'sms_invitations', 'sms_reminders', 'declaration_sms', 'snail_mails', 'booking_attendee_external_binding'.",
                        "required": false,
                        "type": "array",
                        "allowEmptyValue": true,
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "default": ""
                    },
                    {
                        "name": "arrived_at",
                        "in": "query",
                        "description": "Arrived at field (format: '2024-09-01 19:25:31')",
                        "required": false,
                        "type": "string",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "dtstart",
                        "in": "query",
                        "description": "Date/time start field (format: '2024-08-01 11:35:33')",
                        "required": false,
                        "type": "string",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "dtend",
                        "in": "query",
                        "description": "Date/time end field (format: '2024-08-02 13:46:43')",
                        "required": false,
                        "type": "string",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "partstat",
                        "in": "query",
                        "description": "Part stat field",
                        "required": false,
                        "type": "string",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "rsvp",
                        "in": "query",
                        "description": "'rsvp' field",
                        "required": false,
                        "type": "boolean",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "first_sendout_on",
                        "in": "query",
                        "description": "'first_sendout_on' field",
                        "required": false,
                        "type": "string",
                        "allowEmptyValue": true,
                        "default": ""
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "Edit a booking attendee",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/BookingAttendeeResponse"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "schema": {
                            "properties": {
                                "message": {
                                    "description": "Edit a booking attendee",
                                    "type": "string",
                                    "example": "Please make sure that request parameters is correct"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/booking-exdates": {
            "get": {
                "tags": [
                    "booking-exdates"
                ],
                "summary": "List booking-exdates",
                "description": "Returns a list of booking exdates based on the given filters",
                "operationId": "getBookingExdates",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "booking_id",
                        "in": "query",
                        "description": "'booking_id' field",
                        "required": false,
                        "type": "number",
                        "allowEmptyValue": true
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "description": "Including 'booking'.",
                        "required": false,
                        "type": "array",
                        "allowEmptyValue": true,
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "default": ""
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "List booking-exdates",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/BookingExdateResponse"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "schema": {
                            "properties": {
                                "message": {
                                    "description": "List booking-exdates",
                                    "type": "string",
                                    "example": "Please make sure that request parameters is correct"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "booking-exdates"
                ],
                "summary": "Create a booking-exdate",
                "description": "Returns certain booking exdate based on the given filters",
                "operationId": "postBookingExdate",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Body of request (obligatory)",
                        "required": true,
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "Create a booking-exdate",
                                    "properties": {
                                        "attributes": {
                                            "description": "Create a booking-exdate",
                                            "properties": {
                                                "booking_id": {
                                                    "description": "Create a booking-exdate",
                                                    "type": "number",
                                                    "example": 12
                                                },
                                                "date": {
                                                    "description": "Create a booking-exdate",
                                                    "type": "string",
                                                    "example": "2024-09-01T19:25:31+02:00"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "Create a booking-exdate",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/BookingExdateResponse"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "schema": {
                            "properties": {
                                "message": {
                                    "description": "Create a booking-exdate",
                                    "type": "string",
                                    "example": "Please make sure that request parameters is correct"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/booking-exdates/{id}": {
            "get": {
                "tags": [
                    "booking-exdates"
                ],
                "summary": "Retrieve a booking-exdate",
                "description": "Returns certain booking exdate based on the given filters",
                "operationId": "getBookingExdate",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "'id' field",
                        "required": true,
                        "type": "number"
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "description": "Including 'booking'.",
                        "required": false,
                        "type": "array",
                        "allowEmptyValue": true,
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "default": ""
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "Retrieve a booking-exdate",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/BookingExdateResponse"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "schema": {
                            "properties": {
                                "message": {
                                    "description": "Retrieve a booking-exdate",
                                    "type": "string",
                                    "example": "Please make sure that request parameters is correct"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "booking-exdates"
                ],
                "summary": "Edit a booking-exdate",
                "description": "Returns edited booking exdate based on the given filters",
                "operationId": "patchBookingExdate",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "'id' field",
                        "required": true,
                        "type": "number"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Body of request (obligatory)",
                        "required": true,
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "Edit a booking-exdate",
                                    "properties": {
                                        "attributes": {
                                            "description": "Edit a booking-exdate",
                                            "properties": {
                                                "booking_id": {
                                                    "description": "Edit a booking-exdate",
                                                    "type": "number",
                                                    "example": 12
                                                },
                                                "date": {
                                                    "description": "Edit a booking-exdate",
                                                    "type": "string",
                                                    "example": "2024-09-01T19:25:31+02:00"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "Edit a booking-exdate",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/BookingExdateResponse"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "schema": {
                            "properties": {
                                "message": {
                                    "description": "Edit a booking-exdate",
                                    "type": "string",
                                    "example": "Please make sure that request parameters is correct"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/booking-rrule-by-days": {
            "get": {
                "tags": [
                    "booking-rrule-by-days"
                ],
                "summary": "List booking-rrule-by-days",
                "description": "Returns a list of booking rrule by days based on the given filters",
                "operationId": "getBookingRruleByDays",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "description": "Including 'booking_rrule'.",
                        "required": false,
                        "type": "array",
                        "allowEmptyValue": true,
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "default": ""
                    },
                    {
                        "name": "booking_rrule_id",
                        "in": "query",
                        "description": "'booking_rrule_id' field",
                        "required": false,
                        "type": "number",
                        "allowEmptyValue": true,
                        "default": ""
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "List booking-rrule-by-days",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/BookingRruleByDayResponse"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "schema": {
                            "properties": {
                                "message": {
                                    "description": "List booking-rrule-by-days",
                                    "type": "string",
                                    "example": "Please make sure that request parameters is correct"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "booking-rrule-by-days"
                ],
                "summary": "Create a booking-rrule-by-day",
                "description": "Returns created booking rrule by day based on the given filters",
                "operationId": "postBookingRruleByDay",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Body of request (obligatory)",
                        "required": true,
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "Create a booking-rrule-by-day",
                                    "properties": {
                                        "attributes": {
                                            "description": "Create a booking-rrule-by-day",
                                            "properties": {
                                                "booking_rrule_id": {
                                                    "description": "Create a booking-rrule-by-day",
                                                    "type": "number",
                                                    "example": 1211
                                                },
                                                "day": {
                                                    "description": "Create a booking-rrule-by-day",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "Create a booking-rrule-by-day",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/BookingRruleByDayResponse"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "schema": {
                            "properties": {
                                "message": {
                                    "description": "Create a booking-rrule-by-day",
                                    "type": "string",
                                    "example": "Please make sure that request parameters is correct"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/booking-rrule-by-days/{id}": {
            "get": {
                "tags": [
                    "booking-rrule-by-days"
                ],
                "summary": "Retrieve a booking-rrule-by-day",
                "description": "Returns certain booking rrule by day based on the given filters",
                "operationId": "getBookingRruleByDay",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "'id' field",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "description": "Including 'booking_rrule'.",
                        "required": false,
                        "type": "array",
                        "allowEmptyValue": true,
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "default": ""
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "Retrieve a booking-rrule-by-day",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/BookingRruleByDayResponse"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "schema": {
                            "properties": {
                                "message": {
                                    "description": "Retrieve a booking-rrule-by-day",
                                    "type": "string",
                                    "example": "Please make sure that request parameters is correct"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "booking-rrule-by-days"
                ],
                "summary": "Edit a booking-rrule-by-day",
                "description": "Returns edited booking rrule by day based on the given filters",
                "operationId": "patchBookingRruleByDay",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "'id' field",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Body of request (obligatory)",
                        "required": true,
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "Edit a booking-rrule-by-day",
                                    "properties": {
                                        "attributes": {
                                            "description": "Edit a booking-rrule-by-day",
                                            "properties": {
                                                "booking_rrule_id": {
                                                    "description": "Edit a booking-rrule-by-day",
                                                    "type": "number",
                                                    "example": 1211
                                                },
                                                "day": {
                                                    "description": "Edit a booking-rrule-by-day",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "Edit a booking-rrule-by-day",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/BookingRruleByDayResponse"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "schema": {
                            "properties": {
                                "message": {
                                    "description": "Edit a booking-rrule-by-day",
                                    "type": "string",
                                    "example": "Please make sure that request parameters is correct"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/booking-rrules": {
            "get": {
                "tags": [
                    "booking-rrules"
                ],
                "summary": "List booking-rrules",
                "description": "Returns a list of booking rrules based on the given filters",
                "operationId": "getBookingRrules",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "description": "Including 'booking'.",
                        "required": false,
                        "type": "array",
                        "allowEmptyValue": true,
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "default": ""
                    },
                    {
                        "name": "booking_id",
                        "in": "query",
                        "description": "'booking_id' field",
                        "required": false,
                        "type": "number",
                        "allowEmptyValue": true,
                        "default": ""
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "List booking-rrules",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/BookingRruleResponse"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "schema": {
                            "properties": {
                                "message": {
                                    "description": "List booking-rrules",
                                    "type": "string",
                                    "example": "Please make sure that request parameters is correct"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "booking-rrules"
                ],
                "summary": "Create a booking-rrule",
                "description": "Returns a created booking rrule based on the given filters",
                "operationId": "postBookingRrule",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Body of request (obligatory)",
                        "required": true,
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "Create a booking-rrule",
                                    "properties": {
                                        "attributes": {
                                            "description": "Create a booking-rrule",
                                            "properties": {
                                                "booking_id": {
                                                    "description": "Create a booking-rrule",
                                                    "type": "number",
                                                    "example": 12
                                                },
                                                "freq": {
                                                    "description": "Create a booking-rrule",
                                                    "type": "string"
                                                },
                                                "interval": {
                                                    "description": "Create a booking-rrule",
                                                    "type": "number"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "Create a booking-rrule",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/BookingRruleResponse"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "schema": {
                            "properties": {
                                "message": {
                                    "description": "Create a booking-rrule",
                                    "type": "string",
                                    "example": "Please make sure that request parameters is correct"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/booking-rrules/{id}": {
            "get": {
                "tags": [
                    "booking-rrules"
                ],
                "summary": "Retrieve a booking-rrule",
                "description": "Returns certain booking rrule based on the given filters",
                "operationId": "getBookingRrule",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "'id' field",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "description": "Including 'booking'.",
                        "required": false,
                        "type": "array",
                        "allowEmptyValue": true,
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "default": ""
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "Retrieve a booking-rrule",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/BookingRruleResponse"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "schema": {
                            "properties": {
                                "message": {
                                    "description": "Retrieve a booking-rrule",
                                    "type": "string",
                                    "example": "Please make sure that request parameters is correct"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "booking-rrules"
                ],
                "summary": "Edit a booking-rrule",
                "description": "Returns edited booking rrule based on the given filters",
                "operationId": "patchBookingRrule",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "'id' field",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Body of request (obligatory)",
                        "required": true,
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "Edit a booking-rrule",
                                    "properties": {
                                        "attributes": {
                                            "description": "Edit a booking-rrule",
                                            "properties": {
                                                "booking_id": {
                                                    "description": "Edit a booking-rrule",
                                                    "type": "number",
                                                    "example": 12
                                                },
                                                "freq": {
                                                    "description": "Edit a booking-rrule",
                                                    "type": "string"
                                                },
                                                "interval": {
                                                    "description": "Edit a booking-rrule",
                                                    "type": "number"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "Edit a booking-rrule",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/BookingRruleResponse"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "schema": {
                            "properties": {
                                "message": {
                                    "description": "Edit a booking-rrule",
                                    "type": "string",
                                    "example": "Please make sure that request parameters is correct"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/bookings": {
            "get": {
                "tags": [
                    "bookings"
                ],
                "summary": "List bookings",
                "description": "Returns a list of bookings based on the given filters",
                "operationId": "getBookings",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "description": "Including 'clinic', 'organizer', 'booking_type', 'booking_policy', 'procedure', 'rebooking', 'promo_code', 'declaration', 'booking_attendees', 'booking_rrules', 'booking_exdates', 'booking_external_binding'.",
                        "required": false,
                        "type": "array",
                        "allowEmptyValue": true,
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "default": ""
                    },
                    {
                        "name": "dtstart",
                        "in": "query",
                        "description": "Date/time start field (format: '2024-08-01 11:35:33')",
                        "required": false,
                        "type": "string",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "dtend",
                        "in": "query",
                        "description": "Date/time end field (format: '2024-08-02 13:46:43')",
                        "required": false,
                        "type": "string",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "from_date",
                        "in": "query",
                        "description": "'From date' start field (format: '2024-08-01')",
                        "required": false,
                        "type": "string",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "to_date",
                        "in": "query",
                        "description": "'To date' field (format: '2024-08-02')",
                        "required": false,
                        "type": "string",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "clinic_ids",
                        "in": "query",
                        "description": "Clinic id(s) field",
                        "required": false,
                        "type": "string",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "organizer_id",
                        "in": "query",
                        "description": "Organizer id field",
                        "required": false,
                        "type": "string",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "caregiver_id",
                        "in": "query",
                        "description": "Caregiver id field",
                        "required": false,
                        "type": "string",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "user_ids",
                        "in": "query",
                        "description": "User id(s) field",
                        "required": false,
                        "type": "string",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "patient_id",
                        "in": "query",
                        "description": "Patient id field",
                        "required": false,
                        "type": "string",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "patient_partstat",
                        "in": "query",
                        "description": "Patient partstat field",
                        "required": false,
                        "type": "string",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "room_ids",
                        "in": "query",
                        "description": "Room id(s) field",
                        "required": false,
                        "type": "string",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "booking_type_ids",
                        "in": "query",
                        "description": "Booking type id(s) field",
                        "required": false,
                        "type": "string",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "Satus field",
                        "required": false,
                        "type": "string",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "patient_failed_to_appear",
                        "in": "query",
                        "description": "'Patient failed to appear' field",
                        "required": false,
                        "type": "boolean",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "patient_failed_to_appear_handled",
                        "in": "query",
                        "description": "'Patient failed to appear handled' field",
                        "required": false,
                        "type": "boolean",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "patient_wants_earlier_slot",
                        "in": "query",
                        "description": "'Patient wants earlier slot' field",
                        "required": false,
                        "type": "boolean",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "patient_made_late_cancellation",
                        "in": "query",
                        "description": "'Patient made late cancellation' field",
                        "required": false,
                        "type": "boolean",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "done",
                        "in": "query",
                        "description": "'Done' field",
                        "required": false,
                        "type": "boolean",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "deleted",
                        "in": "query",
                        "description": "'Deleted' field",
                        "required": false,
                        "type": "boolean",
                        "allowEmptyValue": true,
                        "default": ""
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "List bookings",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/BookingResponse"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "schema": {
                            "properties": {
                                "message": {
                                    "description": "List bookings",
                                    "type": "string",
                                    "example": "Please make sure that request parameters is correct"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "bookings"
                ],
                "summary": "Create a booking",
                "description": "Returns a created booking based on the given filters",
                "operationId": "postBooking",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Body of request (few examples what can be added)",
                        "required": false,
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "Create a booking",
                                    "properties": {
                                        "attributes": {
                                            "description": "Create a booking",
                                            "properties": {
                                                "class": {
                                                    "description": "Create a booking",
                                                    "type": "string",
                                                    "example": "Test class"
                                                },
                                                "text": {
                                                    "description": "Create a booking",
                                                    "type": "string",
                                                    "example": "Test text"
                                                },
                                                "dtstart": {
                                                    "description": "Create a booking",
                                                    "type": "string",
                                                    "example": "2024-08-01 11:35:33"
                                                },
                                                "dtend": {
                                                    "description": "Create a booking",
                                                    "type": "string",
                                                    "example": "2024-08-02 12:35:33"
                                                },
                                                "description": {
                                                    "description": "Create a booking",
                                                    "type": "string",
                                                    "example": "Test description"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "description": "Including 'clinic', 'organizer', 'booking_type', 'booking_policy', 'procedure', 'rebooking', 'promo_code', 'declaration', 'booking_attendees', 'booking_rrules', 'booking_exdates', 'booking_external_binding'.",
                        "required": false,
                        "type": "array",
                        "allowEmptyValue": true,
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "default": ""
                    },
                    {
                        "name": "dtstart",
                        "in": "query",
                        "description": "Date/time start field (format: '2024-08-01 11:35:33')",
                        "required": false,
                        "type": "string",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "dtend",
                        "in": "query",
                        "description": "Date/time end field (format: '2024-08-02 13:46:43')",
                        "required": false,
                        "type": "string",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "from_date",
                        "in": "query",
                        "description": "'From date' start field (format: '2024-08-01')",
                        "required": false,
                        "type": "string",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "to_date",
                        "in": "query",
                        "description": "'To date' field (format: '2024-08-02')",
                        "required": false,
                        "type": "string",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "clinic_ids",
                        "in": "query",
                        "description": "Clinic id(s) field",
                        "required": false,
                        "type": "string",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "organizer_id",
                        "in": "query",
                        "description": "Organizer id field",
                        "required": false,
                        "type": "string",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "caregiver_id",
                        "in": "query",
                        "description": "Caregiver id field",
                        "required": false,
                        "type": "string",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "user_ids",
                        "in": "query",
                        "description": "User id(s) field",
                        "required": false,
                        "type": "string",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "patient_id",
                        "in": "query",
                        "description": "Patient id field",
                        "required": false,
                        "type": "string",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "patient_partstat",
                        "in": "query",
                        "description": "Patient partstat field",
                        "required": false,
                        "type": "string",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "room_ids",
                        "in": "query",
                        "description": "Room id(s) field",
                        "required": false,
                        "type": "string",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "booking_type_ids",
                        "in": "query",
                        "description": "Booking type id(s) field",
                        "required": false,
                        "type": "string",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "Satus field",
                        "required": false,
                        "type": "string",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "patient_failed_to_appear",
                        "in": "query",
                        "description": "'Patient failed to appear' field",
                        "required": false,
                        "type": "boolean",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "patient_failed_to_appear_handled",
                        "in": "query",
                        "description": "'Patient failed to appear handled' field",
                        "required": false,
                        "type": "boolean",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "patient_wants_earlier_slot",
                        "in": "query",
                        "description": "'Patient wants earlier slot' field",
                        "required": false,
                        "type": "boolean",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "patient_made_late_cancellation",
                        "in": "query",
                        "description": "'Patient made late cancellation' field",
                        "required": false,
                        "type": "boolean",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "done",
                        "in": "query",
                        "description": "'Done' field",
                        "required": false,
                        "type": "boolean",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "deleted",
                        "in": "query",
                        "description": "'Deleted' field",
                        "required": false,
                        "type": "boolean",
                        "allowEmptyValue": true,
                        "default": ""
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "Create a booking",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/BookingResponse"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "schema": {
                            "properties": {
                                "message": {
                                    "description": "Create a booking",
                                    "type": "string",
                                    "example": "Please make sure that request parameters is correct"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/bookings/{id}/change": {
            "post": {
                "tags": [
                    "bookings"
                ],
                "summary": "Change a booking",
                "description": "Returns changed booking based on the given filters",
                "operationId": "postBookingChange",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "'id' field",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Body of request (body is not obligatory, below you can see few examples what can be added)",
                        "required": false,
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "Change a booking",
                                    "properties": {
                                        "attributes": {
                                            "description": "Change a booking",
                                            "properties": {
                                                "dtstart": {
                                                    "description": "Change a booking",
                                                    "type": "string",
                                                    "example": "2024-08-01 11:35:33"
                                                },
                                                "dtend": {
                                                    "description": "Change a booking",
                                                    "type": "string",
                                                    "example": "2024-08-02 12:55:53"
                                                },
                                                "booking_type_id": {
                                                    "description": "Change a booking",
                                                    "type": "number",
                                                    "example": 12
                                                },
                                                "clinic_id": {
                                                    "description": "Change a booking",
                                                    "type": "number",
                                                    "example": 312
                                                },
                                                "caregiver_ids": {
                                                    "description": "Change a booking",
                                                    "type": "string"
                                                },
                                                "room_ids": {
                                                    "description": "Change a booking",
                                                    "type": "string"
                                                },
                                                "resource_ids": {
                                                    "description": "Change a booking",
                                                    "type": "string"
                                                },
                                                "patient_ids": {
                                                    "description": "Change a booking",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "Change a booking",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/BookingResponse"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "schema": {
                            "properties": {
                                "message": {
                                    "description": "Change a booking",
                                    "type": "string",
                                    "example": "Please make sure that request parameters is correct"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/calendar-views": {
            "get": {
                "tags": [
                    "calendar-views"
                ],
                "summary": "List calendar-views",
                "description": "Returns list of calendar views based on the given filters",
                "operationId": "getCalendarViews",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "description": "Including 'clinic', 'clinics', 'users', 'rooms', 'hidden_weekdays'.",
                        "required": false,
                        "type": "array",
                        "allowEmptyValue": true,
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "default": ""
                    },
                    {
                        "name": "clinic_id",
                        "in": "query",
                        "description": "'clinic_id' field",
                        "required": false,
                        "type": "string",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "clinic_ids",
                        "in": "query",
                        "description": "'clinic_ids' field",
                        "required": false,
                        "type": "array",
                        "allowEmptyValue": true,
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "default": ""
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "List calendar-views",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/CalendarViewResponse"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "schema": {
                            "properties": {
                                "message": {
                                    "description": "List calendar-views",
                                    "type": "string",
                                    "example": "Please make sure that request parameters is correct"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "calendar-views"
                ],
                "summary": "Create a calendar-view",
                "description": "Returns created calendar view based on the given filters",
                "operationId": "postCalendarView",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Body of request (obligatory)",
                        "required": true,
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "Create a calendar-view",
                                    "properties": {
                                        "attributes": {
                                            "description": "Create a calendar-view",
                                            "properties": {
                                                "name": {
                                                    "description": "Create a calendar-view",
                                                    "type": "string",
                                                    "example": "Test name"
                                                },
                                                "days": {
                                                    "description": "Create a calendar-view",
                                                    "type": "number",
                                                    "example": 10
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    {
                        "name": "clinics",
                        "in": "query",
                        "description": "'clinics' field",
                        "required": false,
                        "type": "array",
                        "allowEmptyValue": true,
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "default": ""
                    },
                    {
                        "name": "users",
                        "in": "query",
                        "description": "'users' field",
                        "required": false,
                        "type": "array",
                        "allowEmptyValue": true,
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "default": ""
                    },
                    {
                        "name": "rooms",
                        "in": "query",
                        "description": "'rooms' field",
                        "required": false,
                        "type": "array",
                        "allowEmptyValue": true,
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "default": ""
                    },
                    {
                        "name": "display_weekends",
                        "in": "query",
                        "description": "'display_weekends' field",
                        "required": false,
                        "type": "boolean",
                        "allowEmptyValue": true,
                        "default": ""
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "Create a calendar-view",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/CalendarViewResponse"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "schema": {
                            "properties": {
                                "message": {
                                    "description": "Create a calendar-view",
                                    "type": "string",
                                    "example": "Please make sure that request parameters is correct"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/calendar-views/{id}": {
            "get": {
                "tags": [
                    "calendar-views"
                ],
                "summary": "Retrieve a calendar-view",
                "description": "Returns certain calendar view based on the given filters",
                "operationId": "getCalendarView",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "'id' field",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "description": "Including 'clinic', 'clinics', 'users', 'rooms', 'hidden_weekdays'.",
                        "required": false,
                        "type": "array",
                        "allowEmptyValue": true,
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "default": ""
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "Retrieve a calendar-view",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/CalendarViewResponse"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "schema": {
                            "properties": {
                                "message": {
                                    "description": "Retrieve a calendar-view",
                                    "type": "string",
                                    "example": "Please make sure that request parameters is correct"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "calendar-views"
                ],
                "summary": "Edit a calendar-view",
                "description": "Returns edited calendar view based on the given filters",
                "operationId": "patchCalendarView",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "'id' field",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Body of request (obligatory)",
                        "required": true,
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "Edit a calendar-view",
                                    "properties": {
                                        "attributes": {
                                            "description": "Edit a calendar-view",
                                            "properties": {
                                                "name": {
                                                    "description": "Edit a calendar-view",
                                                    "type": "string",
                                                    "example": "Test name"
                                                },
                                                "days": {
                                                    "description": "Edit a calendar-view",
                                                    "type": "number",
                                                    "example": 10
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    {
                        "name": "clinics",
                        "in": "query",
                        "description": "'clinics' field",
                        "required": false,
                        "type": "array",
                        "allowEmptyValue": true,
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "default": ""
                    },
                    {
                        "name": "users",
                        "in": "query",
                        "description": "'users' field",
                        "required": false,
                        "type": "array",
                        "allowEmptyValue": true,
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "default": ""
                    },
                    {
                        "name": "rooms",
                        "in": "query",
                        "description": "'rooms' field",
                        "required": false,
                        "type": "array",
                        "allowEmptyValue": true,
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "default": ""
                    },
                    {
                        "name": "display_weekends",
                        "in": "query",
                        "description": "'display_weekends' field",
                        "required": false,
                        "type": "boolean",
                        "allowEmptyValue": true,
                        "default": ""
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "Edit a calendar-view",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/CalendarViewResponse"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "schema": {
                            "properties": {
                                "message": {
                                    "description": "Edit a calendar-view",
                                    "type": "string",
                                    "example": "Please make sure that request parameters is correct"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/clinics/current": {
            "get": {
                "tags": [
                    "clinics"
                ],
                "summary": "Retrieve the current clinic",
                "description": "Retrieves the clinic currently selected in the user's session",
                "operationId": "getMuntraClinicCurrent",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "description": "Including used state price list id with 'country.used_state_price_list' or state price list with 'state_price_list' in response. We also have varios list of include such as: backup_computer,clinic_images,clinic_xray_systems.string_arguments,country.official_languages,country.reimbursement_types,currency,default_clinic_image,default_county_council,default_invoice_type.default_payment_type,default_xray_system,locale.language,logotype,main_caregiver.default_email_address,main_caregiver.default_user_image,main_caregiver.role,organization.organization_clinic_settings.cash_registers,organization.organization_clinic_settings.clinic,organization.organization_clinic_settings.payment_terminals.supplier,organization.supplier_settings_for_organizations etc.",
                        "required": false,
                        "type": "array",
                        "allowEmptyValue": true,
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "default": "country.used_state_price_list,used_clinic_price_list"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "Retrieve the current clinic",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/ClinicCurrentResponse"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "schema": {
                            "properties": {
                                "message": {
                                    "description": "Retrieve the current clinic",
                                    "type": "string",
                                    "example": "Please make sure that request parameters is correct"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/county-council-prices": {
            "get": {
                "tags": [
                    "county-council-prices"
                ],
                "summary": "List county-council-prices",
                "description": "Returns a list of county council price based on the given filters",
                "operationId": "getCountyCouncilPrices",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "description": "Including 'price_list', 'currency', 'vat_code', 'default_treatment'.",
                        "required": false,
                        "type": "array",
                        "allowEmptyValue": true,
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "default": ""
                    },
                    {
                        "name": "list_id",
                        "in": "query",
                        "description": "'list_id' field",
                        "required": false,
                        "type": "number",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "list_ids",
                        "in": "query",
                        "description": "'list_ids' field",
                        "required": false,
                        "type": "array",
                        "allowEmptyValue": true,
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "default": ""
                    },
                    {
                        "name": "county_council_id",
                        "in": "query",
                        "description": "'county_council_id' field",
                        "required": false,
                        "type": "number",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "deleted",
                        "in": "query",
                        "description": "'deleted' field",
                        "required": false,
                        "type": "boolean",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "price_code",
                        "in": "query",
                        "description": "'price_code' field",
                        "required": false,
                        "type": "string",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "clinic_id",
                        "in": "query",
                        "description": "'clinic_id' field",
                        "required": false,
                        "type": "string",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "elements",
                        "in": "query",
                        "description": "'elements' field",
                        "required": false,
                        "type": "array",
                        "allowEmptyValue": true,
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "default": ""
                    },
                    {
                        "name": "query",
                        "in": "query",
                        "description": "'query' field",
                        "required": false,
                        "type": "array",
                        "allowEmptyValue": true,
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "default": ""
                    },
                    {
                        "name": "county_council_patient_category_ids",
                        "in": "query",
                        "description": "'county_council_patient_category_ids' field",
                        "required": false,
                        "type": "array",
                        "allowEmptyValue": true,
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "default": ""
                    },
                    {
                        "name": "sort_by",
                        "in": "query",
                        "description": "'sort_by' field",
                        "required": false,
                        "type": "string",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "'per_page' field",
                        "required": false,
                        "type": "number",
                        "allowEmptyValue": true,
                        "default": ""
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "List county-council-prices",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/CountyCouncilPriceResponse"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "schema": {
                            "properties": {
                                "message": {
                                    "description": "List county-council-prices",
                                    "type": "string",
                                    "example": "Please make sure that request parameters is correct"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "county-council-prices"
                ],
                "summary": "Create a county-council-price",
                "description": "Returns created county council price based on the given filters",
                "operationId": "postCountyCouncilPrice",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Body of request (obligatory)",
                        "required": true,
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "Create a county-council-price",
                                    "properties": {
                                        "attributes": {
                                            "description": "Create a county-council-price",
                                            "properties": {
                                                "description": {
                                                    "description": "Create a county-council-price",
                                                    "type": "string"
                                                },
                                                "price_list_id": {
                                                    "description": "Create a county-council-price",
                                                    "type": "number",
                                                    "example": 22
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    {
                        "name": "default_treatment_id",
                        "in": "query",
                        "description": "'default_treatment_id' field",
                        "required": false,
                        "type": "number",
                        "allowEmptyValue": true,
                        "default": ""
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "Create a county-council-price",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/CountyCouncilPriceResponse"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "schema": {
                            "properties": {
                                "message": {
                                    "description": "Create a county-council-price",
                                    "type": "string",
                                    "example": "Please make sure that request parameters is correct"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/county-council-prices/{id}": {
            "get": {
                "tags": [
                    "county-council-prices"
                ],
                "summary": "Retrieve a county-council-price",
                "description": "Returns certain county council price based on the given filters",
                "operationId": "getCountyCouncilPrice",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "'id' field",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "description": "Including 'price_list', 'currency', 'vat_code', 'default_treatment'.",
                        "required": false,
                        "type": "array",
                        "allowEmptyValue": true,
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "default": ""
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "Retrieve a county-council-price",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/CountyCouncilPriceResponse"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "schema": {
                            "properties": {
                                "message": {
                                    "description": "Retrieve a county-council-price",
                                    "type": "string",
                                    "example": "Please make sure that request parameters is correct"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "county-council-prices"
                ],
                "summary": "Edit a county-council-price",
                "description": "Returns edited county council price based on the given filters",
                "operationId": "patchCountyCouncilPrice",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "'id' field",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Body of request (obligatory)",
                        "required": true,
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "Edit a county-council-price",
                                    "properties": {
                                        "attributes": {
                                            "description": "Edit a county-council-price",
                                            "properties": {
                                                "description": {
                                                    "description": "Edit a county-council-price",
                                                    "type": "string"
                                                },
                                                "price_list_id": {
                                                    "description": "Edit a county-council-price",
                                                    "type": "number",
                                                    "example": 22
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    {
                        "name": "default_treatment_id",
                        "in": "query",
                        "description": "'default_treatment_id' field",
                        "required": false,
                        "type": "number",
                        "allowEmptyValue": true,
                        "default": ""
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "Edit a county-council-price",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/CountyCouncilPriceResponse"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "schema": {
                            "properties": {
                                "message": {
                                    "description": "Edit a county-council-price",
                                    "type": "string",
                                    "example": "Please make sure that request parameters is correct"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/county-councils": {
            "get": {
                "tags": [
                    "county-councils"
                ],
                "summary": "List county-councils",
                "description": "Returns a list of country councils based on the given filters",
                "operationId": "getCountryCouncils",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "description": "Including 'country', 'county_council_price_lists', 'used_county_council_price_list', 'county_council_patient_categories'.",
                        "required": false,
                        "type": "array",
                        "allowEmptyValue": true,
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "default": ""
                    },
                    {
                        "name": "country_id",
                        "in": "query",
                        "description": "'country_id' field",
                        "required": false,
                        "type": "number",
                        "allowEmptyValue": true,
                        "default": ""
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "List county-councils",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/CountryCouncilResponse"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "schema": {
                            "properties": {
                                "message": {
                                    "description": "List county-councils",
                                    "type": "string",
                                    "example": "Please make sure that request parameters is correct"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/county-councils/{id}": {
            "get": {
                "tags": [
                    "county-councils"
                ],
                "summary": "Retrieve a county-council",
                "description": "Returns certain country council based on the given filters",
                "operationId": "getCountryCouncil",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Bearer token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "description": "Including 'country', 'county_council_price_lists', 'used_county_council_price_list', 'county_council_patient_categories'.",
                        "required": false,
                        "type": "array",
                        "allowEmptyValue": true,
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "default": ""
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "Retrieve a county-council",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/CountryCouncilResponse"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "schema": {
                            "properties": {
                                "message": {
                                    "description": "Retrieve a county-council",
                                    "type": "string",
                                    "example": "Please make sure that request parameters is correct"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/credit-checks": {
            "post": {
                "tags": [
                    "credit-checks"
                ],
                "summary": "Create a credit-check",
                "description": "Returns created credit check based on the given filters",
                "operationId": "postCreditCheck",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "description": "Including 'patient', 'organization', 'supplier', 'currency'.",
                        "required": false,
                        "type": "array",
                        "allowEmptyValue": true,
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "default": ""
                    },
                    {
                        "name": "valid_until",
                        "in": "query",
                        "description": "'valid_until' field",
                        "required": false,
                        "type": "string",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "supplier_id",
                        "in": "query",
                        "description": "'supplier_id' field",
                        "required": false,
                        "type": "number",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Body of request (obligatory)",
                        "required": true,
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "Create a credit-check",
                                    "properties": {
                                        "attributes": {
                                            "description": "Create a credit-check",
                                            "properties": {
                                                "patient_id": {
                                                    "description": "Create a credit-check",
                                                    "type": "number",
                                                    "example": 1
                                                },
                                                "organization_id": {
                                                    "description": "Create a credit-check",
                                                    "type": "number",
                                                    "example": 124
                                                },
                                                "amount": {
                                                    "description": "Create a credit-check",
                                                    "type": "number",
                                                    "example": 100
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "Create a credit-check",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/CreditChecksResponse"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "schema": {
                            "properties": {
                                "message": {
                                    "description": "Create a credit-check",
                                    "type": "string",
                                    "example": "Please make sure that request parameters is correct"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/custom-payment-types": {
            "get": {
                "tags": [
                    "custom-payment-types"
                ],
                "summary": "List custom-payment-types",
                "description": "Returns list of custom payment types based on the given filters",
                "operationId": "getCustomPaymentTypes",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "description": "Including 'fiscal_year', 'payment_type', 'account', 'clinics'.",
                        "required": false,
                        "type": "array",
                        "allowEmptyValue": true,
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "default": ""
                    },
                    {
                        "name": "sort_by",
                        "in": "query",
                        "description": "'sort_by' field",
                        "required": false,
                        "type": "string",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "'per_page' field",
                        "required": false,
                        "type": "number",
                        "allowEmptyValue": true,
                        "default": ""
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "List custom-payment-types",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/CustomPaymentTypeResponse"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "schema": {
                            "properties": {
                                "message": {
                                    "description": "List custom-payment-types",
                                    "type": "string",
                                    "example": "Please make sure that request parameters is correct"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "custom-payment-types"
                ],
                "summary": "Create a custom-payment-type",
                "description": "Returns created custom payment type based on the given filters",
                "operationId": "postCustomPaymentType",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Body of request (not obligatory)",
                        "required": false,
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "Create a custom-payment-type",
                                    "properties": {
                                        "attributes": {
                                            "description": "Create a custom-payment-type",
                                            "properties": {
                                                "fiscal_year_id": {
                                                    "description": "Create a custom-payment-type",
                                                    "type": "number",
                                                    "example": 1
                                                },
                                                "payment_type_id": {
                                                    "description": "Create a custom-payment-type",
                                                    "type": "number",
                                                    "example": 1
                                                },
                                                "account_id": {
                                                    "description": "Create a custom-payment-type",
                                                    "type": "number",
                                                    "example": 1
                                                },
                                                "label": {
                                                    "description": "Create a custom-payment-type",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    {
                        "name": "clinics",
                        "in": "query",
                        "description": "'clinics' field.",
                        "required": false,
                        "type": "array",
                        "allowEmptyValue": true,
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "default": ""
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "Create a custom-payment-type",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/CustomPaymentTypeResponse"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "schema": {
                            "properties": {
                                "message": {
                                    "description": "Create a custom-payment-type",
                                    "type": "string",
                                    "example": "Please make sure that request parameters is correct"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/custom-payment-types/{id}": {
            "get": {
                "tags": [
                    "custom-payment-types"
                ],
                "summary": "Retrieve a custom-payment-type",
                "description": "Returns certain custom payment type based on the given filters",
                "operationId": "getCustomPaymentType",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "'id' field",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "description": "Including 'fiscal_year', 'payment_type', 'account', 'clinics'.",
                        "required": false,
                        "type": "array",
                        "allowEmptyValue": true,
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "default": ""
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "Retrieve a custom-payment-type",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/CustomPaymentTypeResponse"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "schema": {
                            "properties": {
                                "message": {
                                    "description": "Retrieve a custom-payment-type",
                                    "type": "string",
                                    "example": "Please make sure that request parameters is correct"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "custom-payment-types"
                ],
                "summary": "Edit a custom-payment-type",
                "description": "Returns edited custom payment type based on the given filters",
                "operationId": "patchCustomPaymentType",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "'id' field",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Body of request (not obligatory)",
                        "required": false,
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "Edit a custom-payment-type",
                                    "properties": {
                                        "attributes": {
                                            "description": "Edit a custom-payment-type",
                                            "properties": {
                                                "fiscal_year_id": {
                                                    "description": "Edit a custom-payment-type",
                                                    "type": "number",
                                                    "example": 1
                                                },
                                                "payment_type_id": {
                                                    "description": "Edit a custom-payment-type",
                                                    "type": "number",
                                                    "example": 1
                                                },
                                                "account_id": {
                                                    "description": "Edit a custom-payment-type",
                                                    "type": "number",
                                                    "example": 1
                                                },
                                                "label": {
                                                    "description": "Edit a custom-payment-type",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "Edit a custom-payment-type",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/CustomPaymentTypeResponse"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "schema": {
                            "properties": {
                                "message": {
                                    "description": "Edit a custom-payment-type",
                                    "type": "string",
                                    "example": "Please make sure that request parameters is correct"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/dashboard-reports": {
            "get": {
                "tags": [
                    "dashboard-reports"
                ],
                "summary": "List dashboard-reports",
                "description": "Returns a list of dashboard reports based on the given filters",
                "operationId": "getDashboardReports",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "description": "Including 'user_at_clinics'.",
                        "required": false,
                        "type": "array",
                        "allowEmptyValue": true,
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "default": ""
                    },
                    {
                        "name": "user_at_clinic_id",
                        "in": "query",
                        "description": "'user_at_clinic_id' field",
                        "required": false,
                        "type": "number",
                        "allowEmptyValue": true,
                        "default": ""
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "List dashboard-reports",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/DashboardReportResponse"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "schema": {
                            "properties": {
                                "message": {
                                    "description": "List dashboard-reports",
                                    "type": "string",
                                    "example": "Please make sure that request parameters is correct"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/declaration-item-templates": {
            "get": {
                "tags": [
                    "declaration-item-templates"
                ],
                "summary": "List declaration-item-templates",
                "description": "Returns list of declaration item templates based on the given filters",
                "operationId": "getDeclarationItemTemplates",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "description": "Including 'declaration_item_category'.",
                        "required": false,
                        "type": "array",
                        "allowEmptyValue": true,
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "default": ""
                    },
                    {
                        "name": "declaration_item_category_id",
                        "in": "query",
                        "description": "'declaration_item_category_id' field",
                        "required": false,
                        "type": "number",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "sort_by",
                        "in": "query",
                        "description": "'sort_by' field",
                        "required": false,
                        "type": "string",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "'per_page' field",
                        "required": false,
                        "type": "number",
                        "allowEmptyValue": true,
                        "default": ""
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "List declaration-item-templates",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/DeclarationItemTemplateResponse"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "schema": {
                            "properties": {
                                "message": {
                                    "description": "List declaration-item-templates",
                                    "type": "string",
                                    "example": "Please make sure that request parameters is correct"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "declaration-item-templates"
                ],
                "summary": "Create a declaration-item-template",
                "description": "Returns created declaration item templates based on the given filters",
                "operationId": "postDeclarationItemTemplate",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Body of request (obligatory)",
                        "required": true,
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "Create a declaration-item-template",
                                    "properties": {
                                        "attributes": {
                                            "description": "Create a declaration-item-template",
                                            "properties": {
                                                "declaration_item_category_id": {
                                                    "description": "Create a declaration-item-template",
                                                    "type": "number",
                                                    "example": 1
                                                },
                                                "label": {
                                                    "description": "Create a declaration-item-template",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "Create a declaration-item-template",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/DeclarationItemTemplateResponse"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "schema": {
                            "properties": {
                                "message": {
                                    "description": "Create a declaration-item-template",
                                    "type": "string",
                                    "example": "Please make sure that request parameters is correct"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/declaration-item-templates/{id}": {
            "get": {
                "tags": [
                    "declaration-item-templates"
                ],
                "summary": "Retrieve a declaration-item-template",
                "description": "Returns certain declaration item templates based on the given filters",
                "operationId": "getDeclarationItemTemplate",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "'id' field",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "description": "Including 'declaration_item_category'.",
                        "required": false,
                        "type": "array",
                        "allowEmptyValue": true,
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "default": ""
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "Retrieve a declaration-item-template",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/DeclarationItemTemplateResponse"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "schema": {
                            "properties": {
                                "message": {
                                    "description": "Retrieve a declaration-item-template",
                                    "type": "string",
                                    "example": "Please make sure that request parameters is correct"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/declarations": {
            "get": {
                "tags": [
                    "declarations"
                ],
                "summary": "Retrieve a health declaration",
                "description": "Returns health declaration based on the given filters",
                "operationId": "getDeclaration",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "description": "Including 'patient', 'declaration_items', 'journal_pharmaceutical_articles', 'updater', 'signer'",
                        "required": false,
                        "type": "array",
                        "allowEmptyValue": true,
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "default": ""
                    },
                    {
                        "name": "patient_id",
                        "in": "query",
                        "description": "Patient id field",
                        "required": false,
                        "type": "number",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "history_id",
                        "in": "query",
                        "description": "History id field",
                        "required": false,
                        "type": "number",
                        "allowEmptyValue": true,
                        "default": ""
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "Retrieve a health declaration",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/DeclarationsResponse"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "schema": {
                            "properties": {
                                "message": {
                                    "description": "Retrieve a health declaration",
                                    "type": "string",
                                    "example": "Please make sure that request parameters is correct"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "declarations"
                ],
                "summary": "Create a health declaration",
                "description": "",
                "operationId": "postDeclaration",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Body of request (obligatory)",
                        "required": true,
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "Create a health declaration",
                                    "properties": {
                                        "attributes": {
                                            "description": "Create a health declaration",
                                            "properties": {
                                                "patient_id": {
                                                    "description": "Create a health declaration",
                                                    "type": "number",
                                                    "example": "1"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    {
                        "name": "journal_pharmaceutical_articles",
                        "in": "query",
                        "description": "Journal pharmaceutical articles array field",
                        "required": false,
                        "type": "array",
                        "allowEmptyValue": true,
                        "items": {
                            "type": "string"
                        },
                        "default": ""
                    },
                    {
                        "name": "asthma",
                        "in": "query",
                        "description": "Astma field",
                        "required": false,
                        "type": "boolean",
                        "allowEmptyValue": true,
                        "default": ""
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "Create a health declaration",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/DeclarationsResponse"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "schema": {
                            "properties": {
                                "message": {
                                    "description": "Create a health declaration",
                                    "type": "string",
                                    "example": "Please make sure that request parameters is correct"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/devices": {
            "get": {
                "tags": [
                    "devices"
                ],
                "summary": "List devices",
                "description": "Returns list of devices based on the given filters",
                "operationId": "getDevices",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "description": "Including 'device_type', 'supplier', 'file_types', 'mount_templates', 'twain_data_sources', 'computers_where_default'.",
                        "required": false,
                        "type": "array",
                        "allowEmptyValue": true,
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "default": ""
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "List devices",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/DeviceResponse"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "schema": {
                            "properties": {
                                "message": {
                                    "description": "List devices",
                                    "type": "string",
                                    "example": "Please make sure that request parameters is correct"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/devices/{id}": {
            "get": {
                "tags": [
                    "devices"
                ],
                "summary": "Retrieve a device",
                "description": "Returns certain device based on the given filters",
                "operationId": "getDevice",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Bearer token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "description": "Including 'device_type', 'supplier', 'file_types', 'mount_templates', 'twain_data_sources', 'computers_where_default'.",
                        "required": false,
                        "type": "array",
                        "allowEmptyValue": true,
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "default": ""
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "Retrieve a device",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/DeviceResponse"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "schema": {
                            "properties": {
                                "message": {
                                    "description": "Retrieve a device",
                                    "type": "string",
                                    "example": "Please make sure that request parameters is correct"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/draft-email-report-rows": {
            "get": {
                "tags": [
                    "draft-email-report-rows"
                ],
                "summary": "List draft-email-report-rows",
                "description": "Returns a list of draft email report rows report rows based on the given filters",
                "operationId": "getDraftEmailReportRows",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "clinic_id",
                        "in": "query",
                        "description": "'clinic_id' field",
                        "required": false,
                        "type": "number",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "'per_page' field",
                        "required": false,
                        "type": "number",
                        "allowEmptyValue": true,
                        "default": ""
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "List draft-email-report-rows",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/DraftEmailReportRowResponse"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "schema": {
                            "properties": {
                                "message": {
                                    "description": "List draft-email-report-rows",
                                    "type": "string",
                                    "example": "Please make sure that request parameters is correct"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/draft-sms-report-rows": {
            "get": {
                "tags": [
                    "draft-sms-report-rows"
                ],
                "summary": "List draft-sms-report-rows",
                "description": "Returns a list of draft sms report rows based on the given filters",
                "operationId": "getDraftSmsReportRows",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "clinic_id",
                        "in": "query",
                        "description": "'clinic_id' field",
                        "required": false,
                        "type": "number",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "'per_page' field",
                        "required": false,
                        "type": "number",
                        "allowEmptyValue": true,
                        "default": ""
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "List draft-sms-report-rows",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/DraftSmsReportRowResponse"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "schema": {
                            "properties": {
                                "message": {
                                    "description": "List draft-sms-report-rows",
                                    "type": "string",
                                    "example": "Please make sure that request parameters is correct"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/draft-snail-mail-report-rows": {
            "get": {
                "tags": [
                    "draft-snail-mail-report-rows"
                ],
                "summary": "List draft-snail-mail-report-rows",
                "description": "Returns a list of draft snail mail report rows based on the given filters",
                "operationId": "getDraftSnailMailReportRows",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "clinic_id",
                        "in": "query",
                        "description": "'clinic_id' field",
                        "required": false,
                        "type": "number",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "'per_page' field",
                        "required": false,
                        "type": "number",
                        "allowEmptyValue": true,
                        "default": ""
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "List draft-snail-mail-report-rows",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/DraftSnailMailReportResponse"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "schema": {
                            "properties": {
                                "message": {
                                    "description": "List draft-snail-mail-report-rows",
                                    "type": "string",
                                    "example": "Please make sure that request parameters is correct"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/email-ics/{id}/schedule": {
            "post": {
                "tags": [
                    "email-ics"
                ],
                "summary": "Schedule an email-ics",
                "description": "Returns scheduled email ics based on the given filters",
                "operationId": "postEmailScheduleIcs",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "'id' field",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "Schedule an email-ics",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/EmailIcsResponse"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "schema": {
                            "properties": {
                                "message": {
                                    "description": "Schedule an email-ics",
                                    "type": "string",
                                    "example": "Please make sure that request parameters is correct"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/email-ics/{id}/unschedule": {
            "post": {
                "tags": [
                    "email-ics"
                ],
                "summary": "Unschedule an email-ics",
                "description": "Returns unscheduled email ics based on the given filters",
                "operationId": "postEmailUnscheduleIcs",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "'id' field",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "Unschedule an email-ics",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/EmailIcsResponse"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "schema": {
                            "properties": {
                                "message": {
                                    "description": "Unschedule an email-ics",
                                    "type": "string",
                                    "example": "Please make sure that request parameters is correct"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/emails": {
            "get": {
                "tags": [
                    "emails"
                ],
                "summary": "List emails",
                "description": "Returns a list of emails based on the given filters",
                "operationId": "getEmails",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "description": "Including 'patient'.",
                        "required": false,
                        "type": "array",
                        "allowEmptyValue": true,
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "default": ""
                    },
                    {
                        "name": "clinic_ids",
                        "in": "query",
                        "description": "'clinic_ids' field",
                        "required": false,
                        "type": "array",
                        "allowEmptyValue": true,
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "default": ""
                    },
                    {
                        "name": "patient_id",
                        "in": "query",
                        "description": "'patient_id' field",
                        "required": false,
                        "type": "number",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "sort_by",
                        "in": "query",
                        "description": "'sort_by' field",
                        "required": false,
                        "type": "string",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "'per_page' field",
                        "required": false,
                        "type": "string",
                        "allowEmptyValue": true,
                        "default": ""
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "List emails",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/EmailsResponse"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "schema": {
                            "properties": {
                                "message": {
                                    "description": "List emails",
                                    "type": "string",
                                    "example": "Please make sure that request parameters is correct"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "emails"
                ],
                "summary": "Create an email",
                "description": "Returns created email based on the given filters",
                "operationId": "postEmail",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Body of request (obligatory)",
                        "required": true,
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "Create an email",
                                    "properties": {
                                        "attributes": {
                                            "description": "Create an email",
                                            "properties": {
                                                "subject": {
                                                    "description": "Create an email",
                                                    "type": "string",
                                                    "example": "Test subject"
                                                },
                                                "body": {
                                                    "description": "Create an email",
                                                    "type": "string",
                                                    "example": "Test body"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "Create an email",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/EmailsResponse"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "schema": {
                            "properties": {
                                "message": {
                                    "description": "Create an email",
                                    "type": "string",
                                    "example": "Please make sure that request parameters is correct"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/emails/{id}": {
            "get": {
                "tags": [
                    "emails"
                ],
                "summary": "Retrieve an email",
                "description": "Returns certain email based on the given filters",
                "operationId": "getEmail",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "'id' field",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "description": "Including 'patient'.",
                        "required": false,
                        "type": "array",
                        "allowEmptyValue": true,
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "default": ""
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "Retrieve an email",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/EmailsResponse"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "schema": {
                            "properties": {
                                "message": {
                                    "description": "Retrieve an email",
                                    "type": "string",
                                    "example": "Please make sure that request parameters is correct"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "emails"
                ],
                "summary": "Edit an email",
                "description": "Returns edited email based on the given filters",
                "operationId": "patchEmail",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "'id' field",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Body of request (obligatory)",
                        "required": true,
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "Edit an email",
                                    "properties": {
                                        "attributes": {
                                            "description": "Edit an email",
                                            "properties": {
                                                "subject": {
                                                    "description": "Edit an email",
                                                    "type": "string",
                                                    "example": "Test subject"
                                                },
                                                "body": {
                                                    "description": "Edit an email",
                                                    "type": "string",
                                                    "example": "Test body"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    {
                        "name": "deleted",
                        "in": "query",
                        "description": "'deleted' field",
                        "required": false,
                        "type": "boolean",
                        "allowEmptyValue": true,
                        "default": ""
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "Edit an email",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/EmailsResponse"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "schema": {
                            "properties": {
                                "message": {
                                    "description": "Edit an email",
                                    "type": "string",
                                    "example": "Please make sure that request parameters is correct"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/emails/{id}/schedule": {
            "post": {
                "tags": [
                    "emails"
                ],
                "summary": "Schedule an email",
                "description": "Returns scheduled email based on the given filters",
                "operationId": "postEmailSchedule",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "'id' field",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "Schedule an email",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/EmailsResponse"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "schema": {
                            "properties": {
                                "message": {
                                    "description": "Schedule an email",
                                    "type": "string",
                                    "example": "Please make sure that request parameters is correct"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/emails/{id}/unschedule": {
            "post": {
                "tags": [
                    "emails"
                ],
                "summary": "Unschedule an email",
                "description": "Returns unscheduled email based on the given filters",
                "operationId": "postEmailUnschedule",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "'id' field",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "Unschedule an email",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/EmailsResponse"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "schema": {
                            "properties": {
                                "message": {
                                    "description": "Unschedule an email",
                                    "type": "string",
                                    "example": "Please make sure that request parameters is correct"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/events": {
            "get": {
                "tags": [
                    "events"
                ],
                "summary": "List events",
                "description": "Returns a list of events based on the given filters",
                "operationId": "getEvents",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "dtstart",
                        "in": "query",
                        "description": "'dtstart' field",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "dtend",
                        "in": "query",
                        "description": "'dtend' field",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "description": "Including 'booking', 'event_colors'.",
                        "required": false,
                        "type": "array",
                        "allowEmptyValue": true,
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "default": ""
                    },
                    {
                        "name": "caregiver_id",
                        "in": "query",
                        "description": "'caregiver_id' field",
                        "required": false,
                        "type": "string",
                        "allowEmptyValue": true
                    },
                    {
                        "name": "caregiver_ids",
                        "in": "query",
                        "description": "'caregiver_ids' field",
                        "required": false,
                        "type": "array",
                        "allowEmptyValue": true,
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "default": ""
                    },
                    {
                        "name": "room_ids",
                        "in": "query",
                        "description": "'room_ids' field",
                        "required": false,
                        "type": "array",
                        "allowEmptyValue": true,
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "default": ""
                    },
                    {
                        "name": "resource_ids",
                        "in": "query",
                        "description": "'resource_ids' field",
                        "required": false,
                        "type": "array",
                        "allowEmptyValue": true,
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "default": ""
                    },
                    {
                        "name": "from_munute",
                        "in": "query",
                        "description": "'from_munute' field",
                        "required": false,
                        "type": "string",
                        "allowEmptyValue": true
                    },
                    {
                        "name": "to_minute",
                        "in": "query",
                        "description": "'to_minute' field",
                        "required": false,
                        "type": "string",
                        "allowEmptyValue": true
                    },
                    {
                        "name": "display_weekends ",
                        "in": "query",
                        "description": "'display_weekends' field",
                        "required": false,
                        "type": "boolean",
                        "allowEmptyValue": true
                    },
                    {
                        "name": "hidden_weekday_ids",
                        "in": "query",
                        "description": "'hidden_weekday_ids' field",
                        "required": false,
                        "type": "array",
                        "allowEmptyValue": true,
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "default": ""
                    },
                    {
                        "name": "search_by_or",
                        "in": "query",
                        "description": "'search_by_or' field",
                        "required": false,
                        "type": "boolean",
                        "allowEmptyValue": true
                    },
                    {
                        "name": "clinic_ids",
                        "in": "query",
                        "description": "'clinic_ids' field",
                        "required": false,
                        "type": "array",
                        "allowEmptyValue": true,
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "default": ""
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "'status' field",
                        "required": false,
                        "type": "string",
                        "allowEmptyValue": true
                    },
                    {
                        "name": "sort_by",
                        "in": "query",
                        "description": "'sort_by' field",
                        "required": false,
                        "type": "string",
                        "allowEmptyValue": true
                    },
                    {
                        "name": "order",
                        "in": "query",
                        "description": "'order' field",
                        "required": false,
                        "type": "string",
                        "allowEmptyValue": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "List events",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/EventsResponse"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "schema": {
                            "properties": {
                                "message": {
                                    "description": "List events",
                                    "type": "string",
                                    "example": "Please make sure that request parameters is correct"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/human-prescription-rows": {
            "get": {
                "tags": [
                    "human-prescription-rows"
                ],
                "summary": "List human-prescription-rows",
                "description": "Returns a list of human prescription rows based on the given filters",
                "operationId": "getHumanPrescriptionRows",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "description": "Including 'human_prescription'.",
                        "required": false,
                        "type": "array",
                        "allowEmptyValue": true,
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "default": ""
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "List human-prescription-rows",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/HumanPrescriptionRowResponse"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "schema": {
                            "properties": {
                                "message": {
                                    "description": "List human-prescription-rows",
                                    "type": "string",
                                    "example": "Please make sure that request parameters is correct"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "human-prescription-rows"
                ],
                "summary": "Create a human-prescription-row",
                "description": "Returns created human prescription row based on the given filters",
                "operationId": "postHumanPrescriptionRow",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Body of request (obligatory)",
                        "required": true,
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "Create a human-prescription-row",
                                    "properties": {
                                        "attributes": {
                                            "description": "Create a human-prescription-row",
                                            "properties": {
                                                "human_prescription_id": {
                                                    "description": "Create a human-prescription-row",
                                                    "type": "number",
                                                    "example": 123
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "Create a human-prescription-row",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/HumanPrescriptionRowResponse"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "schema": {
                            "properties": {
                                "message": {
                                    "description": "Create a human-prescription-row",
                                    "type": "string",
                                    "example": "Please make sure that request parameters is correct"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/human-prescription-rows/{id}": {
            "get": {
                "tags": [
                    "human-prescription-rows"
                ],
                "summary": "Retrieve a human-prescription-row",
                "description": "Returns certain human prescription row based on the given filters",
                "operationId": "getHumanPrescriptionRow",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "'id' field",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "description": "Including 'human_prescription'.",
                        "required": false,
                        "type": "array",
                        "allowEmptyValue": true,
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "default": ""
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "Retrieve a human-prescription-row",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/HumanPrescriptionRowResponse"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "schema": {
                            "properties": {
                                "message": {
                                    "description": "Retrieve a human-prescription-row",
                                    "type": "string",
                                    "example": "Please make sure that request parameters is correct"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "human-prescription-rows"
                ],
                "summary": "Edit a human-prescription-row",
                "description": "Returns edited human prescription row based on the given filters",
                "operationId": "patchHumanPrescriptionRow",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "'id' field",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Body of request (obligatory)",
                        "required": true,
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "Edit a human-prescription-row",
                                    "properties": {
                                        "attributes": {
                                            "description": "Edit a human-prescription-row",
                                            "properties": {
                                                "human_prescription_id": {
                                                    "description": "Edit a human-prescription-row",
                                                    "type": "number",
                                                    "example": 123
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "Edit a human-prescription-row",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/HumanPrescriptionRowResponse"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "schema": {
                            "properties": {
                                "message": {
                                    "description": "Edit a human-prescription-row",
                                    "type": "string",
                                    "example": "Please make sure that request parameters is correct"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/human-prescriptions": {
            "get": {
                "tags": [
                    "human-prescriptions"
                ],
                "summary": "List human-prescriptions",
                "description": "Returns a list of human prescriptions based on the given filters",
                "operationId": "getHumanPrescriptions",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "description": "Including 'user', 'language', 'journal_pharmacy', 'journal_entry', 'patient', 'human_prescription_rows'.",
                        "required": false,
                        "type": "array",
                        "allowEmptyValue": true,
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "default": ""
                    },
                    {
                        "name": "user_ids",
                        "in": "query",
                        "description": "'user_ids' field",
                        "required": false,
                        "type": "array",
                        "allowEmptyValue": true,
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "default": ""
                    },
                    {
                        "name": "patient_id",
                        "in": "query",
                        "description": "'patient_id' field",
                        "required": false,
                        "type": "string",
                        "allowEmptyValue": true
                    },
                    {
                        "name": "deleted",
                        "in": "query",
                        "description": "'deleted' field",
                        "required": false,
                        "type": "boolean",
                        "allowEmptyValue": true
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "'status' field",
                        "required": false,
                        "type": "string",
                        "allowEmptyValue": true
                    },
                    {
                        "name": "sort_by",
                        "in": "query",
                        "description": "'sort_by' field",
                        "required": false,
                        "type": "string",
                        "allowEmptyValue": true
                    },
                    {
                        "name": "order",
                        "in": "query",
                        "description": "'order' field",
                        "required": false,
                        "type": "string",
                        "allowEmptyValue": true
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "'per_page' field",
                        "required": false,
                        "type": "string",
                        "allowEmptyValue": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "List human-prescriptions",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/HumanPrescriptionResponse"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "schema": {
                            "properties": {
                                "message": {
                                    "description": "List human-prescriptions",
                                    "type": "string",
                                    "example": "Please make sure that request parameters is correct"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "human-prescriptions"
                ],
                "summary": "Create a human-prescription",
                "description": "Returns created human prescription based on the given filters",
                "operationId": "postHumanPrescription",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Body of request (not obligatory)",
                        "required": false,
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "Create a human-prescription",
                                    "properties": {
                                        "attributes": {
                                            "description": "Create a human-prescription",
                                            "properties": {
                                                "accepted": {
                                                    "description": "Create a human-prescription",
                                                    "type": "boolean",
                                                    "example": true
                                                },
                                                "date": {
                                                    "description": "Create a human-prescription",
                                                    "type": "string",
                                                    "example": "2024-06-28T12:14:26+02:00"
                                                },
                                                "delivery_method": {
                                                    "description": "Create a human-prescription",
                                                    "type": "string"
                                                },
                                                "designated_message_receiver": {
                                                    "description": "Create a human-prescription",
                                                    "type": "string"
                                                },
                                                "prescriber_city": {
                                                    "description": "Create a human-prescription",
                                                    "type": "string"
                                                },
                                                "prescriber_code": {
                                                    "description": "Create a human-prescription",
                                                    "type": "string"
                                                },
                                                "prescriber_name": {
                                                    "description": "Create a human-prescription",
                                                    "type": "string"
                                                },
                                                "prescriber_number_or_name_of_house": {
                                                    "description": "Create a human-prescription",
                                                    "type": "string"
                                                },
                                                "prescriber_postal_code": {
                                                    "description": "Create a human-prescription",
                                                    "type": "string"
                                                },
                                                "prescriber_qualification_code": {
                                                    "description": "Create a human-prescription",
                                                    "type": "string"
                                                },
                                                "prescriber_street_name": {
                                                    "description": "Create a human-prescription",
                                                    "type": "string"
                                                },
                                                "prescriber_telecommunication": {
                                                    "description": "Create a human-prescription",
                                                    "type": "string"
                                                },
                                                "prescribers_comment": {
                                                    "description": "Create a human-prescription",
                                                    "type": "string"
                                                },
                                                "subject_of_care_city": {
                                                    "description": "Create a human-prescription",
                                                    "type": "string"
                                                },
                                                "subject_of_care_family_name": {
                                                    "description": "Create a human-prescription",
                                                    "type": "string"
                                                },
                                                "subject_of_care_first_given_name": {
                                                    "description": "Create a human-prescription",
                                                    "type": "string"
                                                },
                                                "subject_of_care_id_scheme": {
                                                    "description": "Create a human-prescription",
                                                    "type": "string"
                                                },
                                                "subject_of_care_id_value": {
                                                    "description": "Create a human-prescription",
                                                    "type": "string"
                                                },
                                                "subject_of_care_postal_code": {
                                                    "description": "Create a human-prescription",
                                                    "type": "string"
                                                },
                                                "subject_of_care_street_name": {
                                                    "description": "Create a human-prescription",
                                                    "type": "string"
                                                },
                                                "subject_of_care_phone_number": {
                                                    "description": "Create a human-prescription",
                                                    "type": "string"
                                                },
                                                "test_indicator": {
                                                    "description": "Create a human-prescription",
                                                    "type": "string"
                                                },
                                                "callback_url": {
                                                    "description": "Create a human-prescription",
                                                    "type": "string"
                                                },
                                                "uuid": {
                                                    "description": "Create a human-prescription",
                                                    "type": "string"
                                                },
                                                "healthcare_agent_id": {
                                                    "description": "Create a human-prescription",
                                                    "type": "string"
                                                },
                                                "subject_of_care_sex": {
                                                    "description": "Create a human-prescription",
                                                    "type": "string"
                                                },
                                                "signed_at": {
                                                    "description": "Create a human-prescription",
                                                    "type": "string",
                                                    "example": "2024-06-28T12:14:26+02:00"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "Create a human-prescription",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/HumanPrescriptionResponse"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "schema": {
                            "properties": {
                                "message": {
                                    "description": "Create a human-prescription",
                                    "type": "string",
                                    "example": "Please make sure that request parameters is correct"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/human-prescriptions/{id}": {
            "get": {
                "tags": [
                    "human-prescriptions"
                ],
                "summary": "Retrieve a human-prescription",
                "description": "Returns certain human prescription based on the given filters",
                "operationId": "getHumanPrescription",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "'id' field",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "description": "Including 'user', 'language', 'journal_pharmacy', 'journal_entry', 'patient', 'human_prescription_rows'.",
                        "required": false,
                        "type": "array",
                        "allowEmptyValue": true,
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "default": ""
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "Retrieve a human-prescription",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/HumanPrescriptionResponse"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "schema": {
                            "properties": {
                                "message": {
                                    "description": "Retrieve a human-prescription",
                                    "type": "string",
                                    "example": "Please make sure that request parameters is correct"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "human-prescriptions"
                ],
                "summary": "Edit a human-prescription",
                "description": "Returns edited human prescription based on the given filters",
                "operationId": "patchHumanPrescription",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "'id' field",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Body of request (not obligatory)",
                        "required": false,
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "Edit a human-prescription",
                                    "properties": {
                                        "attributes": {
                                            "description": "Edit a human-prescription",
                                            "properties": {
                                                "accepted": {
                                                    "description": "Edit a human-prescription",
                                                    "type": "boolean",
                                                    "example": true
                                                },
                                                "date": {
                                                    "description": "Edit a human-prescription",
                                                    "type": "string",
                                                    "example": "2024-06-28T12:14:26+02:00"
                                                },
                                                "delivery_method": {
                                                    "description": "Edit a human-prescription",
                                                    "type": "string"
                                                },
                                                "designated_message_receiver": {
                                                    "description": "Edit a human-prescription",
                                                    "type": "string"
                                                },
                                                "prescriber_city": {
                                                    "description": "Edit a human-prescription",
                                                    "type": "string"
                                                },
                                                "prescriber_code": {
                                                    "description": "Edit a human-prescription",
                                                    "type": "string"
                                                },
                                                "prescriber_name": {
                                                    "description": "Edit a human-prescription",
                                                    "type": "string"
                                                },
                                                "prescriber_number_or_name_of_house": {
                                                    "description": "Edit a human-prescription",
                                                    "type": "string"
                                                },
                                                "prescriber_postal_code": {
                                                    "description": "Edit a human-prescription",
                                                    "type": "string"
                                                },
                                                "prescriber_qualification_code": {
                                                    "description": "Edit a human-prescription",
                                                    "type": "string"
                                                },
                                                "prescriber_street_name": {
                                                    "description": "Edit a human-prescription",
                                                    "type": "string"
                                                },
                                                "prescriber_telecommunication": {
                                                    "description": "Edit a human-prescription",
                                                    "type": "string"
                                                },
                                                "prescribers_comment": {
                                                    "description": "Edit a human-prescription",
                                                    "type": "string"
                                                },
                                                "subject_of_care_city": {
                                                    "description": "Edit a human-prescription",
                                                    "type": "string"
                                                },
                                                "subject_of_care_family_name": {
                                                    "description": "Edit a human-prescription",
                                                    "type": "string"
                                                },
                                                "subject_of_care_first_given_name": {
                                                    "description": "Edit a human-prescription",
                                                    "type": "string"
                                                },
                                                "subject_of_care_id_scheme": {
                                                    "description": "Edit a human-prescription",
                                                    "type": "string"
                                                },
                                                "subject_of_care_id_value": {
                                                    "description": "Edit a human-prescription",
                                                    "type": "string"
                                                },
                                                "subject_of_care_postal_code": {
                                                    "description": "Edit a human-prescription",
                                                    "type": "string"
                                                },
                                                "subject_of_care_street_name": {
                                                    "description": "Edit a human-prescription",
                                                    "type": "string"
                                                },
                                                "subject_of_care_phone_number": {
                                                    "description": "Edit a human-prescription",
                                                    "type": "string"
                                                },
                                                "test_indicator": {
                                                    "description": "Edit a human-prescription",
                                                    "type": "string"
                                                },
                                                "callback_url": {
                                                    "description": "Edit a human-prescription",
                                                    "type": "string"
                                                },
                                                "uuid": {
                                                    "description": "Edit a human-prescription",
                                                    "type": "string"
                                                },
                                                "healthcare_agent_id": {
                                                    "description": "Edit a human-prescription",
                                                    "type": "string"
                                                },
                                                "subject_of_care_sex": {
                                                    "description": "Edit a human-prescription",
                                                    "type": "string"
                                                },
                                                "signed_at": {
                                                    "description": "Edit a human-prescription",
                                                    "type": "string",
                                                    "example": "2024-06-28T12:14:26+02:00"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "Edit a human-prescription",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/HumanPrescriptionResponse"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "schema": {
                            "properties": {
                                "message": {
                                    "description": "Edit a human-prescription",
                                    "type": "string",
                                    "example": "Please make sure that request parameters is correct"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/images": {
            "get": {
                "tags": [
                    "images"
                ],
                "summary": "List images",
                "description": "Returns list of images based on the given filters",
                "operationId": "getImages",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "description": "Including 'patient', 'twain_data_source', 'device', 'file_type', 'mount_item', 'remittances', 'image_annotations','caries'.",
                        "required": false,
                        "type": "array",
                        "allowEmptyValue": true,
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "default": ""
                    },
                    {
                        "name": "deleted",
                        "in": "query",
                        "description": "'deleted' field",
                        "required": false,
                        "type": "boolean",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "has_mount",
                        "in": "query",
                        "description": "'has_mount' field",
                        "required": false,
                        "type": "boolean",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "sort_by",
                        "in": "query",
                        "description": "'sort_by' field",
                        "required": false,
                        "type": "string",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "'per_page' field",
                        "required": false,
                        "type": "number",
                        "allowEmptyValue": true,
                        "default": ""
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "List images",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/ImageResponse"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "schema": {
                            "properties": {
                                "message": {
                                    "description": "List images",
                                    "type": "string",
                                    "example": "Please make sure that request parameters is correct"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/images/{id}": {
            "get": {
                "tags": [
                    "images"
                ],
                "summary": "Retrieve an image",
                "description": "Returns certain image based on the given filters",
                "operationId": "getImage",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "'id' field",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "description": "Including 'patient', 'twain_data_source', 'device', 'file_type', 'mount_item', 'remittances', 'image_annotations','caries'.",
                        "required": false,
                        "type": "array",
                        "allowEmptyValue": true,
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "default": ""
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "Retrieve an image",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/ImageResponse"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "schema": {
                            "properties": {
                                "message": {
                                    "description": "Retrieve an image",
                                    "type": "string",
                                    "example": "Please make sure that request parameters is correct"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "images"
                ],
                "summary": "Edit an image",
                "description": "Returns edited image based on the given filters",
                "operationId": "patchImage",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "'id' field",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Body of request (obligatory)",
                        "required": false,
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "Edit an image",
                                    "properties": {
                                        "attributes": {
                                            "description": "Edit an image",
                                            "properties": {
                                                "name": {
                                                    "description": "Edit an image",
                                                    "type": "string",
                                                    "example": "Test name"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "Edit an image",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/ImageResponse"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "schema": {
                            "properties": {
                                "message": {
                                    "description": "Edit an image",
                                    "type": "string",
                                    "example": "Please make sure that request parameters is correct"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/incomplete-received-remittance-report-rows": {
            "get": {
                "tags": [
                    "incomplete-received-remittance-report-rows"
                ],
                "summary": "List incomplete-received-remittance-report-rows",
                "description": "Returns a list of incomplete received remittance report rows based on the given filters",
                "operationId": "getIncompleteReceivedRemittanceReportRow",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "clinic_id",
                        "in": "query",
                        "description": "'clinic_id' field",
                        "required": false,
                        "type": "number",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "user_group_id",
                        "in": "query",
                        "description": "'user_group_id' field",
                        "required": false,
                        "type": "number",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "sort_by",
                        "in": "query",
                        "description": "'sort_by' field",
                        "required": false,
                        "type": "string",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "'per_page' field",
                        "required": false,
                        "type": "number",
                        "allowEmptyValue": true,
                        "default": ""
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "List incomplete-received-remittance-report-rows",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/IncompleteReceivedRemittanceReportRowResponse"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "schema": {
                            "properties": {
                                "message": {
                                    "description": "List incomplete-received-remittance-report-rows",
                                    "type": "string",
                                    "example": "Please make sure that request parameters is correct"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/invoice-payments": {
            "get": {
                "tags": [
                    "invoice-payments"
                ],
                "summary": "List invoice-payments",
                "description": "Returns a list of invoice payments based on the given filters",
                "operationId": "getInvoicePayments",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "description": "Including 'patient', 'patient_invoice', 'payments_per_invoices', 'patient_payment_method', 'daily_reconciliation', 'payment_service', 'payment_file'.",
                        "required": false,
                        "type": "array",
                        "allowEmptyValue": true,
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "default": ""
                    },
                    {
                        "name": "fiscal_year_id",
                        "in": "query",
                        "description": "'fiscal_year_id' field",
                        "required": false,
                        "type": "number",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "clinic_ids",
                        "in": "query",
                        "description": "'clinic_ids' field",
                        "required": false,
                        "type": "array",
                        "allowEmptyValue": true,
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "default": ""
                    },
                    {
                        "name": "payment_type_id",
                        "in": "query",
                        "description": "'payment_type_id' field",
                        "required": false,
                        "type": "number",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "payment_type_names",
                        "in": "query",
                        "description": "'payment_type_names' field",
                        "required": false,
                        "type": "array",
                        "allowEmptyValue": true,
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "default": ""
                    },
                    {
                        "name": "filter.ids",
                        "in": "query",
                        "description": "'filter.ids' field",
                        "required": false,
                        "type": "string",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "from_date",
                        "in": "query",
                        "description": "'from_date' field",
                        "required": false,
                        "type": "string",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "to_date",
                        "in": "query",
                        "description": "'to_date' field (required when 'from_date' provided)",
                        "required": false,
                        "type": "string",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "succeeded",
                        "in": "query",
                        "description": "'succeeded' field",
                        "required": false,
                        "type": "boolean",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "has_payment_per_invoice",
                        "in": "query",
                        "description": "'has_payment_per_invoice' field",
                        "required": false,
                        "type": "boolean",
                        "allowEmptyValue": true,
                        "default": ""
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "List invoice-payments",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/InvoicePaymentResponse"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "schema": {
                            "properties": {
                                "message": {
                                    "description": "List invoice-payments",
                                    "type": "string",
                                    "example": "Please make sure that request parameters is correct"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "invoice-payments"
                ],
                "summary": "Create an invoice-payment",
                "description": "Returns created invoice payment based on the given filters",
                "operationId": "postInvoicePayment",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "custom_payment_type_id",
                        "in": "query",
                        "description": "Note for body: 'The custom payment type id field is required when payment type id is empty'.",
                        "required": false,
                        "type": "number",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Body of request (obligatory)",
                        "required": true,
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "Create an invoice-payment",
                                    "properties": {
                                        "attributes": {
                                            "description": "Create an invoice-payment",
                                            "properties": {
                                                "currency_id": {
                                                    "description": "Create an invoice-payment",
                                                    "type": "number",
                                                    "example": 123
                                                },
                                                "payment_type_id": {
                                                    "description": "Create an invoice-payment",
                                                    "type": "number",
                                                    "example": 1
                                                },
                                                "fiscal_year_id": {
                                                    "description": "Create an invoice-payment",
                                                    "type": "number",
                                                    "example": 3
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "Create an invoice-payment",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/InvoicePaymentResponse"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "schema": {
                            "properties": {
                                "message": {
                                    "description": "Create an invoice-payment",
                                    "type": "string",
                                    "example": "Please make sure that request parameters is correct"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/invoice-payments/send-to-terminal": {
            "post": {
                "tags": [
                    "invoice-payments"
                ],
                "summary": "Invoice payment send-to-terminal",
                "description": "Returns invoice payment send-to-terminal based on the given filters",
                "operationId": "postInvoicePaymentSendToTerminal",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "paid_at",
                        "in": "query",
                        "description": "'paid_at' field",
                        "required": false,
                        "type": "string",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Body of request (obligatory)",
                        "required": true,
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "Invoice payment send-to-terminal",
                                    "properties": {
                                        "attributes": {
                                            "description": "Invoice payment send-to-terminal",
                                            "properties": {
                                                "currency_id": {
                                                    "description": "Invoice payment send-to-terminal",
                                                    "type": "number",
                                                    "example": 123
                                                },
                                                "payment_type_id": {
                                                    "description": "Invoice payment send-to-terminal",
                                                    "type": "number",
                                                    "example": 1
                                                },
                                                "fiscal_year_id": {
                                                    "description": "Invoice payment send-to-terminal",
                                                    "type": "number",
                                                    "example": 3
                                                },
                                                "terminal_id": {
                                                    "description": "Invoice payment send-to-terminal",
                                                    "type": "number",
                                                    "example": 10
                                                },
                                                "invoice_id": {
                                                    "description": "Invoice payment send-to-terminal",
                                                    "type": "number",
                                                    "example": 5
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "Invoice payment send-to-terminal",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/InvoicePaymentResponse"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "schema": {
                            "properties": {
                                "message": {
                                    "description": "Invoice payment send-to-terminal",
                                    "type": "string",
                                    "example": "Please make sure that request parameters is correct"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/invoice-payments/{id}": {
            "get": {
                "tags": [
                    "invoice-payments"
                ],
                "summary": "Retrieve an invoice-payment",
                "description": "Returns certain invoice payment based on the given filters",
                "operationId": "getInvoicePayment",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "'id' field",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "description": "Including 'patient', 'patient_invoice', 'payments_per_invoices', 'patient_payment_method', 'daily_reconciliation', 'payment_service', 'payment_file'.",
                        "required": false,
                        "type": "array",
                        "allowEmptyValue": true,
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "default": ""
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "Retrieve an invoice-payment",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/InvoicePaymentResponse"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "schema": {
                            "properties": {
                                "message": {
                                    "description": "Retrieve an invoice-payment",
                                    "type": "string",
                                    "example": "Please make sure that request parameters is correct"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "invoice-payments"
                ],
                "summary": "Edit an invoice-payment",
                "description": "Returns edited invoice payment based on the given filters",
                "operationId": "patchInvoicePayment",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "'id' field",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "custom_payment_type_id",
                        "in": "query",
                        "description": "Note for body: 'The custom payment type id field is required when payment type id is empty'.",
                        "required": false,
                        "type": "number",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Body of request (obligatory)",
                        "required": true,
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "Edit an invoice-payment",
                                    "properties": {
                                        "attributes": {
                                            "description": "Edit an invoice-payment",
                                            "properties": {
                                                "currency_id": {
                                                    "description": "Edit an invoice-payment",
                                                    "type": "number",
                                                    "example": 123
                                                },
                                                "payment_type_id": {
                                                    "description": "Edit an invoice-payment",
                                                    "type": "number",
                                                    "example": 1
                                                },
                                                "fiscal_year_id": {
                                                    "description": "Edit an invoice-payment",
                                                    "type": "number",
                                                    "example": 3
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "Edit an invoice-payment",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/InvoicePaymentResponse"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "schema": {
                            "properties": {
                                "message": {
                                    "description": "Edit an invoice-payment",
                                    "type": "string",
                                    "example": "Please make sure that request parameters is correct"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/invoice-types": {
            "get": {
                "tags": [
                    "invoice-types"
                ],
                "summary": "List invoice-types",
                "description": "Returns list of invoice types based on the given filters",
                "operationId": "getInvoiceTypes",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "description": "Including 'payment_types', 'default_payment_type'.",
                        "required": false,
                        "type": "array",
                        "allowEmptyValue": true,
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "default": ""
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "'name' field",
                        "required": false,
                        "type": "string",
                        "allowEmptyValue": true,
                        "default": ""
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "List invoice-types",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/InvoiceTypeResponse"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "schema": {
                            "properties": {
                                "message": {
                                    "description": "List invoice-types",
                                    "type": "string",
                                    "example": "Please make sure that request parameters is correct"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/invoice-types/{id}": {
            "get": {
                "tags": [
                    "invoice-types"
                ],
                "summary": "Retrieve a invoice-type",
                "description": "Returns certain invoice type based on the given filters",
                "operationId": "getInvoiceType",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "{id} field",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "description": "Including 'payment_types', 'default_payment_type'.",
                        "required": false,
                        "type": "array",
                        "allowEmptyValue": true,
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "default": ""
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "Retrieve a invoice-type",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/InvoiceTypeResponse"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "schema": {
                            "properties": {
                                "message": {
                                    "description": "Retrieve a invoice-type",
                                    "type": "string",
                                    "example": "Please make sure that request parameters is correct"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/journal-entries": {
            "get": {
                "tags": [
                    "journal-entries"
                ],
                "summary": "List journal-entries",
                "description": "Returns journal entries based on the given filters",
                "operationId": "getJournalEntries",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "description": "Including additional data, like: 'clinic', 'patient', 'journal_diagnosis', 'free_card', 'verification', 'user', 'related_user', 'history', 'treatment', 'reimbursement_type', 'price', 'county_council_price', 'currency', 'vat_code', 'teeth', 'elements', 'position_elements', 'journal_validation', 'patient_invoice_row', 'patient_invoice_rows', 'claim_row', 'signer', 'prescription', 'remittance', 'received_remittance', 'sent_remittance'.",
                        "required": false,
                        "type": "array",
                        "allowEmptyValue": true,
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "default": ""
                    },
                    {
                        "name": "patient_id",
                        "in": "query",
                        "description": "'patient_id' field",
                        "required": false,
                        "type": "string",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "clinic",
                        "in": "query",
                        "description": "'clinic' field",
                        "required": false,
                        "type": "string",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "patient_invoice_rows",
                        "in": "query",
                        "description": "'patient_invoice_rows' field",
                        "required": false,
                        "type": "string",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "claim_row",
                        "in": "query",
                        "description": "'claim_row' field",
                        "required": false,
                        "type": "string",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "draft",
                        "in": "query",
                        "description": "'draft' field",
                        "required": false,
                        "type": "boolean",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "id",
                        "in": "query",
                        "description": "'id' field",
                        "required": false,
                        "type": "string",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "deleted",
                        "in": "query",
                        "description": "'deleted' field",
                        "required": false,
                        "type": "boolean",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "user_ids",
                        "in": "query",
                        "description": "list of user's ids",
                        "required": false,
                        "type": "string",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "reimbursable",
                        "in": "query",
                        "description": "'reimbursable' field",
                        "required": false,
                        "type": "boolean",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "stub",
                        "in": "query",
                        "description": "'stub' field",
                        "required": false,
                        "type": "string",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "reimbursement_type_id",
                        "in": "query",
                        "description": "'reimbursement_type_id' field",
                        "required": false,
                        "type": "string",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "entry_type",
                        "in": "query",
                        "description": "'entry_type' field",
                        "required": false,
                        "type": "string",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "type",
                        "in": "query",
                        "description": "'type' field",
                        "required": false,
                        "type": "string",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "unsigned",
                        "in": "query",
                        "description": "'unsigned' field",
                        "required": false,
                        "type": "boolean",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "entry_date",
                        "in": "query",
                        "description": "'entry_date' field",
                        "required": false,
                        "type": "string",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "tooth_ids",
                        "in": "query",
                        "description": "'tooth_ids' field",
                        "required": false,
                        "type": "array",
                        "allowEmptyValue": true,
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "default": ""
                    },
                    {
                        "name": "teeth",
                        "in": "query",
                        "description": "'teeth' field",
                        "required": false,
                        "type": "string",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "claimed",
                        "in": "query",
                        "description": "'claimed' field",
                        "required": false,
                        "type": "boolean",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "'status' field",
                        "required": false,
                        "type": "string",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "query",
                        "in": "query",
                        "description": "'query' field",
                        "required": false,
                        "type": "string",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "sort_by",
                        "in": "query",
                        "description": "'sort_by' field",
                        "required": false,
                        "type": "string",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "'per_page' field",
                        "required": false,
                        "type": "integer",
                        "allowEmptyValue": true,
                        "default": ""
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "List journal-entries",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/JournalEntryResponse"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "schema": {
                            "properties": {
                                "message": {
                                    "description": "List journal-entries",
                                    "type": "string",
                                    "example": "Please make sure that request parameters is correct"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "journal-entries"
                ],
                "summary": "Create a journal-entry",
                "description": "Returns created journal entry based on the given filters",
                "operationId": "postJournalEntry",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Body of request (obligatory)",
                        "required": true,
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "Create a journal-entry",
                                    "properties": {
                                        "attributes": {
                                            "description": "Create a journal-entry",
                                            "properties": {
                                                "patient_id": {
                                                    "description": "Create a journal-entry",
                                                    "type": "string",
                                                    "example": "11"
                                                },
                                                "user_id": {
                                                    "description": "Create a journal-entry",
                                                    "type": "string",
                                                    "example": "12"
                                                },
                                                "entry_type": {
                                                    "description": "Create a journal-entry",
                                                    "type": "string",
                                                    "example": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "Create a journal-entry",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/JournalEntryResponse"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "schema": {
                            "properties": {
                                "message": {
                                    "description": "Create a journal-entry",
                                    "type": "string",
                                    "example": "Please make sure that request parameters is correct"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/journal-entries/{id}": {
            "get": {
                "tags": [
                    "journal-entries"
                ],
                "summary": "Retrieve a journal-entry",
                "description": "Returns journal entry based on the given filters",
                "operationId": "getJournalEntry",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "'id' (journal entry) field",
                        "required": true,
                        "type": "number",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "description": "Including additional data, like: 'clinic', 'patient', 'journal_diagnosis', 'free_card', 'verification', 'user', 'related_user', 'history', 'treatment', 'reimbursement_type', 'price', 'county_council_price', 'currency', 'vat_code', 'teeth', 'elements', 'position_elements', 'journal_validation', 'patient_invoice_row', 'patient_invoice_rows', 'claim_row', 'signer', 'prescription', 'remittance', 'received_remittance', 'sent_remittance'.",
                        "required": false,
                        "type": "array",
                        "allowEmptyValue": true,
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "default": ""
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "Retrieve a journal-entry",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/JournalEntryResponse"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "schema": {
                            "properties": {
                                "message": {
                                    "description": "Retrieve a journal-entry",
                                    "type": "string",
                                    "example": "Please make sure that request parameters is correct"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "journal-entries"
                ],
                "summary": "Edit a journal-entry",
                "description": "Returns edited journal entry based on the given filters",
                "operationId": "patchJournalEntry",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "'id' (journal entry) field",
                        "required": true,
                        "type": "number",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Body of request (obligatory)",
                        "required": true,
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "Edit a journal-entry",
                                    "properties": {
                                        "attributes": {
                                            "description": "Edit a journal-entry",
                                            "properties": {
                                                "patient_id": {
                                                    "description": "Edit a journal-entry",
                                                    "type": "string",
                                                    "example": "11"
                                                },
                                                "user_id": {
                                                    "description": "Edit a journal-entry",
                                                    "type": "string",
                                                    "example": "12"
                                                },
                                                "entry_type": {
                                                    "description": "Edit a journal-entry",
                                                    "type": "string",
                                                    "example": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    {
                        "name": "clinic",
                        "in": "query",
                        "description": "'clinic' field",
                        "required": false,
                        "type": "string",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "patient_invoice_rows",
                        "in": "query",
                        "description": "'patient_invoice_rows' field",
                        "required": false,
                        "type": "string",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "claim_row",
                        "in": "query",
                        "description": "'claim_row' field",
                        "required": false,
                        "type": "string",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "draft",
                        "in": "query",
                        "description": "'draft' field",
                        "required": false,
                        "type": "boolean",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "id",
                        "in": "query",
                        "description": "'id' field",
                        "required": false,
                        "type": "string",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "deleted",
                        "in": "query",
                        "description": "'deleted' field",
                        "required": false,
                        "type": "boolean",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "reimbursable",
                        "in": "query",
                        "description": "'reimbursable' field",
                        "required": false,
                        "type": "boolean",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "stub",
                        "in": "query",
                        "description": "'stub' field",
                        "required": false,
                        "type": "string",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "reimbursement_type_id",
                        "in": "query",
                        "description": "'reimbursement_type_id' field",
                        "required": false,
                        "type": "string",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "type",
                        "in": "query",
                        "description": "'type' field",
                        "required": false,
                        "type": "string",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "unsigned",
                        "in": "query",
                        "description": "'unsigned' field",
                        "required": false,
                        "type": "boolean",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "entry_date",
                        "in": "query",
                        "description": "'entry_date' field",
                        "required": false,
                        "type": "string",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "tooth_ids",
                        "in": "query",
                        "description": "'tooth_ids' field",
                        "required": false,
                        "type": "array",
                        "allowEmptyValue": true,
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "default": ""
                    },
                    {
                        "name": "teeth",
                        "in": "query",
                        "description": "'teeth' field",
                        "required": false,
                        "type": "string",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "claimed",
                        "in": "query",
                        "description": "'claimed' field",
                        "required": false,
                        "type": "boolean",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "'status' field",
                        "required": false,
                        "type": "string",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "include_price",
                        "in": "query",
                        "description": "'include_price' field",
                        "required": false,
                        "type": "boolean",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "show_patient_personal_data",
                        "in": "query",
                        "description": "'show_patient_personal_data' field",
                        "required": false,
                        "type": "boolean",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "sort_by",
                        "in": "query",
                        "description": "'sort_by' field",
                        "required": false,
                        "type": "string",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "'per_page' field",
                        "required": false,
                        "type": "integer",
                        "allowEmptyValue": true,
                        "default": ""
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "Edit a journal-entry",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/JournalEntryResponse"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "schema": {
                            "properties": {
                                "message": {
                                    "description": "Edit a journal-entry",
                                    "type": "string",
                                    "example": "Please make sure that request parameters is correct"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/journal-entry-macro-items": {
            "get": {
                "tags": [
                    "journal-entry-macro-items"
                ],
                "summary": "List journal-entry-macro-items",
                "description": "Returns list of journal entry macro items based on the given filters",
                "operationId": "getJournalEntryMacroItems",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "description": "Including 'journal_entry_macro', 'history', 'journal_diagnosis', 'price', 'county_council_price', 'journal_validation', 'reimbursement_type', 'treatment', 'vat_code', 'county_council', 'elements'.",
                        "required": false,
                        "type": "array",
                        "allowEmptyValue": true,
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "default": ""
                    },
                    {
                        "name": "deleted",
                        "in": "query",
                        "description": "'deleted' field",
                        "required": false,
                        "type": "boolean",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "draft",
                        "in": "query",
                        "description": "'draft' field",
                        "required": false,
                        "type": "boolean",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "sort_by",
                        "in": "query",
                        "description": "'sort_by' field",
                        "required": false,
                        "type": "string",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "'per_page' field",
                        "required": false,
                        "type": "number",
                        "allowEmptyValue": true,
                        "default": ""
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "List journal-entry-macro-items",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/JournalEntryMacroItemResponse"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "schema": {
                            "properties": {
                                "message": {
                                    "description": "List journal-entry-macro-items",
                                    "type": "string",
                                    "example": "Please make sure that request parameters is correct"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "journal-entry-macro-items"
                ],
                "summary": "Create a journal-entry-macro-item",
                "description": "Returns created journal entry macro item based on the given filters",
                "operationId": "postJournalEntryMacroItem",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Body of request (obligatory)",
                        "required": true,
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "Create a journal-entry-macro-item",
                                    "properties": {
                                        "attributes": {
                                            "description": "Create a journal-entry-macro-item",
                                            "properties": {
                                                "journal_entry_macro_id": {
                                                    "description": "Create a journal-entry-macro-item",
                                                    "type": "number",
                                                    "example": 1
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "Create a journal-entry-macro-item",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/JournalEntryMacroItemResponse"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "schema": {
                            "properties": {
                                "message": {
                                    "description": "Create a journal-entry-macro-item",
                                    "type": "string",
                                    "example": "Please make sure that request parameters is correct"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/journal-entry-macro-items/{id}": {
            "get": {
                "tags": [
                    "journal-entry-macro-items"
                ],
                "summary": "Retrieve a journal-entry-macro-item",
                "description": "Returns certain journal entry macro item based on the given filters",
                "operationId": "getJournalEntryMacroItem",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "'id' field",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "description": "Including 'journal_entry_macro', 'history', 'journal_diagnosis', 'price', 'county_council_price', 'journal_validation', 'reimbursement_type', 'treatment', 'vat_code', 'county_council', 'elements'.",
                        "required": false,
                        "type": "array",
                        "allowEmptyValue": true,
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "default": ""
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "Retrieve a journal-entry-macro-item",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/JournalEntryMacroItemResponse"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "schema": {
                            "properties": {
                                "message": {
                                    "description": "Retrieve a journal-entry-macro-item",
                                    "type": "string",
                                    "example": "Please make sure that request parameters is correct"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "journal-entry-macro-items"
                ],
                "summary": "Edit a journal-entry-macro-item",
                "description": "Returns edited journal entry macro item based on the given filters",
                "operationId": "patchJournalEntryMacroItem",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Bearer token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Body of request (obligatory)",
                        "required": true,
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "Edit a journal-entry-macro-item",
                                    "properties": {
                                        "attributes": {
                                            "description": "Edit a journal-entry-macro-item",
                                            "properties": {
                                                "journal_entry_macro_id": {
                                                    "description": "Edit a journal-entry-macro-item",
                                                    "type": "number",
                                                    "example": 1
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "Edit a journal-entry-macro-item",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/JournalEntryMacroItemResponse"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "schema": {
                            "properties": {
                                "message": {
                                    "description": "Edit a journal-entry-macro-item",
                                    "type": "string",
                                    "example": "Please make sure that request parameters is correct"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/journal-entry-macros": {
            "get": {
                "tags": [
                    "journal-entry-macros"
                ],
                "summary": "List journal-entry-macros",
                "description": "Returns list of journal entry macros based on the given filters",
                "operationId": "getJournalEntryMacros",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "description": "Including 'user', 'currency', 'journal_entry_macro_items'.",
                        "required": false,
                        "type": "array",
                        "allowEmptyValue": true,
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "default": ""
                    },
                    {
                        "name": "user_id",
                        "in": "query",
                        "description": "'user_id' field",
                        "required": false,
                        "type": "number",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "deleted",
                        "in": "query",
                        "description": "'deleted' field",
                        "required": false,
                        "type": "boolean",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "elements",
                        "in": "query",
                        "description": "'elements' field",
                        "required": false,
                        "type": "array",
                        "allowEmptyValue": true,
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "default": ""
                    },
                    {
                        "name": "sort_by",
                        "in": "query",
                        "description": "'sort_by' field",
                        "required": false,
                        "type": "string",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "'per_page' field",
                        "required": false,
                        "type": "number",
                        "allowEmptyValue": true,
                        "default": ""
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "List journal-entry-macros",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/JournalEntryMacroResponse"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "schema": {
                            "properties": {
                                "message": {
                                    "description": "List journal-entry-macros",
                                    "type": "string",
                                    "example": "Please make sure that request parameters is correct"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "journal-entry-macros"
                ],
                "summary": "Create a journal-entry-macro",
                "description": "Returns created journal entry macro based on the given filters",
                "operationId": "postJournalEntryMacro",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Body of request (obligatory)",
                        "required": false,
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "Create a journal-entry-macro",
                                    "properties": {
                                        "attributes": {
                                            "description": "Create a journal-entry-macro",
                                            "properties": {
                                                "name": {
                                                    "description": "Create a journal-entry-macro",
                                                    "type": "string",
                                                    "example": "Test name"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "Create a journal-entry-macro",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/JournalEntryMacroResponse"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "schema": {
                            "properties": {
                                "message": {
                                    "description": "Create a journal-entry-macro",
                                    "type": "string",
                                    "example": "Please make sure that request parameters is correct"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/journal-entry-macros/{id}": {
            "get": {
                "tags": [
                    "journal-entry-macros"
                ],
                "summary": "Retrieve a journal-entry-macro",
                "description": "Returns certain journal entry macro based on the given filters",
                "operationId": "getJournalEntryMacro",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "'id' field",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "description": "Including 'user', 'currency', 'journal_entry_macro_items'.",
                        "required": false,
                        "type": "array",
                        "allowEmptyValue": true,
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "default": ""
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "Retrieve a journal-entry-macro",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/JournalEntryMacroResponse"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "schema": {
                            "properties": {
                                "message": {
                                    "description": "Retrieve a journal-entry-macro",
                                    "type": "string",
                                    "example": "Please make sure that request parameters is correct"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "journal-entry-macros"
                ],
                "summary": "Edit a journal-entry-macro",
                "description": "Returns edited journal entry macro based on the given filters",
                "operationId": "patchJournalEntryMacro",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "'id' field",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "deleted",
                        "in": "query",
                        "description": "'deleted' field",
                        "required": false,
                        "type": "boolean",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Body of request (obligatory)",
                        "required": false,
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "Edit a journal-entry-macro",
                                    "properties": {
                                        "attributes": {
                                            "description": "Edit a journal-entry-macro",
                                            "properties": {
                                                "name": {
                                                    "description": "Edit a journal-entry-macro",
                                                    "type": "string",
                                                    "example": "Test name"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "Edit a journal-entry-macro",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/JournalEntryMacroResponse"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "schema": {
                            "properties": {
                                "message": {
                                    "description": "Edit a journal-entry-macro",
                                    "type": "string",
                                    "example": "Please make sure that request parameters is correct"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/journal-entry-text-templates": {
            "get": {
                "tags": [
                    "journal-entry-text-templates"
                ],
                "summary": "List journal-entry-text-templates",
                "description": "Returns list of journal entry text templates based on the given filters",
                "operationId": "getJournalEntryTextTemplates",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "description": "Including 'user', 'tenant_database'.",
                        "required": false,
                        "type": "array",
                        "allowEmptyValue": true,
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "default": ""
                    },
                    {
                        "name": "tenant_database_id",
                        "in": "query",
                        "description": "'tenant_database_id' field",
                        "required": false,
                        "type": "number",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "user_id",
                        "in": "query",
                        "description": "'user_id' field",
                        "required": false,
                        "type": "number",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "elements",
                        "in": "query",
                        "description": "'elements' field",
                        "required": false,
                        "type": "array",
                        "allowEmptyValue": true,
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "default": ""
                    },
                    {
                        "name": "sort_by",
                        "in": "query",
                        "description": "'sort_by' field",
                        "required": false,
                        "type": "string",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "'per_page' field",
                        "required": false,
                        "type": "number",
                        "allowEmptyValue": true,
                        "default": ""
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "List journal-entry-text-templates",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/JournalEntryTextTemplateResponse"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "schema": {
                            "properties": {
                                "message": {
                                    "description": "List journal-entry-text-templates",
                                    "type": "string",
                                    "example": "Please make sure that request parameters is correct"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "journal-entry-text-templates"
                ],
                "summary": "Create a journal-entry-text-template",
                "description": "Returns created journal entry text template based on the given filters",
                "operationId": "postJournalEntryTextTemplate",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Body of request (obligatory)",
                        "required": false,
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "Create a journal-entry-text-template",
                                    "properties": {
                                        "attributes": {
                                            "description": "Create a journal-entry-text-template",
                                            "properties": {
                                                "name": {
                                                    "description": "Create a journal-entry-text-template",
                                                    "type": "string",
                                                    "example": "Test name"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    {
                        "name": "tenant_database_id",
                        "in": "query",
                        "description": "'tenant_database_id' field",
                        "required": false,
                        "type": "number",
                        "allowEmptyValue": true,
                        "default": ""
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "Create a journal-entry-text-template",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/JournalEntryTextTemplateResponse"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "schema": {
                            "properties": {
                                "message": {
                                    "description": "Create a journal-entry-text-template",
                                    "type": "string",
                                    "example": "Please make sure that request parameters is correct"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/journal-entry-text-templates/{id}": {
            "get": {
                "tags": [
                    "journal-entry-text-templates"
                ],
                "summary": "Retrieve a journal-entry-text-template",
                "description": "Returns certain journal entry text template based on the given filters",
                "operationId": "getJournalEntryTextTemplate",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "'id' field",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "description": "Including 'user', 'tenant_database'.",
                        "required": false,
                        "type": "array",
                        "allowEmptyValue": true,
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "default": ""
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "Retrieve a journal-entry-text-template",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/JournalEntryTextTemplateResponse"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "schema": {
                            "properties": {
                                "message": {
                                    "description": "Retrieve a journal-entry-text-template",
                                    "type": "string",
                                    "example": "Please make sure that request parameters is correct"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "journal-entry-text-templates"
                ],
                "summary": "Edit a journal-entry-text-template",
                "description": "Returns edited journal entry text template based on the given filters",
                "operationId": "patchJournalEntryTextTemplate",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "'id' field",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Body of request (obligatory)",
                        "required": false,
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "Edit a journal-entry-text-template",
                                    "properties": {
                                        "attributes": {
                                            "description": "Edit a journal-entry-text-template",
                                            "properties": {
                                                "name": {
                                                    "description": "Edit a journal-entry-text-template",
                                                    "type": "string",
                                                    "example": "Test name"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "Edit a journal-entry-text-template",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/JournalEntryTextTemplateResponse"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "schema": {
                            "properties": {
                                "message": {
                                    "description": "Edit a journal-entry-text-template",
                                    "type": "string",
                                    "example": "Please make sure that request parameters is correct"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/journal-pharmacies": {
            "get": {
                "tags": [
                    "journal-pharmacies"
                ],
                "summary": "List journal-pharmacies",
                "description": "Returns a list journal pharmacies based on the given filters",
                "operationId": "getJournalFarmacies",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "List journal-pharmacies",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/JournalPharmacyResponse"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "schema": {
                            "properties": {
                                "message": {
                                    "description": "List journal-pharmacies",
                                    "type": "string",
                                    "example": "Please make sure that request parameters is correct"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "journal-pharmacies"
                ],
                "summary": "Create a journal-pharmacy",
                "description": "Returns a created journal pharmacy based on the given filters",
                "operationId": "postJournalFarmacy",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Body of request (obligatory)",
                        "required": true,
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "Create a journal-pharmacy",
                                    "properties": {
                                        "attributes": {
                                            "description": "Create a journal-pharmacy",
                                            "properties": {
                                                "city": {
                                                    "description": "Create a journal-pharmacy",
                                                    "type": "string",
                                                    "example": "Stockholm"
                                                },
                                                "code": {
                                                    "description": "Create a journal-pharmacy",
                                                    "type": "string",
                                                    "example": "7350045512239"
                                                },
                                                "label": {
                                                    "description": "Create a journal-pharmacy",
                                                    "type": "string",
                                                    "example": "RECEPTBREVL\u00c5DAN"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "Create a journal-pharmacy",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/JournalPharmacyResponse"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "schema": {
                            "properties": {
                                "message": {
                                    "description": "Create a journal-pharmacy",
                                    "type": "string",
                                    "example": "Please make sure that request parameters is correct"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/journal-pharmacies/{id}": {
            "get": {
                "tags": [
                    "journal-pharmacies"
                ],
                "summary": "Retrieve a journal-pharmacy",
                "description": "Returns a certain journal pharmacy based on the given filters",
                "operationId": "getJournalFarmacy",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "'id' field",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "Retrieve a journal-pharmacy",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/JournalPharmacyResponse"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "schema": {
                            "properties": {
                                "message": {
                                    "description": "Retrieve a journal-pharmacy",
                                    "type": "string",
                                    "example": "Please make sure that request parameters is correct"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "journal-pharmacies"
                ],
                "summary": "Edit a journal-pharmacy",
                "description": "Returns eduted journal pharmacy based on the given filters",
                "operationId": "patchJournalFarmacy",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "'id' field",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Body of request (obligatory)",
                        "required": true,
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "Edit a journal-pharmacy",
                                    "properties": {
                                        "attributes": {
                                            "description": "Edit a journal-pharmacy",
                                            "properties": {
                                                "city": {
                                                    "description": "Edit a journal-pharmacy",
                                                    "type": "string",
                                                    "example": "Stockholm"
                                                },
                                                "code": {
                                                    "description": "Edit a journal-pharmacy",
                                                    "type": "string",
                                                    "example": "7350045512239"
                                                },
                                                "label": {
                                                    "description": "Edit a journal-pharmacy",
                                                    "type": "string",
                                                    "example": "RECEPTBREVL\u00c5DAN"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "Edit a journal-pharmacy",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/JournalPharmacyResponse"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "schema": {
                            "properties": {
                                "message": {
                                    "description": "Edit a journal-pharmacy",
                                    "type": "string",
                                    "example": "Please make sure that request parameters is correct"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/latest-monitored-journal-entries": {
            "get": {
                "tags": [
                    "latest-monitored-journal-entries"
                ],
                "summary": "List latest-monitored-journal-entries",
                "description": "Returns a list of latest monitored journal entries based on the given filters",
                "operationId": "getLatestMonitoredJournalEntries",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "description": "Including 'patient', 'journal_diagnosis', 'free_card', 'verification', 'user', 'related_user', 'history', 'treatment', 'reimbursement_type', 'price', 'county_council_price', 'currency', 'vat_code', 'teeth', 'elements', 'position_elements', 'journal_validation', 'patient_invoice_row', 'patient_invoice_rows', 'claim_row', 'signer', 'prescription', 'remittance', 'received_remittance', 'sent_remittance'.",
                        "required": false,
                        "type": "array",
                        "allowEmptyValue": true,
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "default": ""
                    },
                    {
                        "name": "patient_id",
                        "in": "query",
                        "description": "'patient_id' field",
                        "required": false,
                        "type": "string",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "sort_by",
                        "in": "query",
                        "description": "'sort_by' field",
                        "required": false,
                        "type": "string",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "'per_page' field",
                        "required": false,
                        "type": "string",
                        "allowEmptyValue": true,
                        "default": ""
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "List latest-monitored-journal-entries",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/JournalEntryResponse"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "schema": {
                            "properties": {
                                "message": {
                                    "description": "List latest-monitored-journal-entries",
                                    "type": "string",
                                    "example": "Please make sure that request parameters is correct"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/missing-booking-epicrisis-report-rows": {
            "get": {
                "tags": [
                    "missing-booking-epicrisis-report-rows"
                ],
                "summary": "List missing-booking-epicrisis-report-rows",
                "description": "Returns a list of missing booking epicrisis report rows based on the given filters",
                "operationId": "getMissingBookingEpicrisisReportRows",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "include_archive",
                        "in": "query",
                        "description": "'include_archive' field",
                        "required": false,
                        "type": "number",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "clinic_id",
                        "in": "query",
                        "description": "'clinic_id' field",
                        "required": false,
                        "type": "number",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "user_ids",
                        "in": "query",
                        "description": "'user_ids' field",
                        "required": false,
                        "type": "array",
                        "allowEmptyValue": true,
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "default": ""
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "'per_page' field",
                        "required": false,
                        "type": "number",
                        "allowEmptyValue": true,
                        "default": ""
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "List missing-booking-epicrisis-report-rows",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/JournalEntryMissingBookingEpicrisisResponse"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "schema": {
                            "properties": {
                                "message": {
                                    "description": "List missing-booking-epicrisis-report-rows",
                                    "type": "string",
                                    "example": "Please make sure that request parameters is correct"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/missing-epicrisis-report-rows": {
            "get": {
                "tags": [
                    "missing-epicrisis-report-rows"
                ],
                "summary": "List missing-epicrisis-report-rows",
                "description": "Returns a list of missing epicrisis report rows based on the given filters",
                "operationId": "getMissingEpicrisisReportRow",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "clinic_id",
                        "in": "query",
                        "description": "'clinic_id' field",
                        "required": false,
                        "type": "number",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "user_ids",
                        "in": "query",
                        "description": "'user_ids' field",
                        "required": false,
                        "type": "array",
                        "allowEmptyValue": true,
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "default": ""
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "'per_page' field",
                        "required": false,
                        "type": "number",
                        "allowEmptyValue": true,
                        "default": ""
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "List missing-epicrisis-report-rows",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/MissingEpicrisisReportRowResponse"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "schema": {
                            "properties": {
                                "message": {
                                    "description": "List missing-epicrisis-report-rows",
                                    "type": "string",
                                    "example": "Please make sure that request parameters is correct"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/mounts": {
            "get": {
                "tags": [
                    "mounts"
                ],
                "summary": "List mounts",
                "description": "Returns a list of mounts based on the given filters",
                "operationId": "getMounts",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "description": "Including 'patient', 'signer', 'mount_items'.",
                        "required": false,
                        "type": "array",
                        "allowEmptyValue": true,
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "default": ""
                    },
                    {
                        "name": "sort_by",
                        "in": "query",
                        "description": "'sort_by' field",
                        "required": false,
                        "type": "string",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "'per_page' field",
                        "required": false,
                        "type": "number",
                        "allowEmptyValue": true,
                        "default": ""
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "List mounts",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/MountResponse"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "schema": {
                            "properties": {
                                "message": {
                                    "description": "List mounts",
                                    "type": "string",
                                    "example": "Please make sure that request parameters is correct"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "mounts"
                ],
                "summary": "Create a mount",
                "description": "Returns created mount based on the given filters",
                "operationId": "postMounts",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Body of request (obligatory)",
                        "required": true,
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "Create a mount",
                                    "properties": {
                                        "attributes": {
                                            "description": "Create a mount",
                                            "properties": {
                                                "patient_id": {
                                                    "description": "Create a mount",
                                                    "type": "number",
                                                    "example": 212
                                                },
                                                "name": {
                                                    "description": "Create a mount",
                                                    "type": "string"
                                                },
                                                "mount_template_id": {
                                                    "description": "Create a mount",
                                                    "type": "number"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "Create a mount",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/MountResponse"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "schema": {
                            "properties": {
                                "message": {
                                    "description": "Create a mount",
                                    "type": "string",
                                    "example": "Please make sure that request parameters is correct"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/mounts/{id}": {
            "get": {
                "tags": [
                    "mounts"
                ],
                "summary": "Retrieve a mount",
                "description": "Returns certain mount based on the given filters",
                "operationId": "getMount",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "'id' field",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "description": "Including 'patient', 'signer', 'mount_items'.",
                        "required": false,
                        "type": "array",
                        "allowEmptyValue": true,
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "default": ""
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "Retrieve a mount",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/MountResponse"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "schema": {
                            "properties": {
                                "message": {
                                    "description": "Retrieve a mount",
                                    "type": "string",
                                    "example": "Please make sure that request parameters is correct"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "mounts"
                ],
                "summary": "Edit a mount",
                "description": "Returns edited mount based on the given filters",
                "operationId": "patchMount",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "'id' field",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Body of request (obligatory)",
                        "required": true,
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "Edit a mount",
                                    "properties": {
                                        "attributes": {
                                            "description": "Edit a mount",
                                            "properties": {
                                                "patient_id": {
                                                    "description": "Edit a mount",
                                                    "type": "number",
                                                    "example": 212
                                                },
                                                "name": {
                                                    "description": "Edit a mount",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "Edit a mount",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/MountResponse"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "schema": {
                            "properties": {
                                "message": {
                                    "description": "Edit a mount",
                                    "type": "string",
                                    "example": "Please make sure that request parameters is correct"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/muntra-accepts-review-requests-email-settings": {
            "post": {
                "tags": [
                    "muntra-accepts-review-requests-email-settings"
                ],
                "summary": "Create a muntra-accepts-review-requests-email-setting",
                "description": "Returns created Muntra accepts review requests email settings based on the given filters",
                "operationId": "postMuntraAcceptsReviewRequestsEmailSettings",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Body of request (obligatory)",
                        "required": true,
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "Create a muntra-accepts-review-requests-email-setting",
                                    "properties": {
                                        "attributes": {
                                            "description": "Create a muntra-accepts-review-requests-email-setting",
                                            "properties": {
                                                "external_id": {
                                                    "description": "Create a muntra-accepts-review-requests-email-setting",
                                                    "type": "string",
                                                    "example": "RR2GEVn08i21zRslMuvz6KmM9K16cg60ot"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "Create a muntra-accepts-review-requests-email-setting",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/MuntraAcceptsReviewRequestsEmailSettingsResponse"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "schema": {
                            "properties": {
                                "message": {
                                    "description": "Create a muntra-accepts-review-requests-email-setting",
                                    "type": "string",
                                    "example": "Please make sure that request parameters is correct"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/muntra-booking-attendees": {
            "get": {
                "tags": [
                    "muntra-booking-attendees"
                ],
                "summary": "List muntra-booking-attendees",
                "description": "Returns a list of Muntra booking attendees based on the given filters",
                "operationId": "getMuntraBookingAttendees",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "include",
                        "in": "query",
                        "description": "Including 'booking', 'patient', 'user', 'sms_reminders'.",
                        "required": false,
                        "type": "array",
                        "allowEmptyValue": true,
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "default": ""
                    },
                    {
                        "name": "only_users",
                        "in": "query",
                        "description": "'only_users' field",
                        "required": false,
                        "type": "boolean",
                        "allowEmptyValue": true,
                        "default": ""
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "List muntra-booking-attendees",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/MuntraBookingAttendeesResponse"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "schema": {
                            "properties": {
                                "message": {
                                    "description": "List muntra-booking-attendees",
                                    "type": "string",
                                    "example": "Please make sure that request parameters is correct"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "muntra-booking-attendees"
                ],
                "summary": "Create a muntra-booking-attendee",
                "description": "Returns created Muntra booking attendee based on the given filters",
                "operationId": "postMuntraBookingAttendee",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Body of request (The user id field is required when patient id is null.)",
                        "required": true,
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "Create a muntra-booking-attendee",
                                    "properties": {
                                        "attributes": {
                                            "description": "Create a muntra-booking-attendee",
                                            "properties": {
                                                "booking_id": {
                                                    "description": "Create a muntra-booking-attendee",
                                                    "type": "string",
                                                    "example": "1"
                                                },
                                                "patient_id": {
                                                    "description": "Create a muntra-booking-attendee",
                                                    "type": "integer",
                                                    "example": 2
                                                },
                                                "user_id": {
                                                    "description": "Create a muntra-booking-attendee",
                                                    "type": "integer",
                                                    "example": 3
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    {
                        "name": "partstat",
                        "in": "query",
                        "description": "'partstat' field",
                        "required": false,
                        "type": "string",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "rsvp",
                        "in": "query",
                        "description": "'rsvp' field",
                        "required": false,
                        "type": "boolean",
                        "allowEmptyValue": true,
                        "default": ""
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "Create a muntra-booking-attendee",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/MuntraBookingAttendeesResponse"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "schema": {
                            "properties": {
                                "message": {
                                    "description": "Create a muntra-booking-attendee",
                                    "type": "string",
                                    "example": "Please make sure that request parameters is correct"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/muntra-booking-attendees/confirm": {
            "post": {
                "tags": [
                    "muntra-booking-attendees"
                ],
                "summary": "Confirm a muntra-booking-attendee",
                "description": "Returns confirmed Muntra booking attendee based on the given filters",
                "operationId": "postMuntraBookingAttendeeConfirm",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Body of request (obligatory)",
                        "required": true,
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "Confirm a muntra-booking-attendee",
                                    "properties": {
                                        "attributes": {
                                            "description": "Confirm a muntra-booking-attendee",
                                            "properties": {
                                                "external_id": {
                                                    "description": "Confirm a muntra-booking-attendee",
                                                    "type": "string",
                                                    "example": "123"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "Confirm a muntra-booking-attendee",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/MuntraBookingAttendeesResponse"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "schema": {
                            "properties": {
                                "message": {
                                    "description": "Confirm a muntra-booking-attendee",
                                    "type": "string",
                                    "example": "Please make sure that request parameters is correct"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/muntra-booking-attendees/{id}": {
            "get": {
                "tags": [
                    "muntra-booking-attendees"
                ],
                "summary": "Retrieve a muntra-booking-attendee",
                "description": "Returns certain Muntra booking attendee based on the given filters",
                "operationId": "getMuntraBookingAttendee",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "'id' of price",
                        "required": true,
                        "type": "number"
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "description": "Including 'booking', 'patient', 'user', 'sms_reminders'.",
                        "required": false,
                        "type": "array",
                        "allowEmptyValue": true,
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "default": ""
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "Retrieve a muntra-booking-attendee",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/MuntraBookingAttendeesResponse"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "schema": {
                            "properties": {
                                "message": {
                                    "description": "Retrieve a muntra-booking-attendee",
                                    "type": "string",
                                    "example": "Please make sure that request parameters is correct"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/muntra-booking-attendees/{id}/reschedule": {
            "post": {
                "tags": [
                    "muntra-booking-attendees"
                ],
                "summary": "Reschedule muntra-booking-attendee",
                "description": "Returns rescheduled Muntra booking attendee based on the given filters",
                "operationId": "postMuntraBookingAttendeeReschedule",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "'id' field",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "new_dtstart",
                        "in": "formData",
                        "description": "Format example: '2024-09-01T23:25:31+02:00'",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "Reschedule muntra-booking-attendee",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/MuntraBookingAttendeesResponse"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "schema": {
                            "properties": {
                                "message": {
                                    "description": "Reschedule muntra-booking-attendee",
                                    "type": "string",
                                    "example": "Please make sure that request parameters is correct"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/muntra-bookings": {
            "get": {
                "tags": [
                    "muntra-bookings"
                ],
                "summary": "List muntra-bookings",
                "description": "Returns a list of bookings based on the given filters",
                "operationId": "getMuntraBookings",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "description": "'booking_attendees', 'caregiver', 'room', 'booking_policy', 'clinic', can be added.",
                        "required": false,
                        "type": "string",
                        "default": ""
                    },
                    {
                        "name": "from_date",
                        "in": "query",
                        "description": "Period filter of bookings.",
                        "required": false,
                        "type": "string",
                        "format": "date",
                        "default": ""
                    },
                    {
                        "name": "to_date",
                        "in": "query",
                        "description": "Period filter of bookings.",
                        "required": false,
                        "type": "string",
                        "format": "date",
                        "default": ""
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "Filter by booking status.",
                        "required": false,
                        "type": "string",
                        "default": ""
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "List muntra-bookings",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/MuntraBookings"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "schema": {
                            "properties": {
                                "message": {
                                    "description": "List muntra-bookings",
                                    "type": "string",
                                    "example": "Please make sure that request parameters is correct"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "muntra-bookings"
                ],
                "summary": "Create a muntra-booking",
                "description": "Create a booking",
                "operationId": "postMuntraBookings",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "clinic_id",
                        "in": "formData",
                        "description": "Clinic id field",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "organizer_id",
                        "in": "formData",
                        "description": "Organizer id field",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "summary",
                        "in": "formData",
                        "description": "Summary field",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "dtstart",
                        "in": "formData",
                        "description": "Date time start field",
                        "required": true,
                        "type": "string",
                        "format": "date"
                    },
                    {
                        "name": "dtend",
                        "in": "formData",
                        "description": "Date time end field",
                        "required": true,
                        "type": "string",
                        "format": "date"
                    },
                    {
                        "name": "description",
                        "in": "formData",
                        "description": "Description field",
                        "required": true,
                        "type": "string",
                        "format": "date"
                    },
                    {
                        "name": "procedure_id",
                        "in": "formData",
                        "description": "Procedure id field",
                        "required": false,
                        "type": "integer",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "class",
                        "in": "formData",
                        "description": "Class field",
                        "required": false,
                        "type": "string",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "text",
                        "in": "formData",
                        "description": "Text field",
                        "required": false,
                        "type": "string",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "location",
                        "in": "formData",
                        "description": "Location field",
                        "required": false,
                        "type": "string",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "transparent",
                        "in": "formData",
                        "description": "Transparent field",
                        "required": false,
                        "type": "boolean",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "status",
                        "in": "formData",
                        "description": "Status field",
                        "required": false,
                        "type": "string",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "new_patient",
                        "in": "formData",
                        "description": "New patient field",
                        "required": false,
                        "type": "boolean",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "referral_source",
                        "in": "formData",
                        "description": "Referral source field",
                        "required": false,
                        "type": "string",
                        "allowEmptyValue": true,
                        "default": ""
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "Create a muntra-booking",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/MuntraBookings"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "schema": {
                            "properties": {
                                "message": {
                                    "description": "Create a muntra-booking",
                                    "type": "string",
                                    "example": "Please make sure that request parameters is correct"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/muntra-bookings/{id}": {
            "get": {
                "tags": [
                    "muntra-bookings"
                ],
                "summary": "Retrieve a muntra-booking",
                "description": "Retrieves a specific booking",
                "operationId": "getMuntraBooking",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Booking id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "type": "integer",
                        "default": ""
                    },
                    {
                        "name": "muntra_booking_id",
                        "in": "query",
                        "description": "Muntra booking id",
                        "required": true,
                        "type": "integer",
                        "default": ""
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "description": "'booking_attendees', 'caregiver', 'room', 'booking_policy', 'clinic', can be added.",
                        "required": false,
                        "type": "string",
                        "default": ""
                    },
                    {
                        "name": "from_date",
                        "in": "query",
                        "description": "Period filter of bookings.",
                        "required": false,
                        "type": "string",
                        "format": "date",
                        "default": ""
                    },
                    {
                        "name": "to_date",
                        "in": "query",
                        "description": "Period filter of bookings.",
                        "required": false,
                        "type": "string",
                        "format": "date",
                        "default": ""
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "Filter by booking status.",
                        "required": false,
                        "type": "string",
                        "default": ""
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "Retrieve a muntra-booking",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/MuntraBookings"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "schema": {
                            "properties": {
                                "message": {
                                    "description": "Retrieve a muntra-booking",
                                    "type": "string",
                                    "example": "Muntra Booking with Id BK1NxwX not found."
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/muntra-caregiver-at-locations": {
            "get": {
                "tags": [
                    "muntra-caregiver-at-locations"
                ],
                "summary": "List muntra-caregiver-at-locations",
                "description": "Returns a list of caregiver-location combinations based on the given filters",
                "operationId": "getCaregiverAtLocations",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "include",
                        "in": "query",
                        "description": "List of additional includes in response, e.g. clinic,caregiver,free_bookable_slots,procedures,default_procedure,next_free_bookable_slot",
                        "required": false,
                        "type": "array",
                        "allowEmptyValue": true,
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "default": ""
                    },
                    {
                        "name": "active",
                        "in": "query",
                        "description": "Query for active caregivers",
                        "required": false,
                        "type": "boolean",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "role_ids",
                        "in": "query",
                        "description": "List of role ids for filtering",
                        "required": false,
                        "type": "array",
                        "allowEmptyValue": true,
                        "items": {
                            "type": "integer"
                        },
                        "collectionFormat": "csv",
                        "default": ""
                    },
                    {
                        "name": "procedure_ids",
                        "in": "query",
                        "description": "List of procedures for filtering caregiver_at_locations records",
                        "required": false,
                        "type": "array",
                        "allowEmptyValue": true,
                        "items": {
                            "type": "integer"
                        },
                        "collectionFormat": "csv",
                        "default": ""
                    },
                    {
                        "name": "new_patient",
                        "in": "query",
                        "description": "Parameter for new patient procedure duration.",
                        "required": false,
                        "type": "boolean",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "include_caregiver_locations_without_procedure_id_matches",
                        "in": "query",
                        "description": "Include caregiver_locations relations without requested procedures",
                        "required": false,
                        "type": "boolean",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "dtstart",
                        "in": "query",
                        "description": "Current datetime with ISO format for defining free bookable slots",
                        "required": false,
                        "type": "string",
                        "format": "date-time",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "dtend",
                        "in": "query",
                        "description": "End of a day (current + 3 days) with ISO format for defining free bookable slots",
                        "required": false,
                        "type": "string",
                        "format": "date-time",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "lat",
                        "in": "query",
                        "description": "Latitude of requested location for sorting results with the distance",
                        "required": false,
                        "type": "number",
                        "format": "float",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "lng",
                        "in": "query",
                        "description": "Longitude of requested location for sorting results with the distance",
                        "required": false,
                        "type": "number",
                        "format": "float",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "radius",
                        "in": "query",
                        "description": "Radius in kilometers for result limitation with the distance",
                        "required": false,
                        "type": "number",
                        "format": "float",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "viewport_northeast_lat",
                        "in": "query",
                        "description": "Viewport geo limits",
                        "required": false,
                        "type": "number",
                        "format": "float",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "viewport_northeast_lng",
                        "in": "query",
                        "description": "Viewport geo limits",
                        "required": false,
                        "type": "number",
                        "format": "float",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "viewport_southwest_lat",
                        "in": "query",
                        "description": "Viewport geo limits",
                        "required": false,
                        "type": "number",
                        "format": "float",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "viewport_southwest_lng",
                        "in": "query",
                        "description": "Viewport geo limits",
                        "required": false,
                        "type": "number",
                        "format": "float",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "clinic_id",
                        "in": "query",
                        "description": "Clinic ID of clinic at locations records",
                        "required": false,
                        "type": "integer",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "caregiver_id",
                        "in": "query",
                        "description": "Caregiver ID of clinic at locations records",
                        "required": false,
                        "type": "integer",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Number of records in response, default is 10",
                        "required": false,
                        "type": "integer",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Number of offset page",
                        "required": false,
                        "type": "integer",
                        "allowEmptyValue": true,
                        "default": "15"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "List muntra-caregiver-at-locations",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/MuntraCaregiverAtLocationResponse"
                                    }
                                },
                                "included": {
                                    "description": "List muntra-caregiver-at-locations",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/MuntraClinicResponse"
                                    }
                                },
                                "meta": {
                                    "description": "List muntra-caregiver-at-locations",
                                    "properties": {
                                        "pagination": {
                                            "description": "List muntra-caregiver-at-locations",
                                            "properties": {
                                                "total": {
                                                    "description": "List muntra-caregiver-at-locations",
                                                    "type": "number",
                                                    "example": "2"
                                                },
                                                "count": {
                                                    "description": "List muntra-caregiver-at-locations",
                                                    "type": "number",
                                                    "example": "2"
                                                },
                                                "per_page": {
                                                    "description": "List muntra-caregiver-at-locations",
                                                    "type": "number",
                                                    "example": "2"
                                                },
                                                "current_page": {
                                                    "description": "List muntra-caregiver-at-locations",
                                                    "type": "number",
                                                    "example": "1"
                                                },
                                                "total_pages": {
                                                    "description": "List muntra-caregiver-at-locations",
                                                    "type": "number",
                                                    "example": "1"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "schema": {
                            "properties": {
                                "message": {
                                    "description": "List muntra-caregiver-at-locations",
                                    "type": "string",
                                    "example": "Please make request with all required query parameters"
                                },
                                "errors": {
                                    "description": "List muntra-caregiver-at-locations",
                                    "properties": {
                                        "dtstart": {
                                            "description": "List muntra-caregiver-at-locations",
                                            "type": "array",
                                            "items": {
                                                "type": "string",
                                                "example": "The dtstart is not a valid date."
                                            }
                                        },
                                        "dtend": {
                                            "description": "List muntra-caregiver-at-locations",
                                            "type": "array",
                                            "items": {
                                                "type": "string",
                                                "example": "The dtend field is required when dtstart is present."
                                            }
                                        },
                                        "lng": {
                                            "description": "List muntra-caregiver-at-locations",
                                            "type": "array",
                                            "items": {
                                                "type": "string",
                                                "example": "The lng field is required when lat is present."
                                            }
                                        },
                                        "lat": {
                                            "description": "List muntra-caregiver-at-locations",
                                            "type": "array",
                                            "items": {
                                                "type": "string",
                                                "example": "The lat field is required when lng is present."
                                            }
                                        },
                                        "viewport_northeast_lat": {
                                            "description": "List muntra-caregiver-at-locations",
                                            "type": "array",
                                            "items": {
                                                "type": "string",
                                                "example": "The viewport_northeast_lat field is required when viewport_northeast_lng,viewport_southwest_lat,viewport_southwest_lng is present."
                                            }
                                        },
                                        "viewport_northeast_lng": {
                                            "description": "List muntra-caregiver-at-locations",
                                            "type": "array",
                                            "items": {
                                                "type": "string",
                                                "example": "The viewport_northeast_lng field is required when viewport_northeast_lat,viewport_southwest_lat,viewport_southwest_lng is present."
                                            }
                                        },
                                        "viewport_southwest_lat": {
                                            "description": "List muntra-caregiver-at-locations",
                                            "type": "array",
                                            "items": {
                                                "type": "string",
                                                "example": "The viewport_northeast_lng field is required when viewport_northeast_lng,viewport_northeast_lat,viewport_southwest_lng is present."
                                            }
                                        },
                                        "viewport_southwest_lng": {
                                            "description": "List muntra-caregiver-at-locations",
                                            "type": "array",
                                            "items": {
                                                "type": "string",
                                                "example": "The viewport_northeast_lng field is required when viewport_northeast_lng,viewport_northeast_lat,viewport_southwest_lat is present."
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/muntra-caregiver-procedure-at-locations": {
            "get": {
                "tags": [
                    "muntra-caregiver-procedure-at-locations"
                ],
                "summary": "List muntra-caregiver-procedure-at-locations",
                "description": "Returns a list of caregiver, location and procedure combinations based on the given filters",
                "operationId": "getCaregiverProcedureAtLocations",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "include",
                        "in": "query",
                        "description": "List of additional includes in response, e.g. clinic,caregiver,free_bookable_slots,procedures,default_procedure,next_free_bookable_slot",
                        "required": false,
                        "type": "array",
                        "allowEmptyValue": true,
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "default": ""
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Count of entities per page",
                        "required": false,
                        "type": "number",
                        "allowEmptyValue": true,
                        "default": ""
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "List muntra-caregiver-procedure-at-locations",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/MuntraCaregiverResponse"
                                    }
                                },
                                "included": {
                                    "description": "List muntra-caregiver-procedure-at-locations",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/MuntraClinicResponse"
                                    }
                                },
                                "meta": {
                                    "description": "List muntra-caregiver-procedure-at-locations",
                                    "properties": {
                                        "pagination": {
                                            "description": "List muntra-caregiver-procedure-at-locations",
                                            "properties": {
                                                "total": {
                                                    "description": "List muntra-caregiver-procedure-at-locations",
                                                    "type": "number",
                                                    "example": "1"
                                                },
                                                "count": {
                                                    "description": "List muntra-caregiver-procedure-at-locations",
                                                    "type": "number",
                                                    "example": "1"
                                                },
                                                "per_page": {
                                                    "description": "List muntra-caregiver-procedure-at-locations",
                                                    "type": "number",
                                                    "example": "1"
                                                },
                                                "current_page": {
                                                    "description": "List muntra-caregiver-procedure-at-locations",
                                                    "type": "number",
                                                    "example": "1"
                                                },
                                                "total_pages": {
                                                    "description": "List muntra-caregiver-procedure-at-locations",
                                                    "type": "number",
                                                    "example": "1"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "schema": {
                            "properties": {
                                "message": {
                                    "description": "List muntra-caregiver-procedure-at-locations",
                                    "type": "string",
                                    "example": "Please make sure that request parameters is correct"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/muntra-caregivers": {
            "get": {
                "tags": [
                    "muntra-caregivers"
                ],
                "summary": "List muntra-caregivers",
                "description": "Returns a list of caregivers based on the given filters",
                "operationId": "getMuntraCaregivers",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "include",
                        "in": "query",
                        "description": "List of additional includes in response, e.g. clinic,caregiver,free_bookable_slots,procedures,default_procedure,next_free_bookable_slot",
                        "required": false,
                        "type": "array",
                        "allowEmptyValue": true,
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "default": ""
                    },
                    {
                        "name": "active",
                        "in": "query",
                        "description": "Query for active caregivers.",
                        "required": false,
                        "type": "boolean",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "roles",
                        "in": "query",
                        "description": "List of roles for filtering.",
                        "required": false,
                        "type": "array",
                        "allowEmptyValue": true,
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "default": ""
                    },
                    {
                        "name": "procedure_ids",
                        "in": "query",
                        "description": "List of procedures for filtering caregiver_at_locations records.",
                        "required": false,
                        "type": "array",
                        "allowEmptyValue": true,
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "default": ""
                    },
                    {
                        "name": "new_patient",
                        "in": "query",
                        "description": "Parameter for new patient procedure duration.",
                        "required": false,
                        "type": "boolean",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "include_caregiver_locations_without_procedure_id_matches",
                        "in": "query",
                        "description": "Include caregiver_locations relations without requested procedures.",
                        "required": false,
                        "type": "boolean",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "dtstart",
                        "in": "query",
                        "description": "Current datetime with format Y-m-d H:i for defining free bookable slots.",
                        "required": false,
                        "type": "string",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "dtend",
                        "in": "query",
                        "description": "End of a day (current + 3 days with format Y-m-d H:i  for defining free bookable slots.)",
                        "required": false,
                        "type": "string",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Number of records in response, default is 10",
                        "required": false,
                        "type": "integer",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Number of offset page",
                        "required": false,
                        "type": "integer",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "sort_by",
                        "in": "query",
                        "description": "Sort by attribute name",
                        "required": false,
                        "type": "string",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "order",
                        "in": "query",
                        "description": "Order of sorting, default is asc",
                        "required": false,
                        "type": "string",
                        "allowEmptyValue": true,
                        "default": ""
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "List muntra-caregivers",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/MuntraCaregiverResponse"
                                    }
                                },
                                "included": {
                                    "description": "List muntra-caregivers",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/MuntraClinicResponse"
                                    }
                                },
                                "meta": {
                                    "description": "List muntra-caregivers",
                                    "properties": {
                                        "pagination": {
                                            "description": "List muntra-caregivers",
                                            "properties": {
                                                "total": {
                                                    "description": "List muntra-caregivers",
                                                    "type": "number",
                                                    "example": "1"
                                                },
                                                "count": {
                                                    "description": "List muntra-caregivers",
                                                    "type": "number",
                                                    "example": "1"
                                                },
                                                "per_page": {
                                                    "description": "List muntra-caregivers",
                                                    "type": "number",
                                                    "example": "1"
                                                },
                                                "current_page": {
                                                    "description": "List muntra-caregivers",
                                                    "type": "number",
                                                    "example": "1"
                                                },
                                                "total_pages": {
                                                    "description": "List muntra-caregivers",
                                                    "type": "number",
                                                    "example": "1"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "schema": {
                            "properties": {
                                "message": {
                                    "description": "List muntra-caregivers",
                                    "type": "string",
                                    "example": "Please make sure that request parameters is correct"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/muntra-caregivers/{id}": {
            "get": {
                "tags": [
                    "muntra-caregivers"
                ],
                "summary": "Retrieve a muntra-caregiver",
                "description": "Retrieves a specific caregiver",
                "operationId": "getMuntraCaregiverById",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Caregiver id",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        },
                        "type": "integer",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "description": "List of additional includes in response, e.g. clinic,caregiver,free_bookable_slots,procedures,default_procedure,next_free_bookable_slot",
                        "required": false,
                        "type": "array",
                        "allowEmptyValue": true,
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "default": ""
                    },
                    {
                        "name": "caregiver_id",
                        "in": "query",
                        "description": "Caregiver Id.",
                        "required": false,
                        "type": "integer",
                        "allowEmptyValue": true,
                        "items": {
                            "type": "string"
                        },
                        "default": ""
                    },
                    {
                        "name": "procedure_ids",
                        "in": "query",
                        "description": "List of procedures for filtering caregiver_at_locations records.",
                        "required": false,
                        "type": "array",
                        "allowEmptyValue": true,
                        "items": {
                            "type": "string"
                        },
                        "default": ""
                    },
                    {
                        "name": "new_patient",
                        "in": "query",
                        "description": "Parameter for new patient procedure duration.",
                        "required": false,
                        "type": "boolean",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "include_caregiver_locations_without_procedure_id_matches",
                        "in": "query",
                        "description": "Include caregiver_locations relations without requested procedures.",
                        "required": false,
                        "type": "boolean",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "dtstart",
                        "in": "query",
                        "description": "Current datetime with format Y-m-d H:i for defining free bookable slots.",
                        "required": false,
                        "type": "string",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "dtend",
                        "in": "query",
                        "description": "End of a day (current + 3 days with format Y-m-d H:i  for defining free bookable slots.)",
                        "required": false,
                        "type": "string",
                        "allowEmptyValue": true,
                        "default": ""
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "Retrieve a muntra-caregiver",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/MuntraCaregiverResponse"
                                    }
                                },
                                "included": {
                                    "description": "Retrieve a muntra-caregiver",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/MuntraClinicResponse"
                                    }
                                },
                                "meta": {
                                    "description": "Retrieve a muntra-caregiver",
                                    "properties": {
                                        "pagination": {
                                            "description": "Retrieve a muntra-caregiver",
                                            "properties": {
                                                "total": {
                                                    "description": "Retrieve a muntra-caregiver",
                                                    "type": "number",
                                                    "example": "1"
                                                },
                                                "count": {
                                                    "description": "Retrieve a muntra-caregiver",
                                                    "type": "number",
                                                    "example": "1"
                                                },
                                                "per_page": {
                                                    "description": "Retrieve a muntra-caregiver",
                                                    "type": "number",
                                                    "example": "1"
                                                },
                                                "current_page": {
                                                    "description": "Retrieve a muntra-caregiver",
                                                    "type": "number",
                                                    "example": "1"
                                                },
                                                "total_pages": {
                                                    "description": "Retrieve a muntra-caregiver",
                                                    "type": "number",
                                                    "example": "1"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "schema": {
                            "properties": {
                                "message": {
                                    "description": "Retrieve a muntra-caregiver",
                                    "type": "string",
                                    "example": "Muntra Caregiver with Id 5 not found."
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/muntra-clinic-ads": {
            "get": {
                "tags": [
                    "muntra-clinic-ads"
                ],
                "summary": "List muntra-clinic-ads",
                "description": "Returns a list of clinics advertised on the start page of Muntra's clinical app",
                "operationId": "getMuntraClinicAds",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "include",
                        "in": "query",
                        "description": "'muntra_clinic_image' can be added",
                        "required": false,
                        "type": "string",
                        "default": ""
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "List muntra-clinic-ads",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/MuntraClinicAdsResponse"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "schema": {
                            "properties": {
                                "message": {
                                    "description": "List muntra-clinic-ads",
                                    "type": "string",
                                    "example": "Please make sure that request parameters is correct"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/muntra-clinics": {
            "get": {
                "tags": [
                    "muntra-clinics"
                ],
                "summary": "List muntra-clinics",
                "description": "Returns a list of clinics based on the given filters",
                "operationId": "getMuntraClinics",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "include",
                        "in": "query",
                        "description": "List of additional includes in response.",
                        "required": false,
                        "type": "array",
                        "allowEmptyValue": true,
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "default": ""
                    },
                    {
                        "name": "include_administrative_roles",
                        "in": "query",
                        "description": "All staff/caregivers only.",
                        "required": false,
                        "type": "boolean",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "procedure_ids",
                        "in": "query",
                        "description": "List of procedures for filtering caregiver_at_locations records.",
                        "required": false,
                        "type": "array",
                        "allowEmptyValue": true,
                        "items": {
                            "type": "string"
                        },
                        "default": ""
                    },
                    {
                        "name": "new_patient",
                        "in": "query",
                        "description": "Parameter for new patient procedure duration.",
                        "required": false,
                        "type": "boolean",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "include_caregiver_locations_without_procedure_id_matches",
                        "in": "query",
                        "description": "Include caregiver_locations relations without requested procedures.",
                        "required": false,
                        "type": "boolean",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "dtstart",
                        "in": "query",
                        "description": "Current datetime with format Y-m-d H:i for defining free bookable slots.",
                        "required": false,
                        "type": "string",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "dtend",
                        "in": "query",
                        "description": "End of a day (current + 3 days with format Y-m-d H:i  for defining free bookable slots.)",
                        "required": false,
                        "type": "string",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "sort_by",
                        "in": "query",
                        "description": "Attribute name for sorting.",
                        "required": false,
                        "type": "string",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "order",
                        "in": "query",
                        "description": "Order direction, default is asc.",
                        "required": false,
                        "type": "string",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Number of records in response, default is 10",
                        "required": false,
                        "type": "integer",
                        "allowEmptyValue": true,
                        "default": "",
                        "maximum": 20,
                        "minimum": 1
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Number of offset page",
                        "required": false,
                        "type": "integer",
                        "allowEmptyValue": true,
                        "default": ""
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "List muntra-clinics",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/MuntraClinicResponse"
                                    }
                                },
                                "included": {
                                    "description": "List muntra-clinics",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/MuntraClinicResponse"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/muntra-clinics/{id}": {
            "get": {
                "tags": [
                    "muntra-clinics"
                ],
                "summary": "Retrieve a muntra-clinic",
                "description": "Returns a specific clinic",
                "operationId": "getMuntraClinicsById",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Caregiver id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "type": "integer",
                        "default": ""
                    },
                    {
                        "name": "include_administrative_roles",
                        "in": "query",
                        "description": "All staff/caregivers only.",
                        "required": false,
                        "type": "boolean",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "procedure_ids",
                        "in": "query",
                        "description": "List of procedures for filtering caregiver_at_locations records.",
                        "required": false,
                        "type": "array",
                        "allowEmptyValue": true,
                        "items": {
                            "type": "string"
                        },
                        "default": ""
                    },
                    {
                        "name": "new_patient",
                        "in": "query",
                        "description": "Parameter for new patient procedure duration.",
                        "required": false,
                        "type": "boolean",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "include_caregiver_locations_without_procedure_id_matches",
                        "in": "query",
                        "description": "Include caregiver_locations relations without requested procedures.",
                        "required": false,
                        "type": "boolean",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "dtstart",
                        "in": "query",
                        "description": "Current datetime with format Y-m-d H:i for defining free bookable slots.",
                        "required": false,
                        "type": "string",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "dtend",
                        "in": "query",
                        "description": "End of a day (current + 3 days with format Y-m-d H:i  for defining free bookable slots.)",
                        "required": false,
                        "type": "string",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "sort_by",
                        "in": "query",
                        "description": "Attribute name for sorting.",
                        "required": false,
                        "type": "string",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "order",
                        "in": "query",
                        "description": "Order direction, default is asc.",
                        "required": false,
                        "type": "string",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Number of records in response, default is 10",
                        "required": false,
                        "type": "integer",
                        "allowEmptyValue": true,
                        "default": ""
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "Retrieve a muntra-clinic",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/MuntraClinicResponse"
                                    }
                                },
                                "included": {
                                    "description": "Retrieve a muntra-clinic",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/MuntraClinicResponse"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "schema": {
                            "properties": {
                                "message": {
                                    "description": "Retrieve a muntra-clinic",
                                    "type": "string",
                                    "example": "Please make sure that request parameters is correct"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/muntra-declarations": {
            "post": {
                "tags": [
                    "muntra-declarations"
                ],
                "summary": "Create a muntra-declaration",
                "description": "Returns created Muntra declaration based on the given filters",
                "operationId": "postMuntraDeclaration",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Body of request (obligatory)",
                        "required": true,
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "Create a muntra-declaration",
                                    "properties": {
                                        "attributes": {
                                            "description": "Create a muntra-declaration",
                                            "properties": {
                                                "booking_attendee_external_binding_id": {
                                                    "description": "Create a muntra-declaration",
                                                    "type": "number",
                                                    "example": "1"
                                                },
                                                "external_id": {
                                                    "description": "Create a muntra-declaration",
                                                    "type": "number",
                                                    "example": "1"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    {
                        "name": "asthma",
                        "in": "query",
                        "description": "Asthma field",
                        "required": false,
                        "type": "string",
                        "allowEmptyValue": true,
                        "default": ""
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "Create a muntra-declaration",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/DeclarationsMuntraResponse"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "schema": {
                            "properties": {
                                "message": {
                                    "description": "Create a muntra-declaration",
                                    "type": "string",
                                    "example": "Please make sure that request parameters is correct"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/muntra-google-place-autocompletes": {
            "get": {
                "tags": [
                    "muntra-google-place-autocompletes"
                ],
                "summary": "List muntra-google-place-autocompletes",
                "description": "Returns a list of Google place autocomplete based on the given filters",
                "operationId": "getGooglePlaceAutocomplete",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "components",
                        "in": "query",
                        "description": "'components' field (example: 'components: country:se')",
                        "required": true,
                        "type": "string",
                        "default": ""
                    },
                    {
                        "name": "input",
                        "in": "query",
                        "description": "Input field",
                        "required": true,
                        "type": "string",
                        "default": ""
                    },
                    {
                        "name": "sensor",
                        "in": "query",
                        "description": "'sensor' field",
                        "required": true,
                        "type": "boolean",
                        "default": ""
                    },
                    {
                        "name": "language",
                        "in": "query",
                        "description": "Language field (example: 'language:sv')",
                        "required": false,
                        "type": "string",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "types",
                        "in": "query",
                        "description": "Types field (example: 'types:(regions)')",
                        "required": false,
                        "type": "string",
                        "allowEmptyValue": true,
                        "default": ""
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "List muntra-google-place-autocompletes",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/GooglePlaceAutocompleteResponse"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "schema": {
                            "properties": {
                                "message": {
                                    "description": "List muntra-google-place-autocompletes",
                                    "type": "string",
                                    "example": "Please make sure that request parameters is correct"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/muntra-google-place-detail-requests": {
            "get": {
                "tags": [
                    "muntra-google-place-detail-requests"
                ],
                "summary": "List muntra-google-place-detail-requests",
                "description": "Returns a list of Google place detail requests based on the given filters",
                "operationId": "getGooglePlaceDetailRequests",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "place_id",
                        "in": "query",
                        "description": "'place_id' field",
                        "required": true,
                        "type": "string",
                        "default": ""
                    },
                    {
                        "name": "sensor",
                        "in": "query",
                        "description": "This field is not required if 'reference' provided.",
                        "required": false,
                        "type": "string",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "reference",
                        "in": "query",
                        "description": "This field is not required if 'place_id' provided.",
                        "required": false,
                        "type": "string",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "language",
                        "in": "query",
                        "description": "Language field (example: 'language:sv')",
                        "required": false,
                        "type": "string",
                        "allowEmptyValue": true,
                        "default": ""
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "List muntra-google-place-detail-requests",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/GooglePlaceDetailRequest"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "schema": {
                            "properties": {
                                "message": {
                                    "description": "List muntra-google-place-detail-requests",
                                    "type": "string",
                                    "example": "Please make sure that request parameters is correct"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/muntra-google-place-details": {
            "get": {
                "tags": [
                    "muntra-google-place-details"
                ],
                "summary": "List muntra-google-place-details",
                "description": "Returns a list of Google place details based on the given filters",
                "operationId": "getGooglePlaceDetails",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "query",
                        "in": "query",
                        "description": "'query' field",
                        "required": false,
                        "type": "string",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "sort_by",
                        "in": "query",
                        "description": "'sort_by' field",
                        "required": false,
                        "type": "string",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "order",
                        "in": "query",
                        "description": "'order' field",
                        "required": false,
                        "type": "string",
                        "allowEmptyValue": true,
                        "default": ""
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "List muntra-google-place-details",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/GooglePlaceDetailResponse"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "schema": {
                            "properties": {
                                "message": {
                                    "description": "List muntra-google-place-details",
                                    "type": "string",
                                    "example": "Please make sure that request parameters is correct"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/muntra-google-place-details/{id}": {
            "get": {
                "tags": [
                    "muntra-google-place-details"
                ],
                "summary": "Retrieve a muntra-google-place-detail",
                "description": "Returns a certain Google place details based on the given filters",
                "operationId": "getGooglePlaceDetail",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "'id' field (example: '/api/muntra-google-place-details/ChIJbwV2YQbwWEYRVX7GsjrK-GM')",
                        "required": true,
                        "type": "number",
                        "default": ""
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "description": "List of additional included. Available: 'parent_place', 'child_places'.",
                        "required": false,
                        "type": "string",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "detail_id",
                        "in": "query",
                        "description": "Google Place Details Id.",
                        "required": false,
                        "type": "integer",
                        "allowEmptyValue": true,
                        "default": ""
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "Retrieve a muntra-google-place-detail",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/GooglePlaceDetailResponse"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "schema": {
                            "properties": {
                                "message": {
                                    "description": "Retrieve a muntra-google-place-detail",
                                    "type": "string",
                                    "example": "Please make sure that request parameters is correct"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/muntra-patient-clinic-curations": {
            "post": {
                "tags": [
                    "muntra-patient-clinic-curations"
                ],
                "summary": "Create a muntra-patient-clinic-curation",
                "description": "Returns created Muntra patient clinic curation based on the given filters",
                "operationId": "postMuntraPatientClinicCuration",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Body of request (obligatory)",
                        "required": true,
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "Create a muntra-patient-clinic-curation",
                                    "properties": {
                                        "attributes": {
                                            "description": "Create a muntra-patient-clinic-curation",
                                            "properties": {
                                                "external_id": {
                                                    "description": "Create a muntra-patient-clinic-curation",
                                                    "type": "string",
                                                    "example": "RRH2HHSb9aVcHZY20XQ17tE39QOOM12HbC"
                                                },
                                                "accepts_children": {
                                                    "description": "Create a muntra-patient-clinic-curation",
                                                    "required": [
                                                        "false"
                                                    ],
                                                    "type": "boolean",
                                                    "example": true
                                                },
                                                "accessible_via_elevator": {
                                                    "description": "Create a muntra-patient-clinic-curation",
                                                    "required": [
                                                        "false"
                                                    ],
                                                    "type": "boolean",
                                                    "example": false
                                                },
                                                "accessible_via_stairs": {
                                                    "description": "Create a muntra-patient-clinic-curation",
                                                    "required": [
                                                        "false"
                                                    ],
                                                    "type": "boolean",
                                                    "example": true
                                                },
                                                "capable_of_handling_fear_of_medical_procedures": {
                                                    "description": "Create a muntra-patient-clinic-curation",
                                                    "required": [
                                                        "false"
                                                    ],
                                                    "type": "boolean",
                                                    "example": true
                                                },
                                                "handicap_accessible": {
                                                    "description": "Create a muntra-patient-clinic-curation",
                                                    "required": [
                                                        "false"
                                                    ],
                                                    "type": "boolean",
                                                    "example": false
                                                },
                                                "has_drinks": {
                                                    "description": "Create a muntra-patient-clinic-curation",
                                                    "required": [
                                                        "false"
                                                    ],
                                                    "type": "boolean",
                                                    "example": true
                                                },
                                                "has_free_parking_directly_outside_of_clinic": {
                                                    "description": "Create a muntra-patient-clinic-curation",
                                                    "required": [
                                                        "false"
                                                    ],
                                                    "type": "boolean",
                                                    "example": false
                                                },
                                                "has_free_parking_near_the_clinic": {
                                                    "description": "Create a muntra-patient-clinic-curation",
                                                    "required": [
                                                        "false"
                                                    ],
                                                    "type": "boolean",
                                                    "example": false
                                                },
                                                "has_magazines": {
                                                    "description": "Create a muntra-patient-clinic-curation",
                                                    "required": [
                                                        "false"
                                                    ],
                                                    "type": "boolean",
                                                    "example": true
                                                },
                                                "has_music": {
                                                    "description": "Create a muntra-patient-clinic-curation",
                                                    "required": [
                                                        "false"
                                                    ],
                                                    "type": "boolean",
                                                    "example": true
                                                },
                                                "phas_paid_parking_directly_outside_of_clinic": {
                                                    "description": "Create a muntra-patient-clinic-curation",
                                                    "required": [
                                                        "false"
                                                    ],
                                                    "type": "boolean",
                                                    "example": true
                                                },
                                                "has_paid_parking_near_the_clinic": {
                                                    "description": "Create a muntra-patient-clinic-curation",
                                                    "required": [
                                                        "false"
                                                    ],
                                                    "type": "boolean",
                                                    "example": false
                                                },
                                                "has_restroom": {
                                                    "description": "Create a muntra-patient-clinic-curation",
                                                    "required": [
                                                        "false"
                                                    ],
                                                    "type": "boolean",
                                                    "example": false
                                                },
                                                "has_toys": {
                                                    "description": "Create a muntra-patient-clinic-curation",
                                                    "required": [
                                                        "false"
                                                    ],
                                                    "type": "boolean",
                                                    "example": false
                                                },
                                                "has_tv": {
                                                    "description": "Create a muntra-patient-clinic-curation",
                                                    "required": [
                                                        "false"
                                                    ],
                                                    "type": "boolean",
                                                    "example": false
                                                },
                                                "has_waiting_room": {
                                                    "description": "Create a muntra-patient-clinic-curation",
                                                    "required": [
                                                        "false"
                                                    ],
                                                    "type": "boolean",
                                                    "example": false
                                                },
                                                "has_wifi": {
                                                    "description": "Create a muntra-patient-clinic-curation",
                                                    "required": [
                                                        "false"
                                                    ],
                                                    "type": "boolean",
                                                    "example": false
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "Create a muntra-patient-clinic-curation",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/PatientClinicCurationResponse"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "schema": {
                            "properties": {
                                "message": {
                                    "description": "Create a muntra-patient-clinic-curation",
                                    "type": "string",
                                    "example": "Please make sure that request parameters is correct"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/muntra-patient-clinic-curations/{id}": {
            "patch": {
                "tags": [
                    "muntra-patient-clinic-curations"
                ],
                "summary": "Edit a muntra-patient-clinic-curation",
                "description": "Returns edited Muntra patient clinic curation based on the given filters",
                "operationId": "patchMuntraPatientClinicCuration",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "'id' of Muntra patient clinic curation",
                        "required": true,
                        "type": "number"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Body of request (obligatory)",
                        "required": true,
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "Edit a muntra-patient-clinic-curation",
                                    "properties": {
                                        "attributes": {
                                            "description": "Edit a muntra-patient-clinic-curation",
                                            "properties": {
                                                "external_id": {
                                                    "description": "Edit a muntra-patient-clinic-curation",
                                                    "type": "string",
                                                    "example": "RR2GEVn08i21zRslMuvz6KmM9K16cg60ot"
                                                },
                                                "accepts_children": {
                                                    "description": "Edit a muntra-patient-clinic-curation",
                                                    "required": [
                                                        "false"
                                                    ],
                                                    "type": "boolean",
                                                    "example": true
                                                },
                                                "accessible_via_elevator": {
                                                    "description": "Edit a muntra-patient-clinic-curation",
                                                    "required": [
                                                        "false"
                                                    ],
                                                    "type": "boolean",
                                                    "example": false
                                                },
                                                "accessible_via_stairs": {
                                                    "description": "Edit a muntra-patient-clinic-curation",
                                                    "required": [
                                                        "false"
                                                    ],
                                                    "type": "boolean",
                                                    "example": true
                                                },
                                                "capable_of_handling_fear_of_medical_procedures": {
                                                    "description": "Edit a muntra-patient-clinic-curation",
                                                    "required": [
                                                        "false"
                                                    ],
                                                    "type": "boolean",
                                                    "example": true
                                                },
                                                "handicap_accessible": {
                                                    "description": "Edit a muntra-patient-clinic-curation",
                                                    "required": [
                                                        "false"
                                                    ],
                                                    "type": "boolean",
                                                    "example": false
                                                },
                                                "has_drinks": {
                                                    "description": "Edit a muntra-patient-clinic-curation",
                                                    "required": [
                                                        "false"
                                                    ],
                                                    "type": "boolean",
                                                    "example": true
                                                },
                                                "has_free_parking_directly_outside_of_clinic": {
                                                    "description": "Edit a muntra-patient-clinic-curation",
                                                    "required": [
                                                        "false"
                                                    ],
                                                    "type": "boolean",
                                                    "example": false
                                                },
                                                "has_free_parking_near_the_clinic": {
                                                    "description": "Edit a muntra-patient-clinic-curation",
                                                    "required": [
                                                        "false"
                                                    ],
                                                    "type": "boolean",
                                                    "example": false
                                                },
                                                "has_magazines": {
                                                    "description": "Edit a muntra-patient-clinic-curation",
                                                    "required": [
                                                        "false"
                                                    ],
                                                    "type": "boolean",
                                                    "example": true
                                                },
                                                "has_music": {
                                                    "description": "Edit a muntra-patient-clinic-curation",
                                                    "required": [
                                                        "false"
                                                    ],
                                                    "type": "boolean",
                                                    "example": true
                                                },
                                                "phas_paid_parking_directly_outside_of_clinic": {
                                                    "description": "Edit a muntra-patient-clinic-curation",
                                                    "required": [
                                                        "false"
                                                    ],
                                                    "type": "boolean",
                                                    "example": true
                                                },
                                                "has_paid_parking_near_the_clinic": {
                                                    "description": "Edit a muntra-patient-clinic-curation",
                                                    "required": [
                                                        "false"
                                                    ],
                                                    "type": "boolean",
                                                    "example": false
                                                },
                                                "has_restroom": {
                                                    "description": "Edit a muntra-patient-clinic-curation",
                                                    "required": [
                                                        "false"
                                                    ],
                                                    "type": "boolean",
                                                    "example": false
                                                },
                                                "has_toys": {
                                                    "description": "Edit a muntra-patient-clinic-curation",
                                                    "required": [
                                                        "false"
                                                    ],
                                                    "type": "boolean",
                                                    "example": false
                                                },
                                                "has_tv": {
                                                    "description": "Edit a muntra-patient-clinic-curation",
                                                    "required": [
                                                        "false"
                                                    ],
                                                    "type": "boolean",
                                                    "example": false
                                                },
                                                "has_waiting_room": {
                                                    "description": "Edit a muntra-patient-clinic-curation",
                                                    "required": [
                                                        "false"
                                                    ],
                                                    "type": "boolean",
                                                    "example": false
                                                },
                                                "has_wifi": {
                                                    "description": "Edit a muntra-patient-clinic-curation",
                                                    "required": [
                                                        "false"
                                                    ],
                                                    "type": "boolean",
                                                    "example": false
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "Edit a muntra-patient-clinic-curation",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/PatientClinicCurationResponse"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "schema": {
                            "properties": {
                                "message": {
                                    "description": "Edit a muntra-patient-clinic-curation",
                                    "type": "string",
                                    "example": "Please make sure that request parameters is correct"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/muntra-patient-reviews": {
            "get": {
                "tags": [
                    "muntra-patient-reviews"
                ],
                "summary": "List muntra-patient-reviews",
                "description": "Returns a list of patient reviews for a caregiver based on the given filters",
                "operationId": "getMuntraPatientReviewForCaregiver",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "caregiver_id",
                        "in": "query",
                        "description": "Parameter for certain caregiver id.",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "sort_by",
                        "in": "query",
                        "description": "'sort_by' field",
                        "required": false,
                        "type": "number",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "'per_page' field",
                        "required": false,
                        "type": "number",
                        "allowEmptyValue": true,
                        "default": ""
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "List muntra-patient-reviews",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/MuntraPatientReviewCaregiver"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "schema": {
                            "properties": {
                                "message": {
                                    "description": "List muntra-patient-reviews",
                                    "type": "string",
                                    "example": "Please make sure that request parameters is correct"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "muntra-patient-reviews"
                ],
                "summary": "Create a muntra-patient-review",
                "description": "Create a patient review",
                "operationId": "postMuntraPatientReview",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "external_id",
                        "in": "formData",
                        "description": "External id field",
                        "required": true,
                        "type": "number"
                    },
                    {
                        "name": "overall_rating",
                        "in": "formData",
                        "description": "Overall rating field",
                        "required": true,
                        "type": "number"
                    },
                    {
                        "name": "review_comment",
                        "in": "formData",
                        "description": "Review rating comment field",
                        "required": false,
                        "type": "string",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "comparison_to_expectations",
                        "in": "formData",
                        "description": "Comparison to expectations field",
                        "required": false,
                        "type": "string",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "extra_special_amazing_amenities",
                        "in": "formData",
                        "description": "Extra special amazing amenities field",
                        "required": false,
                        "type": "boolean",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "extra_special_excellent_quality",
                        "in": "formData",
                        "description": "Extra special excellent quality field",
                        "required": false,
                        "type": "boolean",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "extra_special_fast_and_painless",
                        "in": "formData",
                        "description": "Extra special fast and painless field",
                        "required": false,
                        "type": "boolean",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "extra_special_no_waiting_time",
                        "in": "formData",
                        "description": "Extra special no waiting time field",
                        "required": false,
                        "type": "boolean",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "extra_special_outstanding_treatment",
                        "in": "formData",
                        "description": "Extra special outstanding treatment field",
                        "required": false,
                        "type": "boolean",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "extra_special_phenomenal_information",
                        "in": "formData",
                        "description": "Extra special phenomenal information field",
                        "required": false,
                        "type": "boolean",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "extra_special_useful_practical_tips",
                        "in": "formData",
                        "description": "Extra special useful practical tips field",
                        "required": false,
                        "type": "boolean",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "info_rating_advice_and_tips",
                        "in": "formData",
                        "description": "Info rating advice and tips field",
                        "required": false,
                        "type": "integer",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "info_rating_follow_up",
                        "in": "formData",
                        "description": "Info rating follow up field",
                        "required": false,
                        "type": "integer",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "Info rating how to find_place",
                        "in": "formData",
                        "description": "Info rating how to find place field",
                        "required": false,
                        "type": "integer",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "info_rating_patient_health",
                        "in": "formData",
                        "description": "Info rating patient health field field",
                        "required": false,
                        "type": "integer",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "info_rating_patient_treatment",
                        "in": "formData",
                        "description": "Info rating patient treatment field",
                        "required": false,
                        "type": "integer",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "info_rating_pre_meeting",
                        "in": "formData",
                        "description": "info rating pre meeting field",
                        "required": false,
                        "type": "integer",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "private_comment_to_caregiver",
                        "in": "formData",
                        "description": "Private comment to caregiver field",
                        "required": false,
                        "type": "string",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "rating_quality",
                        "in": "formData",
                        "description": "Rating quality field",
                        "required": false,
                        "type": "integer",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "rating_bedside_manner",
                        "in": "formData",
                        "description": "Rating bedside manner field",
                        "required": false,
                        "type": "integer",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "rating_hygiene",
                        "in": "formData",
                        "description": "Rating hygiene field",
                        "required": false,
                        "type": "integer",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "rating_reception_on_arrival",
                        "in": "formData",
                        "description": "Rating reception on arrival field",
                        "required": false,
                        "type": "integer",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "rating_thoroughness",
                        "in": "formData",
                        "description": "Rating thoroughness field",
                        "required": false,
                        "type": "integer",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "rating_wait_time",
                        "in": "formData",
                        "description": "Rating wait time field",
                        "required": false,
                        "type": "integer",
                        "allowEmptyValue": true,
                        "default": ""
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "Create a muntra-patient-review",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/MuntraPatientReviewCaregiver"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "schema": {
                            "properties": {
                                "message": {
                                    "description": "Create a muntra-patient-review",
                                    "type": "string",
                                    "example": "Please make sure that request parameters is correct"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/muntra-patient-reviews/{id}": {
            "patch": {
                "tags": [
                    "muntra-patient-reviews"
                ],
                "summary": "Edit muntra-patient-review",
                "description": "Edit a patient review",
                "operationId": "patchMuntraPatientReview",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Muntra Muntra Patient Review Id.",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "type": "integer",
                        "default": ""
                    },
                    {
                        "name": "external_id",
                        "in": "formData",
                        "description": "External id field",
                        "required": true,
                        "type": "number"
                    },
                    {
                        "name": "overall_rating",
                        "in": "formData",
                        "description": "Overall rating field",
                        "required": true,
                        "type": "number"
                    },
                    {
                        "name": "review_comment",
                        "in": "formData",
                        "description": "Review rating comment field",
                        "required": false,
                        "type": "string",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "comparison_to_expectations",
                        "in": "formData",
                        "description": "Comparison to expectations field",
                        "required": false,
                        "type": "string",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "extra_special_amazing_amenities",
                        "in": "formData",
                        "description": "Extra special amazing amenities field",
                        "required": false,
                        "type": "boolean",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "extra_special_excellent_quality",
                        "in": "formData",
                        "description": "Extra special excellent quality field",
                        "required": false,
                        "type": "boolean",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "extra_special_fast_and_painless",
                        "in": "formData",
                        "description": "Extra special fast and painless field",
                        "required": false,
                        "type": "boolean",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "extra_special_no_waiting_time",
                        "in": "formData",
                        "description": "Extra special no waiting time field",
                        "required": false,
                        "type": "boolean",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "extra_special_outstanding_treatment",
                        "in": "formData",
                        "description": "Extra special outstanding treatment field",
                        "required": false,
                        "type": "boolean",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "extra_special_phenomenal_information",
                        "in": "formData",
                        "description": "Extra special phenomenal information field",
                        "required": false,
                        "type": "boolean",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "extra_special_useful_practical_tips",
                        "in": "formData",
                        "description": "Extra special useful practical tips field",
                        "required": false,
                        "type": "boolean",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "info_rating_advice_and_tips",
                        "in": "formData",
                        "description": "Info rating advice and tips field",
                        "required": false,
                        "type": "integer",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "info_rating_follow_up",
                        "in": "formData",
                        "description": "Info rating follow up field",
                        "required": false,
                        "type": "integer",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "Info rating how to find_place",
                        "in": "formData",
                        "description": "Info rating how to find place field",
                        "required": false,
                        "type": "integer",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "info_rating_patient_health",
                        "in": "formData",
                        "description": "Info rating patient health field field",
                        "required": false,
                        "type": "integer",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "info_rating_patient_treatment",
                        "in": "formData",
                        "description": "Info rating patient treatment field",
                        "required": false,
                        "type": "integer",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "info_rating_pre_meeting",
                        "in": "formData",
                        "description": "info rating pre meeting field",
                        "required": false,
                        "type": "integer",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "private_comment_to_caregiver",
                        "in": "formData",
                        "description": "Private comment to caregiver field",
                        "required": false,
                        "type": "string",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "rating_quality",
                        "in": "formData",
                        "description": "Rating quality field",
                        "required": false,
                        "type": "integer",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "rating_bedside_manner",
                        "in": "formData",
                        "description": "Rating bedside manner field",
                        "required": false,
                        "type": "integer",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "rating_hygiene",
                        "in": "formData",
                        "description": "Rating hygiene field",
                        "required": false,
                        "type": "integer",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "rating_reception_on_arrival",
                        "in": "formData",
                        "description": "Rating reception on arrival field",
                        "required": false,
                        "type": "integer",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "rating_thoroughness",
                        "in": "formData",
                        "description": "Rating thoroughness field",
                        "required": false,
                        "type": "integer",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "rating_wait_time",
                        "in": "formData",
                        "description": "Rating wait time field",
                        "required": false,
                        "type": "integer",
                        "allowEmptyValue": true,
                        "default": ""
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "Edit muntra-patient-review",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/MuntraPatientReviewCaregiver"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "schema": {
                            "properties": {
                                "message": {
                                    "description": "Edit muntra-patient-review",
                                    "type": "string",
                                    "example": "Please make sure that request parameters is correct"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/muntra-procedures": {
            "get": {
                "tags": [
                    "muntra-procedures"
                ],
                "summary": "List muntra-procedures",
                "description": "Returns a list of Muntra procedures based on the given filters",
                "operationId": "getMuntraProcedures",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "filter.ids",
                        "in": "query",
                        "description": "'filter.ids' field",
                        "required": false,
                        "type": "string",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "query",
                        "in": "query",
                        "description": "'query' field",
                        "required": false,
                        "type": "array",
                        "allowEmptyValue": true,
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "default": ""
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "List muntra-procedures",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/MuntraProceduresResponse"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "schema": {
                            "properties": {
                                "message": {
                                    "description": "List muntra-procedures",
                                    "type": "string",
                                    "example": "Please make sure that request parameters is correct"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/muntra-procedures/{id}": {
            "get": {
                "tags": [
                    "muntra-procedures"
                ],
                "summary": "Retrieve a muntra-procedure",
                "description": "Returns a certain Muntra procedure based on the given filters",
                "operationId": "getMuntraProcedure",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "'id' field",
                        "required": true,
                        "type": "number",
                        "default": ""
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "Retrieve a muntra-procedure",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/MuntraProceduresResponse"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "schema": {
                            "properties": {
                                "message": {
                                    "description": "Retrieve a muntra-procedure",
                                    "type": "string",
                                    "example": "Please make sure that request parameters is correct"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/muntra-roles": {
            "get": {
                "tags": [
                    "muntra-roles"
                ],
                "summary": "List muntra-roles",
                "description": "Returns a list of Muntra roles based on the given filters",
                "operationId": "getMuntraRoles",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "is_caregiver_role",
                        "in": "query",
                        "description": "'is_caregiver_role' field",
                        "required": false,
                        "type": "boolean",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "filter.ids",
                        "in": "query",
                        "description": "'filter.ids' field",
                        "required": false,
                        "type": "array",
                        "allowEmptyValue": true,
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "default": ""
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "description": "Including 'default_procedure'.",
                        "required": false,
                        "type": "array",
                        "allowEmptyValue": true,
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "default": ""
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "List muntra-roles",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/MuntraRolesResponse"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "schema": {
                            "properties": {
                                "message": {
                                    "description": "List muntra-roles",
                                    "type": "string",
                                    "example": "Please make sure that request parameters is correct"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/muntra-roles/{id}": {
            "get": {
                "tags": [
                    "muntra-roles"
                ],
                "summary": "Retrieve a muntra-role",
                "description": "Returns certain Muntra role based on the given filters",
                "operationId": "getMuntraRole",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "'id' field",
                        "required": true,
                        "type": "number",
                        "default": ""
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "description": "Including 'default_procedure'.",
                        "required": false,
                        "type": "array",
                        "allowEmptyValue": true,
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "default": ""
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "Retrieve a muntra-role",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/MuntraRolesResponse"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "schema": {
                            "properties": {
                                "message": {
                                    "description": "Retrieve a muntra-role",
                                    "type": "string",
                                    "example": "Please make sure that request parameters is correct"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/notifications": {
            "get": {
                "tags": [
                    "notifications"
                ],
                "summary": "List notifications",
                "description": "Returns list of notifications based on the given filters",
                "operationId": "getNotifications",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "deleted",
                        "in": "query",
                        "description": "'deleted' field",
                        "required": false,
                        "type": "boolean",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "sort_by",
                        "in": "query",
                        "description": "'sort_by' field",
                        "required": false,
                        "type": "string",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "'per_page' field",
                        "required": false,
                        "type": "number",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "description": "Including 'user', 'clinic', 'notification_type'.",
                        "required": false,
                        "type": "array",
                        "allowEmptyValue": true,
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "default": ""
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "List notifications",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/NotificationsResponse"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "schema": {
                            "properties": {
                                "message": {
                                    "description": "List notifications",
                                    "type": "string",
                                    "example": "Please make sure that request parameters is correct"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/notifications/{id}": {
            "get": {
                "tags": [
                    "notifications"
                ],
                "summary": "Retrieve a notification",
                "description": "Returns certain notification based on the given filters",
                "operationId": "getNotification",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "'id' field",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "description": "Including 'user', 'clinic', 'notification_type'.",
                        "required": false,
                        "type": "array",
                        "allowEmptyValue": true,
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "default": ""
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "Retrieve a notification",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/NotificationsResponse"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "schema": {
                            "properties": {
                                "message": {
                                    "description": "Retrieve a notification",
                                    "type": "string",
                                    "example": "Please make sure that request parameters is correct"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "notifications"
                ],
                "summary": "Edit a notification",
                "description": "Returns edited notification based on the given filters",
                "operationId": "patchNotification",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "'id' field",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Body of request (obligatory)",
                        "required": true,
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "Edit a notification",
                                    "properties": {
                                        "attributes": {
                                            "description": "Edit a notification",
                                            "properties": {
                                                "is_read": {
                                                    "description": "Edit a notification",
                                                    "type": "boolean",
                                                    "example": true
                                                },
                                                "deleted": {
                                                    "description": "Edit a notification",
                                                    "type": "boolean",
                                                    "example": false
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "Edit a notification",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/NotificationsResponse"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "schema": {
                            "properties": {
                                "message": {
                                    "description": "Edit a notification",
                                    "type": "string",
                                    "example": "Please make sure that request parameters is correct"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/number-of-unread-message-rooms": {
            "get": {
                "tags": [
                    "number-of-unread-message-rooms"
                ],
                "summary": "List number-of-unread-message-rooms",
                "description": "Returns a list of number of unread messag rooms based on the given filters",
                "operationId": "getNumberOfUnreadMessageRooms",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "has_ticket",
                        "in": "query",
                        "description": "'has_ticket' field",
                        "required": false,
                        "type": "boolean",
                        "allowEmptyValue": true,
                        "default": ""
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "List number-of-unread-message-rooms",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/NumberOfUnreadMessageRoomsResponse"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "schema": {
                            "properties": {
                                "message": {
                                    "description": "List number-of-unread-message-rooms",
                                    "type": "string",
                                    "example": "Please make sure that request parameters is correct"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/opening-hours": {
            "get": {
                "tags": [
                    "opening-hours"
                ],
                "summary": "List opening-hours",
                "description": "Returns list of opening hours based on the given filters",
                "operationId": "getOpeningHours",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "description": "Including 'weekday'.",
                        "required": false,
                        "type": "array",
                        "allowEmptyValue": true,
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "default": ""
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "List opening-hours",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/OpeningHourResponse"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "schema": {
                            "properties": {
                                "message": {
                                    "description": "List opening-hours",
                                    "type": "string",
                                    "example": "Please make sure that request parameters is correct"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "opening-hours"
                ],
                "summary": "Create an opening-hours",
                "description": "Returns created opening hours based on the given filters",
                "operationId": "postOpeningHours",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Body of request (obligatory)",
                        "required": true,
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "Create an opening-hours",
                                    "properties": {
                                        "attributes": {
                                            "description": "Create an opening-hours",
                                            "properties": {
                                                "weekday_id": {
                                                    "description": "Create an opening-hours",
                                                    "type": "number",
                                                    "example": 1
                                                },
                                                "dtstart_in_minutes": {
                                                    "description": "Create an opening-hours",
                                                    "type": "number",
                                                    "example": 10
                                                },
                                                "dtend_in_minutes": {
                                                    "description": "Create an opening-hours",
                                                    "type": "number",
                                                    "example": 20
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "Create an opening-hours",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/OpeningHourResponse"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "schema": {
                            "properties": {
                                "message": {
                                    "description": "Create an opening-hours",
                                    "type": "string",
                                    "example": "Please make sure that request parameters is correct"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/opening-hours/{id}": {
            "get": {
                "tags": [
                    "opening-hours"
                ],
                "summary": "Retrieve an opening-hours",
                "description": "Returns certain opening hours based on the given filters",
                "operationId": "getOpeningHour",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "'id' field",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "description": "Including 'weekday'.",
                        "required": false,
                        "type": "array",
                        "allowEmptyValue": true,
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "default": ""
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "Retrieve an opening-hours",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/OpeningHourResponse"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "schema": {
                            "properties": {
                                "message": {
                                    "description": "Retrieve an opening-hours",
                                    "type": "string",
                                    "example": "Please make sure that request parameters is correct"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "opening-hours"
                ],
                "summary": "Edit an opening-hours",
                "description": "Returns edited opening hours based on the given filters",
                "operationId": "patchOpeningHour",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "'id' field",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Body of request (obligatory)",
                        "required": true,
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "Edit an opening-hours",
                                    "properties": {
                                        "attributes": {
                                            "description": "Edit an opening-hours",
                                            "properties": {
                                                "weekday_id": {
                                                    "description": "Edit an opening-hours",
                                                    "type": "number",
                                                    "example": 1
                                                },
                                                "dtstart_in_minutes": {
                                                    "description": "Edit an opening-hours",
                                                    "type": "number",
                                                    "example": 10
                                                },
                                                "dtend_in_minutes": {
                                                    "description": "Edit an opening-hours",
                                                    "type": "number",
                                                    "example": 20
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "Edit an opening-hours",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/OpeningHourResponse"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "schema": {
                            "properties": {
                                "message": {
                                    "description": "Edit an opening-hours",
                                    "type": "string",
                                    "example": "Please make sure that request parameters is correct"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/organizations/current": {
            "get": {
                "tags": [
                    "organizations"
                ],
                "summary": "Retrieve the current organization",
                "description": "Retrieves the organization currently selected in the user's session",
                "operationId": "getMuntraOrganizationCurrent",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "description": "Including 'default_procedure', 'user', 'contact_person', 'additional_owners', 'invoice_payment_standard_option', 'clinics', 'verification_series', 'payment_types', 'fiscal_years', 'orders', 'payment_gateway_accounts', 'supplier_settings_for_organizations', 'organization_supplier_settings', 'organization_clinic_settings', 'reference_types', 'certificate'.",
                        "required": false,
                        "type": "array",
                        "allowEmptyValue": true,
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "default": ""
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "Retrieve the current organization",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/MuntraOrganizationsCurrentResponse"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "schema": {
                            "properties": {
                                "message": {
                                    "description": "Retrieve the current organization",
                                    "type": "string",
                                    "example": "Please make sure that request parameters is correct"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/parod-entry-types": {
            "get": {
                "tags": [
                    "parod-entry-types"
                ],
                "summary": "List parod-entry-types",
                "description": "Returns list of parod entry types based on the given filters",
                "operationId": "getParodEntryTypes",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "List parod-entry-types",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/ParodEntryTypeResponse"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "schema": {
                            "properties": {
                                "message": {
                                    "description": "List parod-entry-types",
                                    "type": "string",
                                    "example": "Please make sure that request parameters is correct"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/parod-entry-types/{id}": {
            "get": {
                "tags": [
                    "parod-entry-types"
                ],
                "summary": "Retrieve a parod-entry-type",
                "description": "Returns certain parod entry type based on the given filters",
                "operationId": "getParodEntryType",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "'id' field",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "Retrieve a parod-entry-type",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/ParodEntryTypeResponse"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "schema": {
                            "properties": {
                                "message": {
                                    "description": "Retrieve a parod-entry-type",
                                    "type": "string",
                                    "example": "Please make sure that request parameters is correct"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/patient-invoice-rows": {
            "get": {
                "tags": [
                    "patient-invoice-rows"
                ],
                "summary": "List patient-invoice-rows",
                "description": "Returns list of patient invoice rows based on the given filters",
                "operationId": "getPatientInvoiceRows",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "description": "Including 'patient_invoices', 'user', 'price', 'patient_payment_method', 'journal_entry'.",
                        "required": false,
                        "type": "array",
                        "allowEmptyValue": true,
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "default": ""
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "List patient-invoice-rows",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/PatientInvoiceRowResponse"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "schema": {
                            "properties": {
                                "message": {
                                    "description": "List patient-invoice-rows",
                                    "type": "string",
                                    "example": "Please make sure that request parameters is correct"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "patient-invoice-rows"
                ],
                "summary": "Create a patient-invoice-row",
                "description": "Returns created patient invoice row based on the given filters",
                "operationId": "postPatientInvoiceRow",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Body of request (obligatory)",
                        "required": true,
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "Create a patient-invoice-row",
                                    "properties": {
                                        "attributes": {
                                            "description": "Create a patient-invoice-row",
                                            "properties": {
                                                "vat_code_id": {
                                                    "description": "Create a patient-invoice-row",
                                                    "type": "number",
                                                    "example": 1
                                                },
                                                "patient_invoices": {
                                                    "description": "Create a patient-invoice-row",
                                                    "properties": {
                                                        "patient_invoice_row_id": {
                                                            "description": "Create a patient-invoice-row",
                                                            "type": "number",
                                                            "example": 1
                                                        }
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "Create a patient-invoice-row",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/PatientInvoiceRowResponse"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "schema": {
                            "properties": {
                                "message": {
                                    "description": "Create a patient-invoice-row",
                                    "type": "string",
                                    "example": "Please make sure that request parameters is correct"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/patient-invoice-rows/{id}": {
            "get": {
                "tags": [
                    "patient-invoice-rows"
                ],
                "summary": "Retrieve a patient-invoice-row",
                "description": "Returns certain patient invoice row based on the given filters",
                "operationId": "getPatientInvoiceRow",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "'id' field",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "description": "Including 'patient_invoices', 'user', 'price', 'patient_payment_method', 'journal_entry'.",
                        "required": false,
                        "type": "array",
                        "allowEmptyValue": true,
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "default": ""
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "Retrieve a patient-invoice-row",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/PatientInvoiceRowResponse"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "schema": {
                            "properties": {
                                "message": {
                                    "description": "Retrieve a patient-invoice-row",
                                    "type": "string",
                                    "example": "Please make sure that request parameters is correct"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "patient-invoice-rows"
                ],
                "summary": "Edit a patient-invoice-row",
                "description": "Returns edited patient invoice row based on the given filters",
                "operationId": "patchPatientInvoiceRow",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "'id' field",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Body of request (obligatory)",
                        "required": true,
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "Edit a patient-invoice-row",
                                    "properties": {
                                        "attributes": {
                                            "description": "Edit a patient-invoice-row",
                                            "properties": {
                                                "vat_code_id": {
                                                    "description": "Edit a patient-invoice-row",
                                                    "type": "number",
                                                    "example": 1
                                                },
                                                "patient_invoices": {
                                                    "description": "Edit a patient-invoice-row",
                                                    "properties": {
                                                        "patient_invoice_row_id": {
                                                            "description": "Edit a patient-invoice-row",
                                                            "type": "number",
                                                            "example": 1
                                                        }
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "Edit a patient-invoice-row",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/PatientInvoiceRowResponse"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "schema": {
                            "properties": {
                                "message": {
                                    "description": "Edit a patient-invoice-row",
                                    "type": "string",
                                    "example": "Please make sure that request parameters is correct"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/patient-invoices": {
            "get": {
                "tags": [
                    "patient-invoices"
                ],
                "summary": "List patient-invoices",
                "description": "Returns a list of patient invoices based on the given filters",
                "operationId": "getPatientInvoices",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "description": "Including 'organization', 'user', 'fiscal_year', 'verification', 'invoice_type', 'payment_type', 'currency', 'patient', 'third_party', 'location', 'county_council', 'daily_reconciliation', 'patient_invoice_rows', 'checkout_service', 'claims', 'invoice_payments', 'invoice_emails', 'receipt_registrations', 'deductions', 'third_party_requests', 'third_party_response_errors', 'references'.",
                        "required": false,
                        "type": "array",
                        "allowEmptyValue": true,
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "default": ""
                    },
                    {
                        "name": "fiscal_year_id",
                        "in": "query",
                        "description": "'fiscal_year_id' field",
                        "required": false,
                        "type": "string",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "organization_id",
                        "in": "query",
                        "description": "'organization_id' field",
                        "required": false,
                        "type": "string",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "clinic_ids",
                        "in": "query",
                        "description": "Clinic id(s) field",
                        "required": false,
                        "type": "array",
                        "allowEmptyValue": true,
                        "items": {
                            "type": "string"
                        },
                        "default": ""
                    },
                    {
                        "name": "patient_id",
                        "in": "query",
                        "description": "'patient_id' field",
                        "required": false,
                        "type": "string",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "invoice_type_ids",
                        "in": "query",
                        "description": "Invoice type id(s) field",
                        "required": false,
                        "type": "array",
                        "allowEmptyValue": true,
                        "items": {
                            "type": "string"
                        },
                        "default": ""
                    },
                    {
                        "name": "category",
                        "in": "query",
                        "description": "'category' field",
                        "required": false,
                        "type": "string",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "only_third_party_tags",
                        "in": "query",
                        "description": "'only_third_party_tags' field",
                        "required": false,
                        "type": "array",
                        "allowEmptyValue": true,
                        "items": {
                            "type": "string"
                        },
                        "default": ""
                    },
                    {
                        "name": "exclude_third_party_tags",
                        "in": "query",
                        "description": "'exclude_third_party_tags' field",
                        "required": false,
                        "type": "array",
                        "allowEmptyValue": true,
                        "items": {
                            "type": "string"
                        },
                        "default": ""
                    },
                    {
                        "name": "has_debt_collection_service",
                        "in": "query",
                        "description": "'has_debt_collection_service' field",
                        "required": false,
                        "type": "boolean",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "printed",
                        "in": "query",
                        "description": "'printed' field",
                        "required": false,
                        "type": "boolean",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "only_include_unbooked_patients",
                        "in": "query",
                        "description": "'only_include_unbooked_patients' field",
                        "required": false,
                        "type": "boolean",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "has_reminder",
                        "in": "query",
                        "description": "'has_reminder' field",
                        "required": false,
                        "type": "boolean",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "deleted",
                        "in": "query",
                        "description": "'deleted' field",
                        "required": false,
                        "type": "boolean",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "from_date",
                        "in": "query",
                        "description": "'from_date' field",
                        "required": false,
                        "type": "string",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "to_date",
                        "in": "query",
                        "description": "'to_date' field",
                        "required": false,
                        "type": "string",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "receipt_from_date",
                        "in": "query",
                        "description": "'receipt_from_date' field",
                        "required": false,
                        "type": "string",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "caregiver_ids",
                        "in": "query",
                        "description": "'caregiver_ids' field",
                        "required": false,
                        "type": "array",
                        "allowEmptyValue": true,
                        "items": {
                            "type": "string"
                        },
                        "default": ""
                    },
                    {
                        "name": "location_ids",
                        "in": "query",
                        "description": "'location_ids' field",
                        "required": false,
                        "type": "array",
                        "allowEmptyValue": true,
                        "items": {
                            "type": "string"
                        },
                        "default": ""
                    },
                    {
                        "name": "user_id",
                        "in": "query",
                        "description": "'user_id' field",
                        "required": false,
                        "type": "string",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "query",
                        "in": "query",
                        "description": "'query' field",
                        "required": false,
                        "type": "string",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "sort_by",
                        "in": "query",
                        "description": "'sort_by' field",
                        "required": false,
                        "type": "string",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "'per_page' field",
                        "required": false,
                        "type": "number",
                        "allowEmptyValue": true,
                        "default": ""
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "List patient-invoices",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/PatientInvoiceResponse"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "schema": {
                            "properties": {
                                "message": {
                                    "description": "List patient-invoices",
                                    "type": "string",
                                    "example": "Please make sure that request parameters is correct"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "patient-invoices"
                ],
                "summary": "Create a patient-invoice",
                "description": "Returns created patient invoice based on the given filters",
                "operationId": "postPatientInvoice",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Body of request (one field obligatory)",
                        "required": true,
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "Create a patient-invoice",
                                    "properties": {
                                        "attributes": {
                                            "description": "Create a patient-invoice",
                                            "properties": {
                                                "organization_id": {
                                                    "description": "Create a patient-invoice",
                                                    "type": "string",
                                                    "example": "123"
                                                },
                                                "user_id": {
                                                    "description": "Create a patient-invoice",
                                                    "type": "string",
                                                    "example": "11"
                                                },
                                                "fiscal_year_id": {
                                                    "description": "Create a patient-invoice",
                                                    "type": "string",
                                                    "example": "123"
                                                },
                                                "invoice_date": {
                                                    "description": "Create a patient-invoice",
                                                    "type": "string",
                                                    "format": "date",
                                                    "example": "2020-08-24"
                                                },
                                                "due_date": {
                                                    "description": "Create a patient-invoice",
                                                    "type": "string",
                                                    "format": "date",
                                                    "example": "2024-08-28"
                                                },
                                                "currency_id": {
                                                    "description": "Create a patient-invoice",
                                                    "type": "string"
                                                },
                                                "invoice_type_id": {
                                                    "description": "Create a patient-invoice",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "Create a patient-invoice",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/PatientInvoiceResponse"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "schema": {
                            "properties": {
                                "message": {
                                    "description": "Create a patient-invoice",
                                    "type": "string",
                                    "example": "Please make sure that request parameters is correct"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/patient-invoices/{id}": {
            "get": {
                "tags": [
                    "patient-invoices"
                ],
                "summary": "Retrieve a patient-invoice",
                "description": "Returns certain patient invoice based on the given filters",
                "operationId": "getPatientInvoice",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "'id' field",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "description": "Including 'organization', 'user', 'fiscal_year', 'verification', 'invoice_type', 'payment_type', 'currency', 'patient', 'third_party', 'location', 'county_council', 'daily_reconciliation', 'patient_invoice_rows', 'checkout_service', 'claims', 'invoice_payments', 'invoice_emails', 'receipt_registrations', 'deductions', 'third_party_requests', 'third_party_response_errors', 'references'.",
                        "required": false,
                        "type": "array",
                        "allowEmptyValue": true,
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "default": ""
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "Retrieve a patient-invoice",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/PatientInvoiceResponse"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "schema": {
                            "properties": {
                                "message": {
                                    "description": "Retrieve a patient-invoice",
                                    "type": "string",
                                    "example": "Please make sure that request parameters is correct"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "patient-invoices"
                ],
                "summary": "Edit a patient-invoice",
                "description": "Returns edited patient invoice based on the given filters",
                "operationId": "patchPatientInvoice",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "'id' field",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Body of request (one field obligatory)",
                        "required": true,
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "Edit a patient-invoice",
                                    "properties": {
                                        "attributes": {
                                            "description": "Edit a patient-invoice",
                                            "properties": {
                                                "organization_id": {
                                                    "description": "Edit a patient-invoice",
                                                    "type": "string",
                                                    "example": "123"
                                                },
                                                "user_id": {
                                                    "description": "Edit a patient-invoice",
                                                    "type": "string",
                                                    "example": "11"
                                                },
                                                "fiscal_year_id": {
                                                    "description": "Edit a patient-invoice",
                                                    "type": "string",
                                                    "example": "123"
                                                },
                                                "invoice_date": {
                                                    "description": "Edit a patient-invoice",
                                                    "type": "string",
                                                    "format": "date",
                                                    "example": "2020-08-24"
                                                },
                                                "due_date": {
                                                    "description": "Edit a patient-invoice",
                                                    "type": "string",
                                                    "format": "date",
                                                    "example": "2024-08-28"
                                                },
                                                "currency_id": {
                                                    "description": "Edit a patient-invoice",
                                                    "type": "string"
                                                },
                                                "invoice_type_id": {
                                                    "description": "Edit a patient-invoice",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "Edit a patient-invoice",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/PatientInvoiceResponse"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "schema": {
                            "properties": {
                                "message": {
                                    "description": "Edit a patient-invoice",
                                    "type": "string",
                                    "example": "Please make sure that request parameters is correct"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/patient-invoices/{id}/credit-copy-and-debt-collect-remainder": {
            "post": {
                "tags": [
                    "patient-invoices"
                ],
                "summary": "Credit, copy and debt-collect remainder for a patient-invoice",
                "description": "Returns credit copy and debt collect reminder based on the given filters",
                "operationId": "postCreditCopyAndDebtCollectRemainder",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "'id' field",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Body of request (obligatory)",
                        "required": true,
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "Credit, copy and debt-collect remainder for a patient-invoice",
                                    "properties": {
                                        "attributes": {
                                            "description": "Credit, copy and debt-collect remainder for a patient-invoice",
                                            "properties": {
                                                "remainder_amount": {
                                                    "description": "Credit, copy and debt-collect remainder for a patient-invoice",
                                                    "type": "number",
                                                    "example": 100
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "Credit, copy and debt-collect remainder for a patient-invoice",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/PatientInvoiceResponse"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "schema": {
                            "properties": {
                                "message": {
                                    "description": "Credit, copy and debt-collect remainder for a patient-invoice",
                                    "type": "string",
                                    "example": "Please make sure that request parameters is correct"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/patient-total-receivables": {
            "get": {
                "tags": [
                    "patient-total-receivables"
                ],
                "summary": "List patient-total-receivables",
                "description": "Returns a list of patient total receivables based on the given filters",
                "operationId": "getPatientTotalReceivables",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "description": "Including 'organization', 'currency'.",
                        "required": false,
                        "type": "array",
                        "allowEmptyValue": true,
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "default": ""
                    },
                    {
                        "name": "organization_id",
                        "in": "query",
                        "description": "'organization_id' field",
                        "required": false,
                        "type": "number",
                        "allowEmptyValue": true,
                        "default": ""
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "List patient-total-receivables",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/PatientTotalReceivableResponse"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "schema": {
                            "properties": {
                                "message": {
                                    "description": "List patient-total-receivables",
                                    "type": "string",
                                    "example": "Please make sure that request parameters is correct"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/patients": {
            "get": {
                "tags": [
                    "patients"
                ],
                "summary": "List patients",
                "description": "Returns s list of patients based on the given filters",
                "operationId": "getPatients",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "description": "Including 'user', 'country', 'stb_disease', 'county_council', 'county_council_patient_category', 'default_reimbursement_type', 'patient_tags'.",
                        "required": false,
                        "type": "array",
                        "allowEmptyValue": true,
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "default": ""
                    },
                    {
                        "name": "history_id",
                        "in": "query",
                        "description": "History id field",
                        "required": false,
                        "type": "number",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "deleted",
                        "in": "query",
                        "description": "'Deleted' field",
                        "required": false,
                        "type": "boolean",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "xray_id",
                        "in": "query",
                        "description": "'xray_id' field",
                        "required": false,
                        "type": "number",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "clinic_ids",
                        "in": "query",
                        "description": "Clinic id(s) field",
                        "required": false,
                        "type": "array",
                        "allowEmptyValue": true,
                        "items": {
                            "type": "string"
                        },
                        "default": ""
                    },
                    {
                        "name": "has_email",
                        "in": "query",
                        "description": "'has_email' field",
                        "required": false,
                        "type": "boolean",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "patient_tag_ids",
                        "in": "query",
                        "description": "Patient tag id(s) field",
                        "required": false,
                        "type": "array",
                        "allowEmptyValue": true,
                        "items": {
                            "type": "string"
                        },
                        "default": ""
                    },
                    {
                        "name": "third_party_patient_category_ids",
                        "in": "query",
                        "description": "Third party patient category id(s) field",
                        "required": false,
                        "type": "array",
                        "allowEmptyValue": true,
                        "items": {
                            "type": "string"
                        },
                        "default": ""
                    },
                    {
                        "name": "rebooking_from_date",
                        "in": "query",
                        "description": "Rebooking from date field (format: '2024-08-01')",
                        "required": false,
                        "type": "string",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "rebooking_to_date",
                        "in": "query",
                        "description": "Rebooking from date field (format: '2024-08-08')",
                        "required": false,
                        "type": "string",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "first_name",
                        "in": "query",
                        "description": "First name field",
                        "required": false,
                        "type": "string",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "query",
                        "in": "query",
                        "description": "'query' field",
                        "required": false,
                        "type": "array",
                        "allowEmptyValue": true,
                        "items": {
                            "type": "string"
                        },
                        "default": ""
                    },
                    {
                        "name": "sort_by",
                        "in": "query",
                        "description": "'sort_by' field (example: 'sort_by':'first_name')",
                        "required": false,
                        "type": "string",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "include_closest_unbooked_rebooking",
                        "in": "query",
                        "description": "'include_closest_unbooked_rebooking' field",
                        "required": false,
                        "type": "boolean",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "include_first_future_booking",
                        "in": "query",
                        "description": "'include_first_future_booking' field",
                        "required": false,
                        "type": "boolean",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "include_latest_unbooked_rebooking",
                        "in": "query",
                        "description": "'include_latest_unbooked_rebooking' field",
                        "required": false,
                        "type": "boolean",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "social_security_number",
                        "in": "query",
                        "description": "Social security number field",
                        "required": false,
                        "type": "string",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "booking_status",
                        "in": "query",
                        "description": "Booking status field",
                        "required": false,
                        "type": "string",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "Status field",
                        "required": false,
                        "type": "string",
                        "allowEmptyValue": true,
                        "default": ""
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "List patients",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/PatientResponse"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "schema": {
                            "properties": {
                                "message": {
                                    "description": "List patients",
                                    "type": "string",
                                    "example": "Please make sure that request parameters is correct"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "patients"
                ],
                "summary": "Create a patient",
                "description": "Returns created patient based on the given filters",
                "operationId": "postPatient",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Body of request (one field obligatory)",
                        "required": true,
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "Create a patient",
                                    "properties": {
                                        "attributes": {
                                            "description": "Create a patient",
                                            "properties": {
                                                "social_security_number": {
                                                    "description": "Create a patient",
                                                    "type": "number",
                                                    "example": "199007212211"
                                                },
                                                "date_of_birth": {
                                                    "description": "Create a patient",
                                                    "type": "number",
                                                    "format": "date",
                                                    "example": "1990-08-24"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    {
                        "name": "patient_number",
                        "in": "query",
                        "description": "Patient number field",
                        "required": false,
                        "type": "string",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "first_name",
                        "in": "query",
                        "description": "First name field",
                        "required": false,
                        "type": "string",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "last_name",
                        "in": "query",
                        "description": "Last name field",
                        "required": false,
                        "type": "string",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "gender",
                        "in": "query",
                        "description": "Gender field",
                        "required": false,
                        "type": "string",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "address_1",
                        "in": "query",
                        "description": "Address 1 field",
                        "required": false,
                        "type": "string",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "postal_code",
                        "in": "query",
                        "description": "Postal code field",
                        "required": false,
                        "type": "string",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "city",
                        "in": "query",
                        "description": "City field",
                        "required": false,
                        "type": "string",
                        "allowEmptyValue": true,
                        "default": ""
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "Create a patient",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/PatientResponse"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "schema": {
                            "properties": {
                                "message": {
                                    "description": "Create a patient",
                                    "type": "string",
                                    "example": "Please make sure that request parameters is correct"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/patients/{id}": {
            "get": {
                "tags": [
                    "patients"
                ],
                "summary": "Retrieve a patient",
                "description": "Retrieve a specific patient",
                "operationId": "getPatient",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Patient id in query/url",
                        "required": true,
                        "type": "number"
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "description": "Including 'user', 'country', 'stb_disease', 'county_council', 'county_council_patient_category', 'default_reimbursement_type', 'patient_tags'.",
                        "required": false,
                        "type": "array",
                        "allowEmptyValue": true,
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "default": ""
                    },
                    {
                        "name": "organization_id",
                        "in": "query",
                        "description": "Organization id field",
                        "required": false,
                        "type": "number",
                        "allowEmptyValue": true,
                        "default": ""
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "Retrieve a patient",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/PatientResponse"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "schema": {
                            "properties": {
                                "message": {
                                    "description": "Retrieve a patient",
                                    "type": "string",
                                    "example": "Please make sure that request parameters is correct"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "patients"
                ],
                "summary": "Edit a patient",
                "description": "Edit a specific patient",
                "operationId": "patchPatient",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Patient id in query/url",
                        "required": true,
                        "type": "number"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Body of request (one field obligatory)",
                        "required": true,
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "Edit a patient",
                                    "properties": {
                                        "attributes": {
                                            "description": "Edit a patient",
                                            "properties": {
                                                "patient_number": {
                                                    "description": "Edit a patient",
                                                    "type": "number",
                                                    "example": "2"
                                                },
                                                "social_security_number": {
                                                    "description": "Edit a patient",
                                                    "type": "number",
                                                    "example": "199007212211"
                                                },
                                                "date_of_birth": {
                                                    "description": "Edit a patient",
                                                    "type": "number",
                                                    "format": "date",
                                                    "example": "1990-08-24"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "Edit a patient",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/PatientResponse"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "schema": {
                            "properties": {
                                "message": {
                                    "description": "Edit a patient",
                                    "type": "string",
                                    "example": "Please make sure that request parameters is correct"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/payment-types": {
            "get": {
                "tags": [
                    "payment-types"
                ],
                "summary": "List payment-types",
                "description": "Returns a list of payment types based on the given filters",
                "operationId": "getPaymentTypes",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "description": "Including 'invoice_types', 'invoice_types_with_default', 'custom_payment_types', 'default_custom_payment_type'.",
                        "required": false,
                        "type": "array",
                        "allowEmptyValue": true,
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "default": ""
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "List payment-types",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/PaymentTypeResponse"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "schema": {
                            "properties": {
                                "message": {
                                    "description": "List payment-types",
                                    "type": "string",
                                    "example": "Please make sure that request parameters is correct"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/payment-types/{id}": {
            "patch": {
                "tags": [
                    "payment-types"
                ],
                "summary": "Edit a payment-type",
                "description": "Returns edited payment type based on the given filters",
                "operationId": "patchPaymentType",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "'id' field",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Body of request (not obligatory)",
                        "required": true,
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "Edit a payment-type",
                                    "properties": {
                                        "attributes": {
                                            "description": "Edit a payment-type",
                                            "properties": {
                                                "default_custom_payment_type_id": {
                                                    "description": "Edit a payment-type",
                                                    "type": "number",
                                                    "example": 1
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "Edit a payment-type",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/PaymentTypeResponse"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "schema": {
                            "properties": {
                                "message": {
                                    "description": "Edit a payment-type",
                                    "type": "string",
                                    "example": "Please make sure that request parameters is correct"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/pdfs": {
            "get": {
                "tags": [
                    "pdfs"
                ],
                "summary": "List pdfs",
                "description": "Returns list of pdfs based on the given filters",
                "operationId": "getPdfs",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "description": "Including 'patient'.",
                        "required": false,
                        "type": "array",
                        "allowEmptyValue": true,
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "default": ""
                    },
                    {
                        "name": "sort_by",
                        "in": "query",
                        "description": "'sort_by' field",
                        "required": false,
                        "type": "string",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "'per_page' field",
                        "required": false,
                        "type": "number",
                        "allowEmptyValue": true,
                        "default": ""
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "List pdfs",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/PdfResponse"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "schema": {
                            "properties": {
                                "message": {
                                    "description": "List pdfs",
                                    "type": "string",
                                    "example": "Please make sure that request parameters is correct"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/pdfs/{id}": {
            "get": {
                "tags": [
                    "pdfs"
                ],
                "summary": "Retrieve a pdf",
                "description": "Returns certain pdf based on the given filters",
                "operationId": "getPdf",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "'id' field",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "description": "Including 'patient'.",
                        "required": false,
                        "type": "array",
                        "allowEmptyValue": true,
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "default": ""
                    },
                    {
                        "name": "sort_by",
                        "in": "query",
                        "description": "'sort_by' field",
                        "required": false,
                        "type": "string",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "'per_page' field",
                        "required": false,
                        "type": "number",
                        "allowEmptyValue": true,
                        "default": ""
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "Retrieve a pdf",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/PdfResponse"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "schema": {
                            "properties": {
                                "message": {
                                    "description": "Retrieve a pdf",
                                    "type": "string",
                                    "example": "Please make sure that request parameters is correct"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "pdfs"
                ],
                "summary": "Edit a pdf",
                "description": "Returns edited pdf based on the given filters",
                "operationId": "patchPdf",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "'id' field",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Body of request (not obligatory)",
                        "required": false,
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "Edit a pdf",
                                    "properties": {
                                        "attributes": {
                                            "description": "Edit a pdf",
                                            "properties": {
                                                "name": {
                                                    "description": "Edit a pdf",
                                                    "type": "string",
                                                    "example": "Test name"
                                                },
                                                "treatment_date": {
                                                    "description": "Edit a pdf",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "Edit a pdf",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/PdfResponse"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "schema": {
                            "properties": {
                                "message": {
                                    "description": "Edit a pdf",
                                    "type": "string",
                                    "example": "Please make sure that request parameters is correct"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/prescription-row-waiting-times": {
            "get": {
                "tags": [
                    "prescription-row-waiting-times"
                ],
                "summary": "List animal-prescription-row-waiting-times",
                "description": "Returns list of animal prescription row waiting times based on the given filters",
                "operationId": "getAnimalPrescriptionRowWaitingTimes",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "description": "Including 'animal_prescription_row'.",
                        "required": false,
                        "type": "array",
                        "allowEmptyValue": true,
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "default": ""
                    },
                    {
                        "name": "animal_prescription_row_id",
                        "in": "query",
                        "description": "'animal_prescription_row_id' field",
                        "required": false,
                        "type": "number",
                        "allowEmptyValue": true,
                        "default": ""
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "List animal-prescription-row-waiting-times",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/AnimalPrescriptionRowWaitingResponse"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "schema": {
                            "properties": {
                                "message": {
                                    "description": "List animal-prescription-row-waiting-times",
                                    "type": "string",
                                    "example": "Please make sure that request parameters is correct"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "prescription-row-waiting-times"
                ],
                "summary": "Create an animal-prescription-row-waiting-time",
                "description": "Returns created animal prescription row waiting time based on the given filters",
                "operationId": "postAnimalPrescriptionRowWaitingTime",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Body of request (obligatory)",
                        "required": true,
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "Create an animal-prescription-row-waiting-time",
                                    "properties": {
                                        "attributes": {
                                            "description": "Create an animal-prescription-row-waiting-time",
                                            "properties": {
                                                "animal_prescription_row_id": {
                                                    "description": "Create an animal-prescription-row-waiting-time",
                                                    "type": "number",
                                                    "example": 1
                                                },
                                                "number_of_days": {
                                                    "description": "Create an animal-prescription-row-waiting-time",
                                                    "type": "number",
                                                    "example": 2
                                                },
                                                "type": {
                                                    "description": "Create an animal-prescription-row-waiting-time",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "Create an animal-prescription-row-waiting-time",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/AnimalPrescriptionRowWaitingResponse"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "schema": {
                            "properties": {
                                "message": {
                                    "description": "Create an animal-prescription-row-waiting-time",
                                    "type": "string",
                                    "example": "Please make sure that request parameters is correct"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/prescription-row-waiting-times/{id}": {
            "get": {
                "tags": [
                    "prescription-row-waiting-times"
                ],
                "summary": "Retrieve an animal-prescription-row-waiting-time",
                "description": "Returns certain animal prescription row waiting times based on the given filters",
                "operationId": "getAnimalPrescriptionRowWaitingTime",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "'id' field",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "description": "Including 'animal_prescription_row'.",
                        "required": false,
                        "type": "array",
                        "allowEmptyValue": true,
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "default": ""
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "Retrieve an animal-prescription-row-waiting-time",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/AnimalPrescriptionRowWaitingResponse"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "schema": {
                            "properties": {
                                "message": {
                                    "description": "Retrieve an animal-prescription-row-waiting-time",
                                    "type": "string",
                                    "example": "Please make sure that request parameters is correct"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "prescription-row-waiting-times"
                ],
                "summary": "Edit an animal-prescription-row-waiting-time",
                "description": "Returns edited animal prescription row waiting time based on the given filters",
                "operationId": "patchAnimalPrescriptionRowWaitingTime",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "'id' field",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Body of request (obligatory)",
                        "required": true,
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "Edit an animal-prescription-row-waiting-time",
                                    "properties": {
                                        "attributes": {
                                            "description": "Edit an animal-prescription-row-waiting-time",
                                            "properties": {
                                                "animal_prescription_row_id": {
                                                    "description": "Edit an animal-prescription-row-waiting-time",
                                                    "type": "number",
                                                    "example": 1
                                                },
                                                "number_of_days": {
                                                    "description": "Edit an animal-prescription-row-waiting-time",
                                                    "type": "number",
                                                    "example": 2
                                                },
                                                "type": {
                                                    "description": "Edit an animal-prescription-row-waiting-time",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "Edit an animal-prescription-row-waiting-time",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/AnimalPrescriptionRowWaitingResponse"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "schema": {
                            "properties": {
                                "message": {
                                    "description": "Edit an animal-prescription-row-waiting-time",
                                    "type": "string",
                                    "example": "Please make sure that request parameters is correct"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/prices": {
            "get": {
                "tags": [
                    "prices"
                ],
                "summary": "List prices",
                "description": "Returns a list of prices based on the given filters",
                "operationId": "getPrices",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "description": "Including 'include_non_reimbursed', 'price_list', 'state_price', 'currency', 'vat_code', 'default_treatment'.",
                        "required": false,
                        "type": "array",
                        "allowEmptyValue": true,
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "default": ""
                    },
                    {
                        "name": "price_list_id",
                        "in": "query",
                        "description": "Filtering prices according to price_list_id",
                        "required": false,
                        "type": "string",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "state_price_list_id",
                        "in": "query",
                        "description": "Filtering prices according to state_price_list_id",
                        "required": false,
                        "type": "string",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "list_id",
                        "in": "query",
                        "description": "Filtering prices according to list_id",
                        "required": false,
                        "type": "string",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "list_ids",
                        "in": "query",
                        "description": "Filtering prices according to list_ids",
                        "required": false,
                        "type": "string",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "deleted",
                        "in": "query",
                        "description": "Filtering prices according to deleted",
                        "required": false,
                        "type": "boolean",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "price_type",
                        "in": "query",
                        "description": "Filtering prices according to price_type",
                        "required": false,
                        "type": "string",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "default_treatment_id",
                        "in": "query",
                        "description": "Filtering prices according to default_treatment_id",
                        "required": false,
                        "type": "string",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "code",
                        "in": "query",
                        "description": "Filtering prices according to code",
                        "required": false,
                        "type": "string",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "price_code",
                        "in": "query",
                        "description": "Filtering prices according to price_code",
                        "required": false,
                        "type": "string",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filtering prices according to filter (example: 'filter':'id')",
                        "required": false,
                        "type": "string",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "elements",
                        "in": "query",
                        "description": "Filtering prices according to elements",
                        "required": false,
                        "type": "string",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "query",
                        "in": "query",
                        "description": "Filtering prices according to query",
                        "required": false,
                        "type": "string",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "sort_by",
                        "in": "query",
                        "description": "Filtering prices according to sort_by",
                        "required": false,
                        "type": "string",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "diagnosis_id",
                        "in": "query",
                        "description": "Filtering prices according to diagnosis_id",
                        "required": false,
                        "type": "string",
                        "allowEmptyValue": true,
                        "default": ""
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "List prices",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/PricesResponse"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "schema": {
                            "properties": {
                                "message": {
                                    "description": "List prices",
                                    "type": "string",
                                    "example": "Please make sure that request parameters is correct"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "prices"
                ],
                "summary": "Create a price",
                "description": "Returns created price based on the given filters",
                "operationId": "postPrices",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Body of request (obligatory)",
                        "required": true,
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "Create a price",
                                    "properties": {
                                        "attributes": {
                                            "description": "Create a price",
                                            "properties": {
                                                "price_list_id": {
                                                    "description": "Create a price",
                                                    "type": "number",
                                                    "example": "1"
                                                },
                                                "state_price_id": {
                                                    "description": "Create a price",
                                                    "type": "number",
                                                    "example": "2"
                                                },
                                                "price_code": {
                                                    "description": "Create a price",
                                                    "type": "number",
                                                    "example": "p303"
                                                },
                                                "description": {
                                                    "description": "Create a price",
                                                    "type": "number",
                                                    "example": "Test description"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "Create a price",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/PricesResponse"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "schema": {
                            "properties": {
                                "message": {
                                    "description": "Create a price",
                                    "type": "string",
                                    "example": "Please make sure that request parameters is correct"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/prices/{id}": {
            "get": {
                "tags": [
                    "prices"
                ],
                "summary": "Retrieve a price",
                "description": "Returns a specific price",
                "operationId": "getPrice",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "'id' of price",
                        "required": true,
                        "type": "number"
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "description": "Including 'include_non_reimbursed', 'price_list', 'state_price', 'currency', 'vat_code', 'default_treatment'.",
                        "required": false,
                        "type": "array",
                        "allowEmptyValue": true,
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "default": ""
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "Retrieve a price",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/PricesResponse"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "schema": {
                            "properties": {
                                "message": {
                                    "description": "Retrieve a price",
                                    "type": "string",
                                    "example": "Please make sure that request parameters is correct"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "prices"
                ],
                "summary": "Edit a price",
                "description": "Returns edited price based on the given filters",
                "operationId": "patchPrices",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "'id' of price",
                        "required": true,
                        "type": "number"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Body of request (obligatory)",
                        "required": true,
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "Edit a price",
                                    "properties": {
                                        "attributes": {
                                            "description": "Edit a price",
                                            "properties": {
                                                "price_code": {
                                                    "description": "Edit a price",
                                                    "type": "number",
                                                    "example": "p303"
                                                },
                                                "description": {
                                                    "description": "Edit a price",
                                                    "type": "number",
                                                    "example": "Test description"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "Edit a price",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/PricesResponse"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "schema": {
                            "properties": {
                                "message": {
                                    "description": "Edit a price",
                                    "type": "string",
                                    "example": "Please make sure that request parameters is correct"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/proposal-responses": {
            "get": {
                "tags": [
                    "proposal-responses"
                ],
                "summary": "List proposal-responses",
                "description": "Returns a list of proposal responses based on the given filters",
                "operationId": "getProposalResponses",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "description": "Including 'user', 'patient', 'proposal'.",
                        "required": false,
                        "type": "array",
                        "allowEmptyValue": true,
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "default": ""
                    },
                    {
                        "name": "patient_id",
                        "in": "query",
                        "description": "'patient_id' field",
                        "required": true,
                        "type": "number"
                    },
                    {
                        "name": "user_id",
                        "in": "query",
                        "description": "'user_id' field",
                        "required": false,
                        "type": "number",
                        "allowEmptyValue": true
                    },
                    {
                        "name": "proposal_id",
                        "in": "query",
                        "description": "'proposal_id' field",
                        "required": false,
                        "type": "number",
                        "allowEmptyValue": true
                    },
                    {
                        "name": "gives_consent",
                        "in": "query",
                        "description": "'gives_consent' field",
                        "required": false,
                        "type": "boolean",
                        "allowEmptyValue": true
                    },
                    {
                        "name": "sort_by",
                        "in": "query",
                        "description": "'sort_by' field",
                        "required": false,
                        "type": "string",
                        "allowEmptyValue": true
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "'per_page' field",
                        "required": false,
                        "type": "number",
                        "allowEmptyValue": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "List proposal-responses",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/ProposalResponseResponse"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "schema": {
                            "properties": {
                                "message": {
                                    "description": "List proposal-responses",
                                    "type": "string",
                                    "example": "Please make sure that request parameters is correct"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "proposal-responses"
                ],
                "summary": "Create a proposal-response",
                "description": "Returns created proposal response based on the given filters",
                "operationId": "postProposalResponse",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Body of request (obligatory)",
                        "required": true,
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "Create a proposal-response",
                                    "properties": {
                                        "attributes": {
                                            "description": "Create a proposal-response",
                                            "properties": {
                                                "patient_id": {
                                                    "description": "Create a proposal-response",
                                                    "type": "number",
                                                    "example": 1211
                                                },
                                                "proposal_id": {
                                                    "description": "Create a proposal-response",
                                                    "type": "number",
                                                    "example": 1237
                                                },
                                                "gives_consent": {
                                                    "description": "Create a proposal-response",
                                                    "type": "boolean",
                                                    "example": true
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "Create a proposal-response",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/ProposalResponseResponse"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "schema": {
                            "properties": {
                                "message": {
                                    "description": "Create a proposal-response",
                                    "type": "string",
                                    "example": "Please make sure that request parameters is correct"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/proposal-responses/{id}": {
            "get": {
                "tags": [
                    "proposal-responses"
                ],
                "summary": "Retrieve a proposal-response",
                "description": "Returns certain proposal response based on the given filters",
                "operationId": "getProposalResponse",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "'id' field",
                        "required": true,
                        "type": "number"
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "description": "Including 'user', 'patient', 'proposal'.",
                        "required": false,
                        "type": "array",
                        "allowEmptyValue": true,
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "default": ""
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "Retrieve a proposal-response",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/ProposalResponseResponse"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "schema": {
                            "properties": {
                                "message": {
                                    "description": "Retrieve a proposal-response",
                                    "type": "string",
                                    "example": "Please make sure that request parameters is correct"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "proposal-responses"
                ],
                "summary": "Soft-delete a proposal-response",
                "description": "Marks a specific proposal response as deleted (soft delete)",
                "operationId": "deleteProposalResponse",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the proposal response to delete",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No content",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Validation error or resource not found",
                        "schema": {
                            "properties": {
                                "errors": {
                                    "description": "Soft-delete a proposal-response",
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "status": {
                                                "description": "Soft-delete a proposal-response",
                                                "type": "integer",
                                                "example": 422
                                            },
                                            "title": {
                                                "description": "Soft-delete a proposal-response",
                                                "type": "string",
                                                "example": "This action is unauthorized."
                                            },
                                            "detail": {
                                                "description": "Soft-delete a proposal-response",
                                                "type": "string",
                                                "example": "This action is unauthorized."
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/proposals": {
            "get": {
                "tags": [
                    "proposals"
                ],
                "summary": "List proposals",
                "description": "Returns a list of proposals based on the given filters",
                "operationId": "getProposals",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "description": "Including 'organization'.",
                        "required": false,
                        "type": "array",
                        "allowEmptyValue": true,
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "default": ""
                    },
                    {
                        "name": "organization_id",
                        "in": "query",
                        "description": "'organization_id' field (optional, used to filter by a specific organization)",
                        "required": false,
                        "type": "integer",
                        "allowEmptyValue": true
                    },
                    {
                        "name": "sort_by",
                        "in": "query",
                        "description": "'sort_by' field",
                        "required": false,
                        "type": "string",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "'per_page' field",
                        "required": false,
                        "type": "number",
                        "allowEmptyValue": true,
                        "default": ""
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "List proposals",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/ProposalResponse"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "schema": {
                            "properties": {
                                "message": {
                                    "description": "List proposals",
                                    "type": "string",
                                    "example": "Please make sure that request parameters is correct"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "proposals"
                ],
                "summary": "Create a proposal",
                "description": "Creates a new proposal for the current organization based on the given filters",
                "operationId": "postProposal",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Body of request (obligatory)",
                        "required": true,
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "Create a proposal",
                                    "properties": {
                                        "attributes": {
                                            "description": "Create a proposal",
                                            "properties": {
                                                "organization_id": {
                                                    "description": "Create a proposal",
                                                    "type": "number",
                                                    "example": 12
                                                },
                                                "title": {
                                                    "description": "Create a proposal",
                                                    "type": "string",
                                                    "example": "Test title"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "Create a proposal",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/ProposalResponse"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "schema": {
                            "properties": {
                                "message": {
                                    "description": "Create a proposal",
                                    "type": "string",
                                    "example": "Please make sure that request parameters is correct"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/proposals/{id}": {
            "get": {
                "tags": [
                    "proposals"
                ],
                "summary": "Retrieve a proposal",
                "description": "Returns certain proposal based on the given filters",
                "operationId": "getProposal",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "'id' field",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "description": "Including 'organization'.",
                        "required": false,
                        "type": "array",
                        "allowEmptyValue": true,
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "default": ""
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "Retrieve a proposal",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/ProposalResponse"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "schema": {
                            "properties": {
                                "message": {
                                    "description": "Retrieve a proposal",
                                    "type": "string",
                                    "example": "Please make sure that request parameters is correct"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "proposals"
                ],
                "summary": "Soft-delete a proposal",
                "description": "Soft deletes a specific proposal by its ID",
                "operationId": "deleteProposal",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the proposal to delete",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content",
                        "schema": {
                            "type": "null"
                        }
                    },
                    "422": {
                        "description": "Validation error or resource not found",
                        "schema": {
                            "properties": {
                                "errors": {
                                    "description": "Soft-delete a proposal",
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "status": {
                                                "description": "Soft-delete a proposal",
                                                "type": "integer",
                                                "example": 422
                                            },
                                            "title": {
                                                "description": "Soft-delete a proposal",
                                                "type": "string",
                                                "example": "This action is unauthorized."
                                            },
                                            "detail": {
                                                "description": "Soft-delete a proposal",
                                                "type": "string",
                                                "example": "This action is unauthorized."
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/rebookings": {
            "get": {
                "tags": [
                    "rebookings"
                ],
                "summary": "List rebookings",
                "description": "Returns a list of rebookings based on the given filters",
                "operationId": "getRebookings",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "description": "Including 'clinic', 'rebooking_default', 'patient', 'caregiver', 'room', 'booking_type', 'booking'.",
                        "required": false,
                        "type": "array",
                        "allowEmptyValue": true,
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "default": ""
                    },
                    {
                        "name": "patient_id",
                        "in": "query",
                        "description": "'patient_id' field",
                        "required": false,
                        "type": "number",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "clinic_ids",
                        "in": "query",
                        "description": "'clinic_ids' field",
                        "required": false,
                        "type": "array",
                        "allowEmptyValue": true,
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "default": ""
                    },
                    {
                        "name": "user_ids",
                        "in": "query",
                        "description": "'user_ids' field",
                        "required": false,
                        "type": "array",
                        "allowEmptyValue": true,
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "default": ""
                    },
                    {
                        "name": "room_ids",
                        "in": "query",
                        "description": "'room_ids' field",
                        "required": false,
                        "type": "array",
                        "allowEmptyValue": true,
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "default": ""
                    },
                    {
                        "name": "booking_type_ids",
                        "in": "query",
                        "description": "'booking_type_ids' field",
                        "required": false,
                        "type": "array",
                        "allowEmptyValue": true,
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "default": ""
                    },
                    {
                        "name": "from_date",
                        "in": "query",
                        "description": "'from_date' field",
                        "required": false,
                        "type": "string",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "to_date",
                        "in": "query",
                        "description": "'to_date' field",
                        "required": false,
                        "type": "string",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "from_patient_birth_date",
                        "in": "query",
                        "description": "'from_patient_birth_date' field",
                        "required": false,
                        "type": "string",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "to_patient_birth_date",
                        "in": "query",
                        "description": "'to_patient_birth_date' field",
                        "required": false,
                        "type": "string",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "exclude_last_treatment_date",
                        "in": "query",
                        "description": "'exclude_last_treatment_date' field",
                        "required": false,
                        "type": "boolean",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "exclude_next_treatment_date",
                        "in": "query",
                        "description": "'exclude_next_treatment_date' field",
                        "required": false,
                        "type": "boolean",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "'status' field",
                        "required": false,
                        "type": "string",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "booking_status",
                        "in": "query",
                        "description": "'booking_status' field",
                        "required": false,
                        "type": "string",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "sort_by",
                        "in": "query",
                        "description": "'sort_by' field",
                        "required": false,
                        "type": "number",
                        "allowEmptyValue": true,
                        "default": ""
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "List rebookings",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/RebookingsResponse"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "schema": {
                            "properties": {
                                "message": {
                                    "description": "List rebookings",
                                    "type": "string",
                                    "example": "Please make sure that request parameters is correct"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "rebookings"
                ],
                "summary": "Create a rebooking",
                "description": "Returns created rebooking based on the given filters",
                "operationId": "postRebooking",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Body of request (obligatory)",
                        "required": true,
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "Create a rebooking",
                                    "properties": {
                                        "attributes": {
                                            "description": "Create a rebooking",
                                            "properties": {
                                                "patient_id": {
                                                    "description": "Create a rebooking",
                                                    "type": "number",
                                                    "example": 123
                                                },
                                                "date": {
                                                    "description": "Create a rebooking",
                                                    "type": "string",
                                                    "example": "2024-09-06"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "Create a rebooking",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/RebookingsResponse"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "schema": {
                            "properties": {
                                "message": {
                                    "description": "Create a rebooking",
                                    "type": "string",
                                    "example": "Please make sure that request parameters is correct"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/rebookings/{id}": {
            "get": {
                "tags": [
                    "rebookings"
                ],
                "summary": "Retrieve a rebooking",
                "description": "Returns certain rebooking based on the given filters",
                "operationId": "getRebooking",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "'id' field",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "description": "Including 'clinic', 'rebooking_default', 'patient', 'caregiver', 'room', 'booking_type', 'booking'.",
                        "required": false,
                        "type": "array",
                        "allowEmptyValue": true,
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "default": ""
                    },
                    {
                        "name": "exclude_last_treatment_date",
                        "in": "query",
                        "description": "'exclude_last_treatment_date' field",
                        "required": false,
                        "type": "boolean",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "exclude_next_treatment_date",
                        "in": "query",
                        "description": "'exclude_next_treatment_date' field",
                        "required": false,
                        "type": "boolean",
                        "allowEmptyValue": true,
                        "default": ""
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "Retrieve a rebooking",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/RebookingsResponse"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "schema": {
                            "properties": {
                                "message": {
                                    "description": "Retrieve a rebooking",
                                    "type": "string",
                                    "example": "Please make sure that request parameters is correct"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "rebookings"
                ],
                "summary": "Edit a rebooking",
                "description": "Returns edited rebooking based on the given filters",
                "operationId": "patchRebooking",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "'id' field",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Body of request (obligatory)",
                        "required": true,
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "Edit a rebooking",
                                    "properties": {
                                        "attributes": {
                                            "description": "Edit a rebooking",
                                            "properties": {
                                                "patient_id": {
                                                    "description": "Edit a rebooking",
                                                    "type": "number",
                                                    "example": 123
                                                },
                                                "date": {
                                                    "description": "Edit a rebooking",
                                                    "type": "string",
                                                    "example": "2024-09-06"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "Edit a rebooking",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/RebookingsResponse"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "schema": {
                            "properties": {
                                "message": {
                                    "description": "Edit a rebooking",
                                    "type": "string",
                                    "example": "Please make sure that request parameters is correct"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/received-remittances": {
            "get": {
                "tags": [
                    "received-remittances"
                ],
                "summary": "List received-remittances",
                "description": "Returns a list of received remittances based on the given filters",
                "operationId": "getReceivedRemmitances",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "description": "Including 'sender_clinic', 'patient', 'sender_user', 'sender_signer', 'approver', 'receiver_clinic', 'receiver_user', 'user_group', 'wanted_receiver_user', 'receiver_creation_signer', 'receiver_signer', 'files', 'sender_files', 'receiver_files', 'remittance_responses', 'remittance_emails', 'snail_mails', 'journal_entry', 'receiver_journal_entry', 'sender_journal_entry'.",
                        "required": false,
                        "type": "array",
                        "allowEmptyValue": true,
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "default": ""
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "List received-remittances",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/ReceivedRemittanceResponse"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "schema": {
                            "properties": {
                                "message": {
                                    "description": "List received-remittances",
                                    "type": "string",
                                    "example": "Please make sure that request parameters is correct"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/reimbursement-types": {
            "get": {
                "tags": [
                    "reimbursement-types"
                ],
                "summary": "List reimbursement-types",
                "description": "Returns a list of reimbursement types based on the given filters",
                "operationId": "getReimbursementTypes",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "description": "Including 'country'.",
                        "required": false,
                        "type": "array",
                        "allowEmptyValue": true,
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "default": ""
                    },
                    {
                        "name": "country_id",
                        "in": "query",
                        "description": "'country_id' field",
                        "required": false,
                        "type": "number",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "payer_type_name",
                        "in": "query",
                        "description": "'payer_type_name' field",
                        "required": false,
                        "type": "string",
                        "allowEmptyValue": true,
                        "default": ""
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "List reimbursement-types",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/ReimbursementTypeResponse"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "schema": {
                            "properties": {
                                "message": {
                                    "description": "List reimbursement-types",
                                    "type": "string",
                                    "example": "Please make sure that request parameters is correct"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/reimbursement-types/{id}": {
            "get": {
                "tags": [
                    "reimbursement-types"
                ],
                "summary": "Retrieve a reimbursement-type",
                "description": "Returns certain reimbursement type based on the given filters",
                "operationId": "getReimbursementType",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Bearer token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "description": "Including 'country'.",
                        "required": false,
                        "type": "array",
                        "allowEmptyValue": true,
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "default": ""
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "Retrieve a reimbursement-type",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/ReimbursementTypeResponse"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "schema": {
                            "properties": {
                                "message": {
                                    "description": "Retrieve a reimbursement-type",
                                    "type": "string",
                                    "example": "Please make sure that request parameters is correct"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/remittance-responses": {
            "get": {
                "tags": [
                    "remittance-responses"
                ],
                "summary": "List remittance-responses",
                "description": "Returns a list of remittance responses based on the given filters",
                "operationId": "getRemittanceResponses",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "description": "Including 'clinic', 'booking_attendees', 'default_users', 'clinics'.",
                        "required": false,
                        "type": "array",
                        "allowEmptyValue": true,
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "default": ""
                    },
                    {
                        "name": "sort_by",
                        "in": "query",
                        "description": "'sort_by' field",
                        "required": false,
                        "type": "string",
                        "allowEmptyValue": true
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "'per_page' field",
                        "required": false,
                        "type": "string",
                        "allowEmptyValue": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "List remittance-responses",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/RemittanceResponseResp"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "schema": {
                            "properties": {
                                "message": {
                                    "description": "List remittance-responses",
                                    "type": "string",
                                    "example": "Please make sure that request parameters is correct"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "remittance-responses"
                ],
                "summary": "Create a remittance-response",
                "description": "Returns a created remittance response based on the given filters",
                "operationId": "postRemittanceResponse",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Body of request (obligatory)",
                        "required": true,
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "Create a remittance-response",
                                    "properties": {
                                        "attributes": {
                                            "description": "Create a remittance-response",
                                            "properties": {
                                                "remittance_id": {
                                                    "description": "Create a remittance-response",
                                                    "type": "number"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "Create a remittance-response",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/RemittanceResponseResp"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "schema": {
                            "properties": {
                                "message": {
                                    "description": "Create a remittance-response",
                                    "type": "string",
                                    "example": "Please make sure that request parameters is correct"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/remittance-responses/{id}": {
            "get": {
                "tags": [
                    "remittance-responses"
                ],
                "summary": "Retrieve a remittance-response",
                "description": "Returns specific remittance response based on the given filters",
                "operationId": "getRemittanceResponse",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "'id' field",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "description": "Including 'sender_clinic', 'patient', 'sender_user', 'sender_signer', 'approver', 'receiver_clinic', 'receiver_user', 'user_group', 'wanted_receiver_user', 'receiver_creation_signer', 'receiver_signer', 'files', 'sender_files', 'receiver_files', 'remittance_responses', 'remittance_emails', 'snail_mails', 'journal_entry', 'receiver_journal_entry', 'sender_journal_entry'.",
                        "required": false,
                        "type": "array",
                        "allowEmptyValue": true,
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "default": ""
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "Retrieve a remittance-response",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/RemittanceResponseResp"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "schema": {
                            "properties": {
                                "message": {
                                    "description": "Retrieve a remittance-response",
                                    "type": "string",
                                    "example": "Please make sure that request parameters is correct"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "remittance-responses"
                ],
                "summary": "Edit a remittance-response",
                "description": "Returns edited remittance response based on the given filters",
                "operationId": "patchRemittanceResponse",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "'id' field",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "Edit a remittance-response",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/RemittanceResponseResp"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "schema": {
                            "properties": {
                                "message": {
                                    "description": "Edit a remittance-response",
                                    "type": "string",
                                    "example": "Please make sure that request parameters is correct"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/remittances": {
            "get": {
                "tags": [
                    "remittances"
                ],
                "summary": "List remittances",
                "description": "Returns a list of remittances based on the given filters",
                "operationId": "getRemittances",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "description": "Including 'sender_clinic', 'patient', 'sender_user', 'sender_signer', 'approver', 'receiver_clinic', 'receiver_user', 'user_group', 'wanted_receiver_user', 'receiver_creation_signer', 'receiver_signer', 'files', 'sender_files', 'receiver_files', 'remittance_responses', 'remittance_emails', 'snail_mails', 'journal_entry', 'receiver_journal_entry', 'sender_journal_entry'.",
                        "required": false,
                        "type": "array",
                        "allowEmptyValue": true,
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "default": ""
                    },
                    {
                        "name": "patient_id",
                        "in": "query",
                        "description": "'patient_id' field",
                        "required": false,
                        "type": "string",
                        "allowEmptyValue": true
                    },
                    {
                        "name": "receiver_clinic_id",
                        "in": "query",
                        "description": "'receiver_clinic_id' field",
                        "required": false,
                        "type": "string",
                        "allowEmptyValue": true
                    },
                    {
                        "name": "receiver_clinic_ids",
                        "in": "query",
                        "description": "'receiver_clinic_ids' field",
                        "required": false,
                        "type": "array",
                        "allowEmptyValue": true,
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "default": ""
                    },
                    {
                        "name": "sender_clinic_ids",
                        "in": "query",
                        "description": "'sender_clinic_ids' field",
                        "required": false,
                        "type": "array",
                        "allowEmptyValue": true,
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "default": ""
                    },
                    {
                        "name": "user_group_ids",
                        "in": "query",
                        "description": "'user_group_ids' field",
                        "required": false,
                        "type": "array",
                        "allowEmptyValue": true,
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "default": ""
                    },
                    {
                        "name": "user_ids",
                        "in": "query",
                        "description": "'user_ids' field",
                        "required": false,
                        "type": "array",
                        "allowEmptyValue": true,
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "default": ""
                    },
                    {
                        "name": "urgent",
                        "in": "query",
                        "description": "'urgent' field",
                        "required": false,
                        "type": "boolean",
                        "allowEmptyValue": true
                    },
                    {
                        "name": "sort_by",
                        "in": "query",
                        "description": "'sort_by' field",
                        "required": false,
                        "type": "string",
                        "allowEmptyValue": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "List remittances",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/RemittanceResponse"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "schema": {
                            "properties": {
                                "message": {
                                    "description": "List remittances",
                                    "type": "string",
                                    "example": "Please make sure that request parameters is correct"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "remittances"
                ],
                "summary": "Create a remittance",
                "description": "Returns a created remittance response based on the given filters",
                "operationId": "postRemittance",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "Create a remittance",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/RemittanceResponse"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "schema": {
                            "properties": {
                                "message": {
                                    "description": "Create a remittance",
                                    "type": "string",
                                    "example": "Please make sure that request parameters is correct"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/remittances/{id}": {
            "get": {
                "tags": [
                    "remittances"
                ],
                "summary": "Retrieve a remittance",
                "description": "Returns certain remittance based on the given filters",
                "operationId": "getRemittance",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "'id' field",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "description": "Including 'sender_clinic', 'patient', 'sender_user', 'sender_signer', 'approver', 'receiver_clinic', 'receiver_user', 'user_group', 'wanted_receiver_user', 'receiver_creation_signer', 'receiver_signer', 'files', 'sender_files', 'receiver_files', 'remittance_responses', 'remittance_emails', 'snail_mails', 'journal_entry', 'receiver_journal_entry', 'sender_journal_entry'.",
                        "required": false,
                        "type": "array",
                        "allowEmptyValue": true,
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "default": ""
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "Retrieve a remittance",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/RemittanceResponse"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "schema": {
                            "properties": {
                                "message": {
                                    "description": "Retrieve a remittance",
                                    "type": "string",
                                    "example": "Please make sure that request parameters is correct"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "remittances"
                ],
                "summary": "Edit a remittance",
                "description": "Returns edited remittance based on the given filters",
                "operationId": "patchRemittance",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "'id' field",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "Edit a remittance",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/RemittanceResponse"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "schema": {
                            "properties": {
                                "message": {
                                    "description": "Edit a remittance",
                                    "type": "string",
                                    "example": "Please make sure that request parameters is correct"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/resources": {
            "get": {
                "tags": [
                    "resources"
                ],
                "summary": "List resources",
                "description": "Returns a list of resources based on the given filters",
                "operationId": "getResources",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "description": "Including 'clinic', 'booking_attendees', 'clinics'.",
                        "required": false,
                        "type": "array",
                        "allowEmptyValue": true,
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "default": ""
                    },
                    {
                        "name": "clinic_id",
                        "in": "query",
                        "description": "'clinic_id' field",
                        "required": false,
                        "type": "string",
                        "allowEmptyValue": true,
                        "default": ""
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "List resources",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/ResourceResponse"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "schema": {
                            "properties": {
                                "message": {
                                    "description": "List resources",
                                    "type": "string",
                                    "example": "Please make sure that request parameters is correct"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "resources"
                ],
                "summary": "Create a resource",
                "description": "Returns created resource based on the given filters",
                "operationId": "postResource",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Body of request (obligatory)",
                        "required": true,
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "Create a resource",
                                    "properties": {
                                        "attributes": {
                                            "description": "Create a resource",
                                            "properties": {
                                                "name": {
                                                    "description": "Create a resource",
                                                    "type": "string",
                                                    "example": "Test name"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "Create a resource",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/ResourceResponse"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "schema": {
                            "properties": {
                                "message": {
                                    "description": "Create a resource",
                                    "type": "string",
                                    "example": "Please make sure that request parameters is correct"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/resources/{id}": {
            "get": {
                "tags": [
                    "resources"
                ],
                "summary": "Retrieve a resource",
                "description": "Returns certain resource based on the given filters",
                "operationId": "getResource",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "'id' field",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "description": "Including 'clinic', 'booking_attendees', 'clinics'.",
                        "required": false,
                        "type": "array",
                        "allowEmptyValue": true,
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "default": ""
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "Retrieve a resource",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/ResourceResponse"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "schema": {
                            "properties": {
                                "message": {
                                    "description": "Retrieve a resource",
                                    "type": "string",
                                    "example": "Please make sure that request parameters is correct"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "resources"
                ],
                "summary": "Edit a resource",
                "description": "Returns edited resource based on the given filters",
                "operationId": "patchResource",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "'id' field",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Body of request (obligatory)",
                        "required": true,
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "Edit a resource",
                                    "properties": {
                                        "attributes": {
                                            "description": "Edit a resource",
                                            "properties": {
                                                "name": {
                                                    "description": "Edit a resource",
                                                    "type": "string",
                                                    "example": "Test name"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "Edit a resource",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/ResourceResponse"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "schema": {
                            "properties": {
                                "message": {
                                    "description": "Edit a resource",
                                    "type": "string",
                                    "example": "Please make sure that request parameters is correct"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/rooms": {
            "get": {
                "tags": [
                    "rooms"
                ],
                "summary": "List rooms",
                "description": "Returns a list of rooms based on the given filters",
                "operationId": "getRooms",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "description": "Including 'clinic', 'booking_attendees', 'default_users', 'clinics'.",
                        "required": false,
                        "type": "array",
                        "allowEmptyValue": true,
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "default": ""
                    },
                    {
                        "name": "clinic_id",
                        "in": "query",
                        "description": "'clinic_id' field",
                        "required": false,
                        "type": "number",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "sort_by",
                        "in": "query",
                        "description": "'sort_by' field",
                        "required": false,
                        "type": "string",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "'per_page' field",
                        "required": false,
                        "type": "number",
                        "allowEmptyValue": true,
                        "default": ""
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "List rooms",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/RoomsResponse"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "schema": {
                            "properties": {
                                "message": {
                                    "description": "List rooms",
                                    "type": "string",
                                    "example": "Please make sure that request parameters is correct"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "rooms"
                ],
                "summary": "Create a room",
                "description": "Returns created room based on the given filters",
                "operationId": "postRoom",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Body of request (obligatory)",
                        "required": true,
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "Create a room",
                                    "properties": {
                                        "attributes": {
                                            "description": "Create a room",
                                            "properties": {
                                                "name": {
                                                    "description": "Create a room",
                                                    "type": "string",
                                                    "example": "Test name"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "Create a room",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/RoomsResponse"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "schema": {
                            "properties": {
                                "message": {
                                    "description": "Create a room",
                                    "type": "string",
                                    "example": "Please make sure that request parameters is correct"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/rooms/{id}": {
            "get": {
                "tags": [
                    "rooms"
                ],
                "summary": "Retrieve a room",
                "description": "Returns certain room based on the given filters",
                "operationId": "getRoom",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "'id' field",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "description": "Including 'clinic', 'booking_attendees', 'default_users', 'clinics'.",
                        "required": false,
                        "type": "array",
                        "allowEmptyValue": true,
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "default": ""
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "Retrieve a room",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/RoomsResponse"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "schema": {
                            "properties": {
                                "message": {
                                    "description": "Retrieve a room",
                                    "type": "string",
                                    "example": "Please make sure that request parameters is correct"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "rooms"
                ],
                "summary": "Edit a room",
                "description": "Returns edited room based on the given filters",
                "operationId": "patchRoom",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "'id' field",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Body of request (obligatory)",
                        "required": true,
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "Edit a room",
                                    "properties": {
                                        "attributes": {
                                            "description": "Edit a room",
                                            "properties": {
                                                "name": {
                                                    "description": "Edit a room",
                                                    "type": "string",
                                                    "example": "Test name"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "Edit a room",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/RoomsResponse"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "schema": {
                            "properties": {
                                "message": {
                                    "description": "Edit a room",
                                    "type": "string",
                                    "example": "Please make sure that request parameters is correct"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/search-users": {
            "get": {
                "tags": [
                    "search-users"
                ],
                "summary": "List search-users",
                "description": "Returns list of search users based on the given filters",
                "operationId": "getSearchUsers",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "description": "Including 'default_user_image', 'role'.",
                        "required": false,
                        "type": "array",
                        "allowEmptyValue": true,
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "default": ""
                    },
                    {
                        "name": "personal_id",
                        "in": "query",
                        "description": "'personal_id' field",
                        "required": false,
                        "type": "number",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "query",
                        "in": "query",
                        "description": "Example: 'query=mike%20smith' (in case, when you are trying to find First and Last name of user). Filters results by users' first name, last name and title.",
                        "required": false,
                        "type": "array",
                        "allowEmptyValue": true,
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "default": ""
                    },
                    {
                        "name": "active",
                        "in": "query",
                        "description": "'active' field",
                        "required": false,
                        "type": "boolean",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "sort_by",
                        "in": "query",
                        "description": "'sort_by' field",
                        "required": false,
                        "type": "string",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "'page' field",
                        "required": false,
                        "type": "string",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "'per_page' field",
                        "required": false,
                        "type": "string",
                        "allowEmptyValue": true,
                        "default": ""
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "List search-users",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/SearchUserResponse"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "schema": {
                            "properties": {
                                "message": {
                                    "description": "List search-users",
                                    "type": "string",
                                    "example": "Please make sure that request parameters is correct"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/search-users/{id}": {
            "get": {
                "tags": [
                    "search-users"
                ],
                "summary": "Retrieve a search-user",
                "description": "Returns certain search user based on the given filters",
                "operationId": "getSearchUser",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "'id' field",
                        "required": true,
                        "type": "number"
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "description": "Including 'default_user_image', 'role'.",
                        "required": false,
                        "type": "array",
                        "allowEmptyValue": true,
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "default": ""
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "Retrieve a search-user",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/SearchUserResponse"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "schema": {
                            "properties": {
                                "message": {
                                    "description": "Retrieve a search-user",
                                    "type": "string",
                                    "example": "Please make sure that request parameters is correct"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/sent-remittances": {
            "get": {
                "tags": [
                    "sent-remittances"
                ],
                "summary": "List sent-remittances",
                "description": "Returns a list of sent remittances based on the given filters",
                "operationId": "getSentRemittances",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "description": "Including 'sender_clinic', 'patient', 'sender_user', 'sender_signer', 'approver', 'receiver_clinic', 'receiver_user', 'user_group', 'wanted_receiver_user', 'receiver_creation_signer', 'receiver_signer', 'files', 'sender_files', 'receiver_files', 'remittance_responses', 'remittance_emails', 'snail_mails', 'journal_entry', 'receiver_journal_entry', 'sender_journal_entry'.",
                        "required": false,
                        "type": "array",
                        "allowEmptyValue": true,
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "default": ""
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "List sent-remittances",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/SentRemittanceResponse"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "schema": {
                            "properties": {
                                "message": {
                                    "description": "List sent-remittances",
                                    "type": "string",
                                    "example": "Please make sure that request parameters is correct"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/sent-remittances/{id}": {
            "get": {
                "tags": [
                    "sent-remittances"
                ],
                "summary": "Retrieve a sent-remittance",
                "description": "Returns certain sent remittance based on the given filters",
                "operationId": "getSentRemittance",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "'id' field",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "description": "Including 'sender_clinic', 'patient', 'sender_user', 'sender_signer', 'approver', 'receiver_clinic', 'receiver_user', 'user_group', 'wanted_receiver_user', 'receiver_creation_signer', 'receiver_signer', 'files', 'sender_files', 'receiver_files', 'remittance_responses', 'remittance_emails', 'snail_mails', 'journal_entry', 'receiver_journal_entry', 'sender_journal_entry'.",
                        "required": false,
                        "type": "array",
                        "allowEmptyValue": true,
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "default": ""
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "Retrieve a sent-remittance",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/SentRemittanceResponse"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "schema": {
                            "properties": {
                                "message": {
                                    "description": "Retrieve a sent-remittance",
                                    "type": "string",
                                    "example": "Please make sure that request parameters is correct"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/sms": {
            "get": {
                "tags": [
                    "sms"
                ],
                "summary": "List sms",
                "description": "Returns a list of sms based on the given filters",
                "operationId": "getSms",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "description": "Including 'supplier_article', 'organization', 'order_line', 'patient', 'booking_attendee'.",
                        "required": false,
                        "type": "array",
                        "allowEmptyValue": true,
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "default": ""
                    },
                    {
                        "name": "patient_id",
                        "in": "query",
                        "description": "'patient_id' field",
                        "required": false,
                        "type": "number",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "clinic_ids",
                        "in": "query",
                        "description": "'clinic_ids' field",
                        "required": false,
                        "type": "array",
                        "allowEmptyValue": true,
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "default": ""
                    },
                    {
                        "name": "from_date",
                        "in": "query",
                        "description": "'from_date' field",
                        "required": false,
                        "type": "string",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "to_date",
                        "in": "query",
                        "description": "'to_date' field",
                        "required": false,
                        "type": "string",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "'status' field",
                        "required": false,
                        "type": "string",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "sort_by",
                        "in": "query",
                        "description": "'sort_by' field",
                        "required": false,
                        "type": "string",
                        "allowEmptyValue": true,
                        "default": ""
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "List sms",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/SmsResponse"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "schema": {
                            "properties": {
                                "message": {
                                    "description": "List sms",
                                    "type": "string",
                                    "example": "Please make sure that request parameters is correct"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "sms"
                ],
                "summary": "Create a sms",
                "description": "Returns created sms based on the given filters",
                "operationId": "postSms",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Body of request (obligatory)",
                        "required": true,
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "Create a sms",
                                    "properties": {
                                        "attributes": {
                                            "description": "Create a sms",
                                            "properties": {
                                                "from": {
                                                    "description": "Create a sms",
                                                    "type": "string",
                                                    "example": "2024-09-06"
                                                },
                                                "to": {
                                                    "description": "Create a sms",
                                                    "type": "string",
                                                    "example": "2024-09-12"
                                                },
                                                "body": {
                                                    "description": "Create a sms",
                                                    "type": "string"
                                                },
                                                "sent_at": {
                                                    "description": "Create a sms",
                                                    "type": "string",
                                                    "example": "2024-09-03T19:25:31+02:00"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "Create a sms",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/SmsResponse"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "schema": {
                            "properties": {
                                "message": {
                                    "description": "Create a sms",
                                    "type": "string",
                                    "example": "Please make sure that request parameters is correct"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/sms-invitation/{id}/schedule": {
            "post": {
                "tags": [
                    "sms-invitations"
                ],
                "summary": "Schedule a sms-invitation",
                "description": "Returns scheduled sms invitation",
                "operationId": "postSmsInvitationSchedule",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "'id' token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "Schedule a sms-invitation",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/SmsInvitationResponse"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "schema": {
                            "properties": {
                                "message": {
                                    "description": "Schedule a sms-invitation",
                                    "type": "string",
                                    "example": "Please make sure that request parameters is correct"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/sms-invitations/{id}/unschedule": {
            "post": {
                "tags": [
                    "sms-invitations"
                ],
                "summary": "Unschedule a sms-invitation",
                "description": "Returns unscheduled sms invitation",
                "operationId": "postSmsInvitationUnschedule",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "'id' token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "Unschedule a sms-invitation",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/SmsInvitationResponse"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "schema": {
                            "properties": {
                                "message": {
                                    "description": "Unschedule a sms-invitation",
                                    "type": "string",
                                    "example": "Please make sure that request parameters is correct"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/sms-reminders/{id}/schedule": {
            "post": {
                "tags": [
                    "sms-reminders"
                ],
                "summary": "Schedule a sms-reminder",
                "description": "Returns scheduled sms reminder based on the given filters",
                "operationId": "postSmsReminderSchedule",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "'id' field",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "Schedule a sms-reminder",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/SmsReminderResponse"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "schema": {
                            "properties": {
                                "message": {
                                    "description": "Schedule a sms-reminder",
                                    "type": "string",
                                    "example": "Please make sure that request parameters is correct"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/sms-reminders/{id}/unschedule": {
            "post": {
                "tags": [
                    "sms-reminders"
                ],
                "summary": "Unchedule a sms-reminder",
                "description": "Returns unscheduled sms reminder based on the given filters",
                "operationId": "postSmsReminderUnschedule",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "'id' field",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "Unchedule a sms-reminder",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/SmsReminderResponse"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "schema": {
                            "properties": {
                                "message": {
                                    "description": "Unchedule a sms-reminder",
                                    "type": "string",
                                    "example": "Please make sure that request parameters is correct"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/sms/{id}": {
            "get": {
                "tags": [
                    "sms"
                ],
                "summary": "Retrieve a sms",
                "description": "Returns certain sms based on the given filters",
                "operationId": "getSmsRetrieve",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "'id' token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "description": "Including 'supplier_article', 'organization', 'order_line', 'patient', 'booking_attendee'.",
                        "required": false,
                        "type": "array",
                        "allowEmptyValue": true,
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "default": ""
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "Retrieve a sms",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/SmsResponse"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "schema": {
                            "properties": {
                                "message": {
                                    "description": "Retrieve a sms",
                                    "type": "string",
                                    "example": "Please make sure that request parameters is correct"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "sms"
                ],
                "summary": "Edit a sms",
                "description": "Returns edited sms based on the given filters",
                "operationId": "patchSms",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "'id' token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "deleted",
                        "in": "query",
                        "description": "'deleted' token",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Body of request (not obligatory)",
                        "required": true,
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "Edit a sms",
                                    "properties": {
                                        "attributes": {
                                            "description": "Edit a sms",
                                            "properties": {
                                                "from": {
                                                    "description": "Edit a sms",
                                                    "type": "string",
                                                    "example": "2024-09-06"
                                                },
                                                "to": {
                                                    "description": "Edit a sms",
                                                    "type": "string",
                                                    "example": "2024-09-12"
                                                },
                                                "body": {
                                                    "description": "Edit a sms",
                                                    "type": "string"
                                                },
                                                "sent_at": {
                                                    "description": "Edit a sms",
                                                    "type": "string",
                                                    "example": "2024-09-03T19:25:31+02:00"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "Edit a sms",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/SmsResponse"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "schema": {
                            "properties": {
                                "message": {
                                    "description": "Edit a sms",
                                    "type": "string",
                                    "example": "Please make sure that request parameters is correct"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/sms/{id}/schedule": {
            "post": {
                "tags": [
                    "sms"
                ],
                "summary": "Schedule a sms",
                "description": "Returns scheduled sms",
                "operationId": "postSmsSchedule",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "'id' field",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "Schedule a sms",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/SmsResponse"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "schema": {
                            "properties": {
                                "message": {
                                    "description": "Schedule a sms",
                                    "type": "string",
                                    "example": "Please make sure that request parameters is correct"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/sms/{id}/unschedule": {
            "post": {
                "tags": [
                    "sms"
                ],
                "summary": "Unschedule a sms",
                "description": "Returns unscheduled sms",
                "operationId": "postSmsUnschedule",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "'id' field",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "Unschedule a sms",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/SmsResponse"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "schema": {
                            "properties": {
                                "message": {
                                    "description": "Unschedule a sms",
                                    "type": "string",
                                    "example": "Please make sure that request parameters is correct"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/snail-mails": {
            "get": {
                "tags": [
                    "snail-mails"
                ],
                "summary": "List snail-mails",
                "description": "Returns a list of snail mails based on the given filters",
                "operationId": "getSnailEmails",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "description": "Including 'supplier_article', 'organization', 'order_line', 'patient', 'booking_attendee', 'invoice', 'patient_invoice', 'patient_invoice_with_reminder', 'animal_owner_invoice', 'remittance', 'country'.",
                        "required": false,
                        "type": "array",
                        "allowEmptyValue": true,
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "default": ""
                    },
                    {
                        "name": "booking_attendee_id",
                        "in": "query",
                        "description": "'booking_attendee_id' field",
                        "required": false,
                        "type": "number",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "invoice_id",
                        "in": "query",
                        "description": "'invoice_id' field",
                        "required": false,
                        "type": "number",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "remittance_id",
                        "in": "query",
                        "description": "'remittance_id' field",
                        "required": false,
                        "type": "number",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "patient_id",
                        "in": "query",
                        "description": "'patient_id' field",
                        "required": false,
                        "type": "number",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "clinic_ids",
                        "in": "query",
                        "description": "'clinic_ids' field",
                        "required": false,
                        "type": "array",
                        "allowEmptyValue": true,
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "default": ""
                    },
                    {
                        "name": "from_date",
                        "in": "query",
                        "description": "'from_date' start field (format: '2024-08-01')",
                        "required": false,
                        "type": "string",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "to_date",
                        "in": "query",
                        "description": "'to_date' field (format: '2024-08-02')",
                        "required": false,
                        "type": "string",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "'status' field",
                        "required": false,
                        "type": "string",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "sort_by",
                        "in": "query",
                        "description": "'sort_by' field",
                        "required": false,
                        "type": "string",
                        "allowEmptyValue": true,
                        "default": ""
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "List snail-mails",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/SnailMailResponse"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "schema": {
                            "properties": {
                                "message": {
                                    "description": "List snail-mails",
                                    "type": "string",
                                    "example": "Please make sure that request parameters is correct"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "snail-mails"
                ],
                "summary": "Create a snail-mail",
                "description": "Returns created snail mail based on the given filters",
                "operationId": "postSnailEmail",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Body of request (obligatory)",
                        "required": true,
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "Create a snail-mail",
                                    "properties": {
                                        "attributes": {
                                            "description": "Create a snail-mail",
                                            "properties": {
                                                "body": {
                                                    "description": "Create a snail-mail",
                                                    "type": "string"
                                                },
                                                "country_id": {
                                                    "description": "Create a snail-mail",
                                                    "type": "number",
                                                    "example": 1
                                                },
                                                "first_name": {
                                                    "description": "Create a snail-mail",
                                                    "type": "string",
                                                    "example": "John"
                                                },
                                                "last_name": {
                                                    "description": "Create a snail-mail",
                                                    "type": "string",
                                                    "example": "Otto"
                                                },
                                                "address_1": {
                                                    "description": "Create a snail-mail",
                                                    "type": "string"
                                                },
                                                "city": {
                                                    "description": "Create a snail-mail",
                                                    "type": "string",
                                                    "example": "Lviv"
                                                },
                                                "postal_code": {
                                                    "description": "Create a snail-mail",
                                                    "type": "string"
                                                },
                                                "output_date": {
                                                    "description": "Create a snail-mail",
                                                    "type": "string",
                                                    "example": "2024-05-22"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    {
                        "name": "supplier_article_id",
                        "in": "query",
                        "description": "'supplier_article_id' field",
                        "required": false,
                        "type": "number",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "booking_attendee_id",
                        "in": "query",
                        "description": "'booking_attendee_id' field",
                        "required": false,
                        "type": "number",
                        "allowEmptyValue": true,
                        "default": ""
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "Create a snail-mail",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/SnailMailResponse"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "schema": {
                            "properties": {
                                "message": {
                                    "description": "Create a snail-mail",
                                    "type": "string",
                                    "example": "Please make sure that request parameters is correct"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/snail-mails/{id}": {
            "get": {
                "tags": [
                    "snail-mails"
                ],
                "summary": "Retrieve a snail-mail",
                "description": "Returns certain snail mail based on the given filters",
                "operationId": "getSnailEmail",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Bearer token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "description": "Including 'supplier_article', 'organization', 'order_line', 'patient', 'booking_attendee', 'invoice', 'patient_invoice', 'patient_invoice_with_reminder', 'animal_owner_invoice', 'remittance', 'country'.",
                        "required": false,
                        "type": "array",
                        "allowEmptyValue": true,
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "default": ""
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "Retrieve a snail-mail",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/SnailMailResponse"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "schema": {
                            "properties": {
                                "message": {
                                    "description": "Retrieve a snail-mail",
                                    "type": "string",
                                    "example": "Please make sure that request parameters is correct"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "snail-mails"
                ],
                "summary": "Edit a snail-mail",
                "description": "Returns edited snail mail based on the given filters",
                "operationId": "patchSnailEmail",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Bearer token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Body of request (obligatory)",
                        "required": true,
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "Edit a snail-mail",
                                    "properties": {
                                        "attributes": {
                                            "description": "Edit a snail-mail",
                                            "properties": {
                                                "body": {
                                                    "description": "Edit a snail-mail",
                                                    "type": "string"
                                                },
                                                "country_id": {
                                                    "description": "Edit a snail-mail",
                                                    "type": "number",
                                                    "example": 1
                                                },
                                                "first_name": {
                                                    "description": "Edit a snail-mail",
                                                    "type": "string",
                                                    "example": "John"
                                                },
                                                "last_name": {
                                                    "description": "Edit a snail-mail",
                                                    "type": "string",
                                                    "example": "Otto"
                                                },
                                                "address_1": {
                                                    "description": "Edit a snail-mail",
                                                    "type": "string"
                                                },
                                                "city": {
                                                    "description": "Edit a snail-mail",
                                                    "type": "string",
                                                    "example": "Lviv"
                                                },
                                                "postal_code": {
                                                    "description": "Edit a snail-mail",
                                                    "type": "string"
                                                },
                                                "output_date": {
                                                    "description": "Edit a snail-mail",
                                                    "type": "string",
                                                    "example": "2024-05-22"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    {
                        "name": "supplier_article_id",
                        "in": "query",
                        "description": "'supplier_article_id' field",
                        "required": false,
                        "type": "number",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "deleted",
                        "in": "query",
                        "description": "'deleted' field",
                        "required": false,
                        "type": "boolean",
                        "allowEmptyValue": true,
                        "default": ""
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "Edit a snail-mail",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/SnailMailResponse"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "schema": {
                            "properties": {
                                "message": {
                                    "description": "Edit a snail-mail",
                                    "type": "string",
                                    "example": "Please make sure that request parameters is correct"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/snail-mails/{id}/schedule": {
            "post": {
                "tags": [
                    "snail-mails"
                ],
                "summary": "Schedule a snail-mail",
                "description": "Returns scheduled snail mail based on the given filters",
                "operationId": "postSnailEmailSchedule",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "'id' field",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "Schedule a snail-mail",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/SnailMailResponse"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "schema": {
                            "properties": {
                                "message": {
                                    "description": "Schedule a snail-mail",
                                    "type": "string",
                                    "example": "Please make sure that request parameters is correct"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/snail-mails/{id}/unschedule": {
            "post": {
                "tags": [
                    "snail-mails"
                ],
                "summary": "Unschedule a snail-mail",
                "description": "Returns unscheduled snail mail based on the given filters",
                "operationId": "postSnailEmailUnschedule",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "'id' field",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "Unschedule a snail-mail",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/SnailMailResponse"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "schema": {
                            "properties": {
                                "message": {
                                    "description": "Unschedule a snail-mail",
                                    "type": "string",
                                    "example": "Please make sure that request parameters is correct"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/stb-diseases": {
            "get": {
                "tags": [
                    "stb-diseases"
                ],
                "summary": "List stb-diseases",
                "description": "Returns a list of stb diseases based on the given filters",
                "operationId": "getStbDiseases",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "query",
                        "in": "query",
                        "description": "'query' field",
                        "required": false,
                        "type": "array",
                        "allowEmptyValue": true,
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "default": ""
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "List stb-diseases",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/StbDiseaseResponse"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "schema": {
                            "properties": {
                                "message": {
                                    "description": "List stb-diseases",
                                    "type": "string",
                                    "example": "Please make sure that request parameters is correct"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/suppliers": {
            "get": {
                "tags": [
                    "suppliers"
                ],
                "summary": "List suppliers",
                "description": "Returns a list of suppliers based on the given filters",
                "operationId": "getSuppliers",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "description": "Including 'supplier_articles', 'supplier_settings_for_organizations', 'tags'.",
                        "required": false,
                        "type": "array",
                        "allowEmptyValue": true,
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "default": ""
                    },
                    {
                        "name": "tag",
                        "in": "query",
                        "description": "'tag' field",
                        "required": false,
                        "type": "string",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "country_id",
                        "in": "query",
                        "description": "'country_id' field",
                        "required": false,
                        "type": "string",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "sort_by",
                        "in": "query",
                        "description": "'sort_by' field",
                        "required": false,
                        "type": "string",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "'sort_by' field",
                        "required": false,
                        "type": "number",
                        "allowEmptyValue": true,
                        "default": ""
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "List suppliers",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/SupplierResponse"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "schema": {
                            "properties": {
                                "message": {
                                    "description": "List suppliers",
                                    "type": "string",
                                    "example": "Please make sure that request parameters is correct"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/suppliers/{id}": {
            "get": {
                "tags": [
                    "suppliers"
                ],
                "summary": "Retrieve a supplier",
                "description": "Returns a certain supplier based on the given filters",
                "operationId": "getSupplier",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "'id' field",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "description": "Including 'supplier_articles', 'supplier_settings_for_organizations', 'tags'.",
                        "required": false,
                        "type": "array",
                        "allowEmptyValue": true,
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "default": ""
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "Retrieve a supplier",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/SupplierResponse"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "schema": {
                            "properties": {
                                "message": {
                                    "description": "Retrieve a supplier",
                                    "type": "string",
                                    "example": "Please make sure that request parameters is correct"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/surfaces": {
            "get": {
                "tags": [
                    "surfaces"
                ],
                "summary": "List surfaces",
                "description": "Returns a list of surfaces based on the given filters",
                "operationId": "getListSurfaces",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "List surfaces",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/SurfacesResponse"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "schema": {
                            "properties": {
                                "message": {
                                    "description": "List surfaces",
                                    "type": "string",
                                    "example": "Please make sure that request parameters is correct"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/surfaces/{id}": {
            "get": {
                "tags": [
                    "surfaces"
                ],
                "summary": "Retrieve a surface",
                "description": "Returns certain surface based on the given filters",
                "operationId": "getSurface",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "'id' field",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "Retrieve a surface",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/SurfacesResponse"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "schema": {
                            "properties": {
                                "message": {
                                    "description": "Retrieve a surface",
                                    "type": "string",
                                    "example": "Please make sure that request parameters is correct"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/tanden-checks": {
            "get": {
                "tags": [
                    "tanden-checks"
                ],
                "summary": "List tanden-checks",
                "description": "Returns a list of tanden checks based on the given filters",
                "operationId": "getTandenChecks",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "patient_id",
                        "in": "query",
                        "description": "'patient_id' field",
                        "required": false,
                        "type": "string",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "description": "Including 'insurance_contract', 'tanden_check_commentaries', 'currency'.",
                        "required": false,
                        "type": "array",
                        "allowEmptyValue": true,
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "default": ""
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "List tanden-checks",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/TandenCheckResponse"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "schema": {
                            "properties": {
                                "message": {
                                    "description": "List tanden-checks",
                                    "type": "string",
                                    "example": "Please make sure that request parameters is correct"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/tasks": {
            "get": {
                "tags": [
                    "tasks"
                ],
                "summary": "List tasks",
                "description": "Returns a list of tasks based on the given filters",
                "operationId": "getTasks",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "description": "Including 'responsible', creator', 'incident', 'patient', 'booking', 'comments', 'clinic'.",
                        "required": false,
                        "type": "array",
                        "allowEmptyValue": true,
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "default": ""
                    },
                    {
                        "name": "clinic_ids",
                        "in": "query",
                        "description": "'clinic_ids' field",
                        "required": false,
                        "type": "array",
                        "allowEmptyValue": true,
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "default": ""
                    },
                    {
                        "name": "user_ids",
                        "in": "query",
                        "description": "'user_ids' field",
                        "required": false,
                        "type": "array",
                        "allowEmptyValue": true,
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "default": ""
                    },
                    {
                        "name": "incident_id",
                        "in": "query",
                        "description": "'incident_id' field",
                        "required": false,
                        "type": "number",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "patient_id",
                        "in": "query",
                        "description": "'patient_id' field",
                        "required": false,
                        "type": "number",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "completed",
                        "in": "query",
                        "description": "'completed' field",
                        "required": false,
                        "type": "boolean",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "'status' field",
                        "required": false,
                        "type": "string",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "query",
                        "in": "query",
                        "description": "'query' field",
                        "required": false,
                        "type": "array",
                        "allowEmptyValue": true,
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "default": ""
                    },
                    {
                        "name": "sort_by",
                        "in": "query",
                        "description": "'sort_by' field",
                        "required": false,
                        "type": "string",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "'per_page' field",
                        "required": false,
                        "type": "number",
                        "allowEmptyValue": true,
                        "default": ""
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "List tasks",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/TaskResponse"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "schema": {
                            "properties": {
                                "message": {
                                    "description": "List tasks",
                                    "type": "string",
                                    "example": "Please make sure that request parameters is correct"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "tasks"
                ],
                "summary": "Create a task",
                "description": "Returns created task based on the given filters",
                "operationId": "postTask",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Body of request (not obligatory)",
                        "required": false,
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "Create a task",
                                    "properties": {
                                        "attributes": {
                                            "description": "Create a task",
                                            "properties": {
                                                "title": {
                                                    "description": "Create a task",
                                                    "type": "string",
                                                    "example": "Test title"
                                                },
                                                "details": {
                                                    "description": "Create a task",
                                                    "type": "string",
                                                    "example": "Test description"
                                                },
                                                "date": {
                                                    "description": "Create a task",
                                                    "type": "string",
                                                    "example": "2024-09-06"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "Create a task",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/TaskResponse"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "schema": {
                            "properties": {
                                "message": {
                                    "description": "Create a task",
                                    "type": "string",
                                    "example": "Please make sure that request parameters is correct"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/tasks/{id}": {
            "get": {
                "tags": [
                    "tasks"
                ],
                "summary": "Retrieve a task",
                "description": "Returns a certain task based on the given filters",
                "operationId": "getTask",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "'id' field",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "description": "Including 'responsible', creator', 'incident', 'patient', 'booking', 'comments', 'clinic'.",
                        "required": false,
                        "type": "array",
                        "allowEmptyValue": true,
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "default": ""
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "Retrieve a task",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/TaskResponse"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "schema": {
                            "properties": {
                                "message": {
                                    "description": "Retrieve a task",
                                    "type": "string",
                                    "example": "Please make sure that request parameters is correct"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "tasks"
                ],
                "summary": "Edit a task",
                "description": "Returns edited task based on the given filters",
                "operationId": "patchTask",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "'id' field",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Body of request (not obligatory)",
                        "required": false,
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "Edit a task",
                                    "properties": {
                                        "attributes": {
                                            "description": "Edit a task",
                                            "properties": {
                                                "title": {
                                                    "description": "Edit a task",
                                                    "type": "string",
                                                    "example": "Test title"
                                                },
                                                "details": {
                                                    "description": "Edit a task",
                                                    "type": "string",
                                                    "example": "Test description"
                                                },
                                                "date": {
                                                    "description": "Edit a task",
                                                    "type": "string",
                                                    "example": "2024-09-06"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "Edit a task",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/TaskResponse"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "schema": {
                            "properties": {
                                "message": {
                                    "description": "Edit a task",
                                    "type": "string",
                                    "example": "Please make sure that request parameters is correct"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/tenant-databases/current": {
            "get": {
                "tags": [
                    "tenant-databases"
                ],
                "summary": "Retrieve the current tenant database",
                "description": "Returns current tenant database based on the given filters",
                "operationId": "getCurrentTenantDatabase",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "description": "Including 'organization', 'clinics', 'allowed_ip_addresses'.",
                        "required": false,
                        "type": "array",
                        "allowEmptyValue": true,
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "default": ""
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "Retrieve the current tenant database",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/TenantDatabaseResponse"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "schema": {
                            "properties": {
                                "message": {
                                    "description": "Retrieve the current tenant database",
                                    "type": "string",
                                    "example": "Please make sure that request parameters is correct"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/three-d-images": {
            "get": {
                "tags": [
                    "three-d-images"
                ],
                "summary": "List three-d-images",
                "description": "Returns list of three-d-images based on the given filters",
                "operationId": "get3dImages",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "description": "Including 'patient', 'twain_data_source', 'device', 'file_type', 'remittances'.",
                        "required": false,
                        "type": "array",
                        "allowEmptyValue": true,
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "default": ""
                    },
                    {
                        "name": "sort_by",
                        "in": "query",
                        "description": "'sort_by' field",
                        "required": false,
                        "type": "string",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "'per_page' field",
                        "required": false,
                        "type": "number",
                        "allowEmptyValue": true,
                        "default": ""
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "List three-d-images",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/ThreeDImageResponse"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "schema": {
                            "properties": {
                                "message": {
                                    "description": "List three-d-images",
                                    "type": "string",
                                    "example": "Please make sure that request parameters is correct"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/three-d-images/{id}": {
            "get": {
                "tags": [
                    "three-d-images"
                ],
                "summary": "Retrieve a three-d-image",
                "description": "Returns certain three-d-image based on the given filters",
                "operationId": "get3dImage",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "'id' field",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "description": "Including 'patient', 'twain_data_source', 'device', 'file_type', 'remittances'.",
                        "required": false,
                        "type": "array",
                        "allowEmptyValue": true,
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "default": ""
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "Retrieve a three-d-image",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/ThreeDImageResponse"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "schema": {
                            "properties": {
                                "message": {
                                    "description": "Retrieve a three-d-image",
                                    "type": "string",
                                    "example": "Please make sure that request parameters is correct"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "three-d-images"
                ],
                "summary": "Edit a three-d-image",
                "description": "Returns edited three-d-image based on the given filters",
                "operationId": "patch3dImage",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "'id' field",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Body of request (not obligatory)",
                        "required": true,
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "Edit a three-d-image",
                                    "properties": {
                                        "attributes": {
                                            "description": "Edit a three-d-image",
                                            "properties": {
                                                "name": {
                                                    "description": "Edit a three-d-image",
                                                    "type": "string"
                                                },
                                                "treatment_date": {
                                                    "description": "Edit a three-d-image",
                                                    "type": "string"
                                                },
                                                "device_id": {
                                                    "description": "Edit a three-d-image",
                                                    "type": "number"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "Edit a three-d-image",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/ThreeDImageResponse"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "schema": {
                            "properties": {
                                "message": {
                                    "description": "Edit a three-d-image",
                                    "type": "string",
                                    "example": "Please make sure that request parameters is correct"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/tickets": {
            "get": {
                "tags": [
                    "tickets"
                ],
                "summary": "List tickets",
                "description": "Returns a list of tickets based on the given filters",
                "operationId": "getTickets",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "description": "Including 'user', 'responsible', 'message_rooms'.",
                        "required": false,
                        "type": "array",
                        "allowEmptyValue": true,
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "default": ""
                    },
                    {
                        "name": "user_ids",
                        "in": "query",
                        "description": "'user_ids' field",
                        "required": false,
                        "type": "array",
                        "allowEmptyValue": true,
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "default": ""
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "'status' field",
                        "required": false,
                        "type": "string",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "sort_by",
                        "in": "query",
                        "description": "'sort_by' field",
                        "required": false,
                        "type": "string",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "'per_page' field",
                        "required": false,
                        "type": "string",
                        "allowEmptyValue": true,
                        "default": ""
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "List tickets",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/TicketResponse"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "schema": {
                            "properties": {
                                "message": {
                                    "description": "List tickets",
                                    "type": "string",
                                    "example": "Please make sure that request parameters is correct"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "tickets"
                ],
                "summary": "Create a ticket",
                "description": "Returns created ticket based on the given filters",
                "operationId": "postTicket",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Body of request (obligatory)",
                        "required": true,
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "Create a ticket",
                                    "properties": {
                                        "attributes": {
                                            "description": "Create a ticket",
                                            "properties": {
                                                "subject": {
                                                    "description": "Create a ticket",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    {
                        "name": "message_body",
                        "in": "query",
                        "description": "'message_body' field",
                        "required": false,
                        "type": "string",
                        "allowEmptyValue": true,
                        "default": ""
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "Create a ticket",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/TicketResponse"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "schema": {
                            "properties": {
                                "message": {
                                    "description": "Create a ticket",
                                    "type": "string",
                                    "example": "Please make sure that request parameters is correct"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/tickets/latest": {
            "get": {
                "tags": [
                    "tickets"
                ],
                "summary": "Get the latest ticket",
                "description": "Returns latest ticket based on the given filters",
                "operationId": "getLatestTicket",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "description": "Including 'user', 'responsible', 'message_rooms'.",
                        "required": false,
                        "type": "array",
                        "allowEmptyValue": true,
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "default": ""
                    },
                    {
                        "name": "from_date",
                        "in": "query",
                        "description": "'from_date' field",
                        "required": false,
                        "type": "string",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "to_date",
                        "in": "query",
                        "description": "'to_date' field",
                        "required": false,
                        "type": "string",
                        "allowEmptyValue": true,
                        "default": ""
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "Get the latest ticket",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/TicketResponse"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "schema": {
                            "properties": {
                                "message": {
                                    "description": "Get the latest ticket",
                                    "type": "string",
                                    "example": "Please make sure that request parameters is correct"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/tickets/{id}": {
            "get": {
                "tags": [
                    "tickets"
                ],
                "summary": "Retrieve a ticket",
                "description": "Returns certain ticket based on the given filters",
                "operationId": "getTicket",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "'id' field",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "description": "Including 'user', 'responsible', 'message_rooms'.",
                        "required": false,
                        "type": "array",
                        "allowEmptyValue": true,
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "default": ""
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "Retrieve a ticket",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/TicketResponse"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "schema": {
                            "properties": {
                                "message": {
                                    "description": "Retrieve a ticket",
                                    "type": "string",
                                    "example": "Please make sure that request parameters is correct"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "tickets"
                ],
                "summary": "Edit a ticket",
                "description": "Returns edited ticket based on the given filters",
                "operationId": "patchTicket",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "'id' field",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Body of request (obligatory)",
                        "required": true,
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "Edit a ticket",
                                    "properties": {
                                        "attributes": {
                                            "description": "Edit a ticket",
                                            "properties": {
                                                "subject": {
                                                    "description": "Edit a ticket",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "Edit a ticket",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/TicketResponse"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "schema": {
                            "properties": {
                                "message": {
                                    "description": "Edit a ticket",
                                    "type": "string",
                                    "example": "Please make sure that request parameters is correct"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/tooth-sides": {
            "get": {
                "tags": [
                    "tooth-sides"
                ],
                "summary": "List tooth-sides",
                "description": "Returns list of tooth sides based on the given filters",
                "operationId": "getToothSides",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "List tooth-sides",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/ToothSideResponse"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "schema": {
                            "properties": {
                                "message": {
                                    "description": "List tooth-sides",
                                    "type": "string",
                                    "example": "Please make sure that request parameters is correct"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/tooth-sides/{id}": {
            "get": {
                "tags": [
                    "tooth-sides"
                ],
                "summary": "Retrieve a tooth-side",
                "description": "Returns certain tooth side based on the given filters",
                "operationId": "getToothSide",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "'id' field",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "Retrieve a tooth-side",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/ToothSideResponse"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "schema": {
                            "properties": {
                                "message": {
                                    "description": "Retrieve a tooth-side",
                                    "type": "string",
                                    "example": "Please make sure that request parameters is correct"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/tooth-surface-snapshots": {
            "get": {
                "tags": [
                    "tooth-surface-snapshots"
                ],
                "summary": "List tooth-surface-snapshots",
                "description": "Returns a list of tooth surface snapshots based on the given filters",
                "operationId": "getToothSurfaceSnapshot",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "patient_id",
                        "in": "query",
                        "description": "'patient_id' field",
                        "required": false,
                        "type": "number",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "treatment_plan_id",
                        "in": "query",
                        "description": "'treatment_plan_id' field",
                        "required": false,
                        "type": "number",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "date",
                        "in": "query",
                        "description": "'date' field",
                        "required": false,
                        "type": "string",
                        "allowEmptyValue": true,
                        "default": ""
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "List tooth-surface-snapshots",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/ToothSurfaceSnapshotResponse"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "schema": {
                            "properties": {
                                "message": {
                                    "description": "List tooth-surface-snapshots",
                                    "type": "string",
                                    "example": "Please make sure that request parameters is correct"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/transactions": {
            "get": {
                "tags": [
                    "transactions"
                ],
                "summary": "List transactions",
                "description": "Returns a list of transactions based on the given filters",
                "operationId": "getTransactions",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "description": "Including 'verification', 'account', 'cost_center'.",
                        "required": false,
                        "type": "array",
                        "allowEmptyValue": true,
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "default": ""
                    },
                    {
                        "name": "from_date",
                        "in": "query",
                        "description": "'from_date' field",
                        "required": true,
                        "type": "string",
                        "default": ""
                    },
                    {
                        "name": "to_date",
                        "in": "query",
                        "description": "'to_date' field",
                        "required": true,
                        "type": "string",
                        "default": ""
                    },
                    {
                        "name": "account_id",
                        "in": "query",
                        "description": "'account_id' field",
                        "required": false,
                        "type": "number",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "account_number",
                        "in": "query",
                        "description": "'account_number' field",
                        "required": false,
                        "type": "string",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "cost_center_ids",
                        "in": "query",
                        "description": "'cost_center_ids' field",
                        "required": false,
                        "type": "array",
                        "allowEmptyValue": true,
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "default": ""
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "List transactions",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/TransactionResponse"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "schema": {
                            "properties": {
                                "message": {
                                    "description": "List transactions",
                                    "type": "string",
                                    "example": "Please make sure that request parameters is correct"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "transactions"
                ],
                "summary": "Create a transaction",
                "description": "Returns created transaction based on the given filters",
                "operationId": "postTransaction",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Body of request (obligatory)",
                        "required": true,
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "Create a transaction",
                                    "properties": {
                                        "attributes": {
                                            "description": "Create a transaction",
                                            "properties": {
                                                "account_id": {
                                                    "description": "Create a transaction",
                                                    "type": "number"
                                                },
                                                "verification_id": {
                                                    "description": "Create a transaction",
                                                    "type": "number"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    {
                        "name": "cost_center_id",
                        "in": "query",
                        "description": "'cost_center_id' field",
                        "required": false,
                        "type": "number",
                        "allowEmptyValue": true,
                        "default": ""
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "Create a transaction",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/TransactionResponse"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "schema": {
                            "properties": {
                                "message": {
                                    "description": "Create a transaction",
                                    "type": "string",
                                    "example": "Please make sure that request parameters is correct"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/transactions/{id}": {
            "get": {
                "tags": [
                    "transactions"
                ],
                "summary": "Retrieve a transaction",
                "description": "Returns certain transaction based on the given filters",
                "operationId": "getTransaction",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "'id' field",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "description": "Including 'verification', 'account', 'cost_center'.",
                        "required": false,
                        "type": "array",
                        "allowEmptyValue": true,
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "default": ""
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "Retrieve a transaction",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/TransactionResponse"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "schema": {
                            "properties": {
                                "message": {
                                    "description": "Retrieve a transaction",
                                    "type": "string",
                                    "example": "Please make sure that request parameters is correct"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "transactions"
                ],
                "summary": "Edit a transaction",
                "description": "Returns edited transaction based on the given filters",
                "operationId": "patchTransaction",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "'id' field",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Body of request (obligatory)",
                        "required": true,
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "Edit a transaction",
                                    "properties": {
                                        "attributes": {
                                            "description": "Edit a transaction",
                                            "properties": {
                                                "account_id": {
                                                    "description": "Edit a transaction",
                                                    "type": "number"
                                                },
                                                "verification_id": {
                                                    "description": "Edit a transaction",
                                                    "type": "number"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "Edit a transaction",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/TransactionResponse"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "schema": {
                            "properties": {
                                "message": {
                                    "description": "Edit a transaction",
                                    "type": "string",
                                    "example": "Please make sure that request parameters is correct"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/translations": {
            "get": {
                "tags": [
                    "translations"
                ],
                "summary": "List translations",
                "description": "Returns a list of translations based on the given filters",
                "operationId": "getTranslations",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "description": "Including 'locale'.",
                        "required": false,
                        "type": "array",
                        "allowEmptyValue": true,
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "default": ""
                    },
                    {
                        "name": "locale",
                        "in": "query",
                        "description": "'locale' field",
                        "required": true,
                        "type": "string",
                        "default": ""
                    },
                    {
                        "name": "frontend",
                        "in": "query",
                        "description": "'frontend' field",
                        "required": true,
                        "type": "string",
                        "default": ""
                    },
                    {
                        "name": "route_name",
                        "in": "query",
                        "description": "'route_name' field",
                        "required": true,
                        "type": "string",
                        "default": ""
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "List translations",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/TranslationResponse"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "schema": {
                            "properties": {
                                "message": {
                                    "description": "List translations",
                                    "type": "string",
                                    "example": "Please make sure that request parameters is correct"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/treatment-plan-items": {
            "get": {
                "tags": [
                    "treatment-plan-items"
                ],
                "summary": "List treatment-plan-items",
                "description": "Returns a list of treatment plan items based on the given filters",
                "operationId": "getTreatmentPlanItems",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "description": "Including 'treatment_plan', 'treatment_plan_item_group', 'user', 'related_user', 'journal_diagnosis', 'free_card', 'treatment', 'price', 'county_council_price', 'vat_code', 'reimbursement_type', 'journal_entry', 'journal_validation', 'elements', 'claim_row'.",
                        "required": false,
                        "type": "array",
                        "allowEmptyValue": true,
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "default": ""
                    },
                    {
                        "name": "treatment_plan_id",
                        "in": "query",
                        "description": "'treatment_plan_id' field",
                        "required": false,
                        "type": "number",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "deleted",
                        "in": "query",
                        "description": "'deleted' field",
                        "required": false,
                        "type": "boolean",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "sort_by",
                        "in": "query",
                        "description": "'sort_by' field",
                        "required": false,
                        "type": "string",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "'per_page' field",
                        "required": false,
                        "type": "number",
                        "allowEmptyValue": true,
                        "default": ""
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "List treatment-plan-items",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/TreatmentPlanItemResponse"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "schema": {
                            "properties": {
                                "message": {
                                    "description": "List treatment-plan-items",
                                    "type": "string",
                                    "example": "Please make sure that request parameters is correct"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "treatment-plan-items"
                ],
                "summary": "Create a treatment-plan-item",
                "description": "Returns created treatment plan item based on the given filters",
                "operationId": "postTreatmentPlanItem",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Body of request (obligatory)",
                        "required": true,
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "Create a treatment-plan-item",
                                    "properties": {
                                        "attributes": {
                                            "description": "Create a treatment-plan-item",
                                            "properties": {
                                                "treatment_plan_id": {
                                                    "description": "Create a treatment-plan-item",
                                                    "type": "number",
                                                    "example": 33
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "Create a treatment-plan-item",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/TreatmentPlanItemResponse"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "schema": {
                            "properties": {
                                "message": {
                                    "description": "Create a treatment-plan-item",
                                    "type": "string",
                                    "example": "Please make sure that request parameters is correct"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/treatment-plan-items/{id}": {
            "get": {
                "tags": [
                    "treatment-plan-items"
                ],
                "summary": "Retrieve a treatment-plan-item",
                "description": "Returns certain treatment plan item based on the given filters",
                "operationId": "getTreatmentPlanItem",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "'id' field",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "description": "Including 'treatment_plan', 'treatment_plan_item_group', 'user', 'related_user', 'journal_diagnosis', 'free_card', 'treatment', 'price', 'county_council_price', 'vat_code', 'reimbursement_type', 'journal_entry', 'journal_validation', 'elements', 'claim_row'.",
                        "required": false,
                        "type": "array",
                        "allowEmptyValue": true,
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "default": ""
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "Retrieve a treatment-plan-item",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/TreatmentPlanItemResponse"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "schema": {
                            "properties": {
                                "message": {
                                    "description": "Retrieve a treatment-plan-item",
                                    "type": "string",
                                    "example": "Please make sure that request parameters is correct"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "treatment-plan-items"
                ],
                "summary": "Edit a treatment-plan-item",
                "description": "Returns edited treatment plan item based on the given filters",
                "operationId": "patchTreatmentPlanItem",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "'id' field",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Body of request (obligatory)",
                        "required": true,
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "Edit a treatment-plan-item",
                                    "properties": {
                                        "attributes": {
                                            "description": "Edit a treatment-plan-item",
                                            "properties": {
                                                "treatment_plan_id": {
                                                    "description": "Edit a treatment-plan-item",
                                                    "type": "number",
                                                    "example": 33
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "Edit a treatment-plan-item",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/TreatmentPlanItemResponse"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "schema": {
                            "properties": {
                                "message": {
                                    "description": "Edit a treatment-plan-item",
                                    "type": "string",
                                    "example": "Please make sure that request parameters is correct"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/treatment-plan-versions": {
            "get": {
                "tags": [
                    "treatment-plan-versions"
                ],
                "summary": "List treatment-plan-versions",
                "description": "Returns a list of treatment plan versions based on the given filters",
                "operationId": "getTreatmentPlanVersions",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "treatment_plan_id",
                        "in": "query",
                        "description": "'treatment_plan_id' field",
                        "required": false,
                        "type": "number",
                        "allowEmptyValue": true,
                        "default": ""
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "List treatment-plan-versions",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/TreatmentPlanVersionResponse"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "schema": {
                            "properties": {
                                "message": {
                                    "description": "List treatment-plan-versions",
                                    "type": "string",
                                    "example": "Please make sure that request parameters is correct"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/treatment-plans": {
            "get": {
                "tags": [
                    "treatment-plans"
                ],
                "summary": "List treatment-plans",
                "description": "Returns treatment plans based on the given filters",
                "operationId": "getTreatmentPlans",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "description": "Including additional data, like: 'patient', 'currency', 'signer', 'treatment_plan_item_groups', 'treatment_plan_items', 'reimbursement_rules', 'deductions', 'validate_claim'.",
                        "required": false,
                        "type": "array",
                        "allowEmptyValue": true,
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "default": ""
                    },
                    {
                        "name": "patient_id",
                        "in": "query",
                        "description": "'patient_id' field",
                        "required": false,
                        "type": "string",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "history_id",
                        "in": "query",
                        "description": "'history_id' field",
                        "required": false,
                        "type": "string",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "user_ids",
                        "in": "query",
                        "description": "'user_ids' field",
                        "required": false,
                        "type": "array",
                        "allowEmptyValue": true,
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "default": ""
                    },
                    {
                        "name": "deleted",
                        "in": "query",
                        "description": "'deleted' field",
                        "required": false,
                        "type": "boolean",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "'status' field",
                        "required": false,
                        "type": "string",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "query",
                        "in": "query",
                        "description": "'query' field, possible options: 'treatment_plans.id', 'treatment_plans.name', 'treatment_plans.terms', 'patients.first_name', 'patients.last_name', 'patients.social_insurance_number', 'patients.patient_number', 'patients.id'.",
                        "required": false,
                        "type": "array",
                        "allowEmptyValue": true,
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "default": ""
                    },
                    {
                        "name": "latest",
                        "in": "query",
                        "description": "'latest' field",
                        "required": false,
                        "type": "string",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "sort_by",
                        "in": "query",
                        "description": "'sort_by' field",
                        "required": false,
                        "type": "string",
                        "allowEmptyValue": true,
                        "default": ""
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "List treatment-plans",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/TreatmentPlansResponse"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "schema": {
                            "properties": {
                                "message": {
                                    "description": "List treatment-plans",
                                    "type": "string",
                                    "example": "Please make sure that request parameters is correct"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "treatment-plans"
                ],
                "summary": "Create a treatment-plan",
                "description": "Returns created treatment plan based on the given filters",
                "operationId": "postTreatmentPlan",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Body of request (obligatory)",
                        "required": true,
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "Create a treatment-plan",
                                    "properties": {
                                        "attributes": {
                                            "description": "Create a treatment-plan",
                                            "properties": {
                                                "patient_id": {
                                                    "description": "Create a treatment-plan",
                                                    "type": "string",
                                                    "example": "11"
                                                },
                                                "name": {
                                                    "description": "Create a treatment-plan",
                                                    "type": "string",
                                                    "example": "John"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    {
                        "name": "reimbursement_rules",
                        "in": "query",
                        "description": "'reimbursement_rules' field",
                        "required": false,
                        "type": "array",
                        "allowEmptyValue": true,
                        "items": {
                            "type": "string"
                        },
                        "default": ""
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "Create a treatment-plan",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/TreatmentPlansResponse"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "schema": {
                            "properties": {
                                "message": {
                                    "description": "Create a treatment-plan",
                                    "type": "string",
                                    "example": "Please make sure that request parameters is correct"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/treatment-plans/{id}": {
            "get": {
                "tags": [
                    "treatment-plans"
                ],
                "summary": "Retrieve a treatment-plan",
                "description": "Returns treatment plan based on the given filters",
                "operationId": "getTreatmentPlan",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "'id' field",
                        "required": false,
                        "type": "string",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "description": "Including additional data, like: 'patient', 'currency', 'signer', 'treatment_plan_item_groups', 'treatment_plan_items', 'reimbursement_rules', 'deductions', 'validate_claim'.",
                        "required": false,
                        "type": "array",
                        "allowEmptyValue": true,
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "default": ""
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "Retrieve a treatment-plan",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/TreatmentPlansResponse"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "schema": {
                            "properties": {
                                "message": {
                                    "description": "Retrieve a treatment-plan",
                                    "type": "string",
                                    "example": "Please make sure that request parameters is correct"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "treatment-plans"
                ],
                "summary": "Edit a treatment-plan",
                "description": "Returns edited treatment plan based on the given filters",
                "operationId": "patchTreatmentPlan",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "'id' field",
                        "required": false,
                        "type": "string",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Body of request (obligatory)",
                        "required": true,
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "Edit a treatment-plan",
                                    "properties": {
                                        "attributes": {
                                            "description": "Edit a treatment-plan",
                                            "properties": {
                                                "patient_id": {
                                                    "description": "Edit a treatment-plan",
                                                    "type": "string",
                                                    "example": "11"
                                                },
                                                "name": {
                                                    "description": "Edit a treatment-plan",
                                                    "type": "string",
                                                    "example": "John"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "Edit a treatment-plan",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/TreatmentPlansResponse"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "schema": {
                            "properties": {
                                "message": {
                                    "description": "Edit a treatment-plan",
                                    "type": "string",
                                    "example": "Please make sure that request parameters is correct"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/treatments": {
            "get": {
                "tags": [
                    "treatments"
                ],
                "summary": "List treatments",
                "description": "Returns a list of treatments based on the given filters",
                "operationId": "getTreatments",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "clinic_id",
                        "in": "query",
                        "description": "'clinic_id' field",
                        "required": false,
                        "type": "number",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "elements",
                        "in": "query",
                        "description": "'elements' field",
                        "required": false,
                        "type": "array",
                        "allowEmptyValue": true,
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "default": ""
                    },
                    {
                        "name": "sort_by",
                        "in": "query",
                        "description": "'sort_by' field",
                        "required": false,
                        "type": "string",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "'per_page' field",
                        "required": false,
                        "type": "number",
                        "allowEmptyValue": true,
                        "default": ""
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "List treatments",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/TreatmentResponse"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "schema": {
                            "properties": {
                                "message": {
                                    "description": "List treatments",
                                    "type": "string",
                                    "example": "Please make sure that request parameters is correct"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "treatments"
                ],
                "summary": "Create a treatment",
                "description": "Returns created treatment based on the given filters",
                "operationId": "postTreatment",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Body of request (obligatory)",
                        "required": true,
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "Create a treatment",
                                    "properties": {
                                        "attributes": {
                                            "description": "Create a treatment",
                                            "properties": {
                                                "text": {
                                                    "description": "Create a treatment",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "Create a treatment",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/TreatmentResponse"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "schema": {
                            "properties": {
                                "message": {
                                    "description": "Create a treatment",
                                    "type": "string",
                                    "example": "Please make sure that request parameters is correct"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/treatments/{id}": {
            "get": {
                "tags": [
                    "treatments"
                ],
                "summary": "Retrieve a treatment",
                "description": "Returns certain treatment based on the given filters",
                "operationId": "getTreatment",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "'id' field",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "Retrieve a treatment",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/TreatmentResponse"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "schema": {
                            "properties": {
                                "message": {
                                    "description": "Retrieve a treatment",
                                    "type": "string",
                                    "example": "Please make sure that request parameters is correct"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "treatments"
                ],
                "summary": "Edit a treatment",
                "description": "Returns edited treatment based on the given filters",
                "operationId": "patchTreatment",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "'id' field",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Body of request (obligatory)",
                        "required": true,
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "Edit a treatment",
                                    "properties": {
                                        "attributes": {
                                            "description": "Edit a treatment",
                                            "properties": {
                                                "text": {
                                                    "description": "Edit a treatment",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "Edit a treatment",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/TreatmentResponse"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "schema": {
                            "properties": {
                                "message": {
                                    "description": "Edit a treatment",
                                    "type": "string",
                                    "example": "Please make sure that request parameters is correct"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/unassigned-received-remittance-report-rows": {
            "get": {
                "tags": [
                    "unassigned-received-remittance-report-rows"
                ],
                "summary": "List unassigned-received-remittance-report-rows",
                "description": "Returns a list of unassigned received remittance report rows based on the given filters",
                "operationId": "getUnassignedReceivedRemittanceReportRows",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "clinic_id",
                        "in": "query",
                        "description": "'clinic_id' field",
                        "required": false,
                        "type": "number",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "user_group_id",
                        "in": "query",
                        "description": "'user_group_id' field",
                        "required": false,
                        "type": "number",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "sort_by",
                        "in": "query",
                        "description": "'sort_by' field",
                        "required": false,
                        "type": "number",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "'per_page' field",
                        "required": false,
                        "type": "number",
                        "allowEmptyValue": true,
                        "default": ""
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "List unassigned-received-remittance-report-rows",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/UnassignedReceivedRemittanceReportRowResponse"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "schema": {
                            "properties": {
                                "message": {
                                    "description": "List unassigned-received-remittance-report-rows",
                                    "type": "string",
                                    "example": "Please make sure that request parameters is correct"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/unbookkept-claim-payment-report-rows": {
            "get": {
                "tags": [
                    "unbookkept-claim-payment-report-rows"
                ],
                "summary": "List unbookkept-claim-payment-report-rows",
                "description": "Returns a list of unbookkept claim payment report rows based on the given filters",
                "operationId": "getUnbookkeptClaimPaymentReportRow",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "clinic_id",
                        "in": "query",
                        "description": "'clinic_id' field",
                        "required": false,
                        "type": "number",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "'per_page' field",
                        "required": false,
                        "type": "number",
                        "allowEmptyValue": true,
                        "default": ""
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "List unbookkept-claim-payment-report-rows",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/UnbookkeptClaimPaymentReportRowResponse"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "schema": {
                            "properties": {
                                "message": {
                                    "description": "List unbookkept-claim-payment-report-rows",
                                    "type": "string",
                                    "example": "Please make sure that request parameters is correct"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/unbookkept-claim-report-rows": {
            "get": {
                "tags": [
                    "unbookkept-claim-report-rows"
                ],
                "summary": "List unbookkept-claim-report-rows",
                "description": "Returns a list of unbookkept claim report rows based on the given filters",
                "operationId": "getUnbookkeptClaimReportRow",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "clinic_id",
                        "in": "query",
                        "description": "'clinic_id' field",
                        "required": false,
                        "type": "number",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "'per_page' field",
                        "required": false,
                        "type": "number",
                        "allowEmptyValue": true,
                        "default": ""
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "List unbookkept-claim-report-rows",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/UnbookkeptClaimReportRowResponse"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "schema": {
                            "properties": {
                                "message": {
                                    "description": "List unbookkept-claim-report-rows",
                                    "type": "string",
                                    "example": "Please make sure that request parameters is correct"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/unbookkept-patient-invoice-report-rows": {
            "get": {
                "tags": [
                    "unbookkept-patient-invoice-report-rows"
                ],
                "summary": "List unbookkept-patient-invoice-report-rows",
                "description": "Returns a list of unbookkept patient invoice report rows based on the given filters",
                "operationId": "getUnbookkeptPatientInvoiceReportRow",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "clinic_id",
                        "in": "query",
                        "description": "'clinic_id' field",
                        "required": false,
                        "type": "number",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "'per_page' field",
                        "required": false,
                        "type": "number",
                        "allowEmptyValue": true,
                        "default": ""
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "List unbookkept-patient-invoice-report-rows",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/UnbookkeptPatientInvoiceReportRowResponse"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "schema": {
                            "properties": {
                                "message": {
                                    "description": "List unbookkept-patient-invoice-report-rows",
                                    "type": "string",
                                    "example": "Please make sure that request parameters is correct"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/unclaimed-journal-entry-report-rows": {
            "get": {
                "tags": [
                    "unclaimed-journal-entry-report-rows"
                ],
                "summary": "List unclaimed-journal-entry-report-rows",
                "description": "Returns a list unclaimed journal entry report rows based on the given filters",
                "operationId": "getUnclaimedJournalEntryReportRows",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "clinic_id",
                        "in": "query",
                        "description": "'clinic_id' field",
                        "required": false,
                        "type": "number",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "user_ids",
                        "in": "query",
                        "description": "'user_ids' field",
                        "required": false,
                        "type": "array",
                        "allowEmptyValue": true,
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "default": ""
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "'per_page' field",
                        "required": false,
                        "type": "number",
                        "allowEmptyValue": true,
                        "default": ""
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "List unclaimed-journal-entry-report-rows",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/UnclaimedJournalEntryReportRowResponse"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "schema": {
                            "properties": {
                                "message": {
                                    "description": "List unclaimed-journal-entry-report-rows",
                                    "type": "string",
                                    "example": "Please make sure that request parameters is correct"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/uninvoiced-journal-entry-report-rows": {
            "get": {
                "tags": [
                    "uninvoiced-journal-entry-report-rows"
                ],
                "summary": "List uninvoiced-journal-entry-report-rows",
                "description": "Returns a list of uninvoiced journal entry report rows based on the given filters",
                "operationId": "getUninvoicedJournalEntryReportRows",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "clinic_id",
                        "in": "query",
                        "description": "'clinic_id' field",
                        "required": false,
                        "type": "number",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "user_ids",
                        "in": "query",
                        "description": "'user_ids' field",
                        "required": false,
                        "type": "array",
                        "allowEmptyValue": true,
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "default": ""
                    },
                    {
                        "name": "start_date",
                        "in": "query",
                        "description": "'start_date' field",
                        "required": false,
                        "type": "string",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "end_date",
                        "in": "query",
                        "description": "'end_date' field",
                        "required": false,
                        "type": "string",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "'per_page' field",
                        "required": false,
                        "type": "number",
                        "allowEmptyValue": true,
                        "default": ""
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "List uninvoiced-journal-entry-report-rows",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/JournalEntryReportRowResponse"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "schema": {
                            "properties": {
                                "message": {
                                    "description": "List uninvoiced-journal-entry-report-rows",
                                    "type": "string",
                                    "example": "Please make sure that request parameters is correct"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/unread-dental-lab-order-report-rows": {
            "get": {
                "tags": [
                    "unread-dental-lab-order-report-rows"
                ],
                "summary": "List unread-dental-lab-order-report-rows",
                "description": "Returns a list of unread dental lab order report rows based on the given filters",
                "operationId": "getUnreadDentalLabOrderReportRow",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "clinic_id",
                        "in": "query",
                        "description": "'clinic_id' field",
                        "required": false,
                        "type": "number",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "sort_by",
                        "in": "query",
                        "description": "'sort_by' field",
                        "required": false,
                        "type": "number",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "'per_page' field",
                        "required": false,
                        "type": "number",
                        "allowEmptyValue": true,
                        "default": ""
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "List unread-dental-lab-order-report-rows",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/UnreadDentalLabOrderReportRowResponse"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "schema": {
                            "properties": {
                                "message": {
                                    "description": "List unread-dental-lab-order-report-rows",
                                    "type": "string",
                                    "example": "Please make sure that request parameters is correct"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/unread-received-remittance-report-rows": {
            "get": {
                "tags": [
                    "unread-received-remittance-report-rows"
                ],
                "summary": "List unread-received-remittance-report-rows",
                "description": "Returns a list of unread received remittance report rows based on the given filters",
                "operationId": "getUnreadReceivedRemittanceReportRows",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "clinic_id",
                        "in": "query",
                        "description": "'clinic_id' field",
                        "required": false,
                        "type": "number",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "user_group_id",
                        "in": "query",
                        "description": "'user_group_id' field",
                        "required": false,
                        "type": "number",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "sort_by",
                        "in": "query",
                        "description": "'sort_by' field",
                        "required": false,
                        "type": "string",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "'per_page' field",
                        "required": false,
                        "type": "number",
                        "allowEmptyValue": true,
                        "default": ""
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "List unread-received-remittance-report-rows",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/UnreadReceivedRemittanceReportRowResponse"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "schema": {
                            "properties": {
                                "message": {
                                    "description": "List unread-received-remittance-report-rows",
                                    "type": "string",
                                    "example": "Please make sure that request parameters is correct"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/unread-sent-remittance-report-rows": {
            "get": {
                "tags": [
                    "unread-sent-remittance-report-rows"
                ],
                "summary": "List unread-sent-remittance-report-rows",
                "description": "Returns a list of unread sent remittance report rows based on the given filters",
                "operationId": "getUnreadSentRemittanceReportRow",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "clinic_id",
                        "in": "query",
                        "description": "'clinic_id' field",
                        "required": false,
                        "type": "number",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "user_group_id",
                        "in": "query",
                        "description": "'user_group_id' field",
                        "required": false,
                        "type": "number",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "sort_by",
                        "in": "query",
                        "description": "'sort_by' field",
                        "required": false,
                        "type": "number",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "'per_page' field",
                        "required": false,
                        "type": "number",
                        "allowEmptyValue": true,
                        "default": ""
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "List unread-sent-remittance-report-rows",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/UnreadSentRemittanceReportRowResponse"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "schema": {
                            "properties": {
                                "message": {
                                    "description": "List unread-sent-remittance-report-rows",
                                    "type": "string",
                                    "example": "Please make sure that request parameters is correct"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/unsigned-journal-entry-report-rows": {
            "get": {
                "tags": [
                    "unsigned-journal-entry-report-rows"
                ],
                "summary": "List unsigned-journal-entry-report-rows",
                "description": "Returns a list of unsigned journal entry report rows based on the given filters",
                "operationId": "getUnsignedJournalEntryReportRow",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "clinic_id",
                        "in": "query",
                        "description": "'clinic_id' field",
                        "required": false,
                        "type": "number",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "user_ids",
                        "in": "query",
                        "description": "'user_ids' field",
                        "required": false,
                        "type": "array",
                        "allowEmptyValue": true,
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "default": ""
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "'per_page' field",
                        "required": false,
                        "type": "number",
                        "allowEmptyValue": true,
                        "default": ""
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "List unsigned-journal-entry-report-rows",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/UnsignedJournalEntryReportRowResponse"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "schema": {
                            "properties": {
                                "message": {
                                    "description": "List unsigned-journal-entry-report-rows",
                                    "type": "string",
                                    "example": "Please make sure that request parameters is correct"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/user-at-clinics": {
            "get": {
                "tags": [
                    "user-at-clinics"
                ],
                "summary": "List user-at-clinics",
                "description": "Returns list of users at clinics based on the given filters",
                "operationId": "getUserAtClinics",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "description": "Including 'clinic', 'user', 'user_group', 'default_locale', 'default_journal_pharmacy', 'default_room', 'default_booking_type', 'default_reimbursement_type', 'default_calendar_view', 'default_prescription_fee_price', 'default_failed_to_appear_price', 'default_late_cancellation_price', 'default_state_price_list', 'organizations_authorized_for_invoicing', 'default_organization', 'user_procedure_at_clinics', 'default_user_procedure_at_clinic', 'permission_policies', 'unwanted_notification_types', 'dashboard_reports', 'selected_clinics', 'selected_users', 'selected_rooms', 'selected_resources', 'hidden_weekdays', 'credentials', 'gui_items'.",
                        "required": false,
                        "type": "array",
                        "allowEmptyValue": true,
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "default": ""
                    },
                    {
                        "name": "clinic_id",
                        "in": "query",
                        "description": "'clinic_id' field",
                        "required": false,
                        "type": "string",
                        "allowEmptyValue": true
                    },
                    {
                        "name": "has_access",
                        "in": "query",
                        "description": "'has_access' field",
                        "required": false,
                        "type": "boolean",
                        "allowEmptyValue": true
                    },
                    {
                        "name": "user_id",
                        "in": "query",
                        "description": "'user_id' field",
                        "required": false,
                        "type": "string",
                        "allowEmptyValue": true
                    },
                    {
                        "name": "query",
                        "in": "query",
                        "description": "'query' field",
                        "required": false,
                        "type": "array",
                        "allowEmptyValue": true,
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv"
                    },
                    {
                        "name": "sort_by",
                        "in": "query",
                        "description": "'sort_by' field",
                        "required": false,
                        "type": "string",
                        "allowEmptyValue": true
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "'per_page' field",
                        "required": false,
                        "type": "string",
                        "allowEmptyValue": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "List user-at-clinics",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/UserAtClinicsResponse"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "schema": {
                            "properties": {
                                "message": {
                                    "description": "List user-at-clinics",
                                    "type": "string",
                                    "example": "Please make sure that request parameters is correct"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "user-at-clinics"
                ],
                "summary": "Create a user-at-clinic",
                "description": "Returns created user at clinics based on the given filters",
                "operationId": "postUserAtClinics",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Body of request (obligatory)",
                        "required": false,
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "Create a user-at-clinic",
                                    "properties": {
                                        "attributes": {
                                            "description": "Create a user-at-clinic",
                                            "properties": {
                                                "clinic_id": {
                                                    "description": "Create a user-at-clinic",
                                                    "type": "integer",
                                                    "example": 5771
                                                },
                                                "user_id": {
                                                    "description": "Create a user-at-clinic",
                                                    "type": "integer",
                                                    "example": 11223
                                                },
                                                "organizations_authorized_for_invoicing": {
                                                    "description": "Create a user-at-clinic",
                                                    "type": "string"
                                                },
                                                "default_organization_id": {
                                                    "description": "Create a user-at-clinic",
                                                    "type": "integer",
                                                    "example": 3331
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    {
                        "name": "unwanted_notification_types",
                        "in": "query",
                        "description": "'unwanted_notification_types' field",
                        "required": false,
                        "type": "array",
                        "allowEmptyValue": true,
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv"
                    },
                    {
                        "name": "selected_clinics",
                        "in": "query",
                        "description": "'selected_clinics' field",
                        "required": false,
                        "type": "array",
                        "allowEmptyValue": true,
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv"
                    },
                    {
                        "name": "selected_users",
                        "in": "query",
                        "description": "'selected_users' field",
                        "required": false,
                        "type": "array",
                        "allowEmptyValue": true,
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv"
                    },
                    {
                        "name": "selected_rooms",
                        "in": "query",
                        "description": "'selected_rooms' field",
                        "required": false,
                        "type": "array",
                        "allowEmptyValue": true,
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv"
                    },
                    {
                        "name": "selected_resources",
                        "in": "query",
                        "description": "'selected_resources' field",
                        "required": false,
                        "type": "array",
                        "allowEmptyValue": true,
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv"
                    },
                    {
                        "name": "display_weekends",
                        "in": "query",
                        "description": "'display_weekends' field",
                        "required": false,
                        "type": "boolean",
                        "allowEmptyValue": true
                    },
                    {
                        "name": "hidden_weekdays",
                        "in": "query",
                        "description": "'hidden_weekdays' field",
                        "required": false,
                        "type": "boolean",
                        "allowEmptyValue": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "Create a user-at-clinic",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/UserAtClinicsResponse"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "schema": {
                            "properties": {
                                "message": {
                                    "description": "Create a user-at-clinic",
                                    "type": "string",
                                    "example": "Please make sure that request parameters is correct"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/user-at-clinics/current": {
            "get": {
                "tags": [
                    "user-at-clinics"
                ],
                "summary": "Retrieve the current user-at-clinic",
                "description": "Returns a the current user at clinics based on the given filters",
                "operationId": "getCurrentUserAtClinic",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "description": "Including 'clinic', 'user', 'user_group', 'default_locale', 'default_journal_pharmacy', 'default_room', 'default_booking_type', 'default_reimbursement_type', 'default_calendar_view', 'default_prescription_fee_price', 'default_failed_to_appear_price', 'default_late_cancellation_price', 'default_state_price_list', 'organizations_authorized_for_invoicing', 'default_organization', 'user_procedure_at_clinics', 'default_user_procedure_at_clinic', 'permission_policies', 'unwanted_notification_types', 'dashboard_reports', 'selected_clinics', 'selected_users', 'selected_rooms', 'selected_resources', 'hidden_weekdays', 'credentials', 'gui_items'.",
                        "required": false,
                        "type": "array",
                        "allowEmptyValue": true,
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "default": ""
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "Retrieve the current user-at-clinic",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/UserAtClinicsResponse"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "schema": {
                            "properties": {
                                "message": {
                                    "description": "Retrieve the current user-at-clinic",
                                    "type": "string",
                                    "example": "Please make sure that request parameters is correct"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/user-at-clinics/{id}": {
            "get": {
                "tags": [
                    "user-at-clinics"
                ],
                "summary": "Retrieve a user-at-clinic",
                "description": "Returns certain user at clinics based on the given filters",
                "operationId": "getUserAtClinic",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "'id' field",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "description": "Including 'clinic', 'user', 'user_group', 'default_locale', 'default_journal_pharmacy', 'default_room', 'default_booking_type', 'default_reimbursement_type', 'default_calendar_view', 'default_prescription_fee_price', 'default_failed_to_appear_price', 'default_late_cancellation_price', 'default_state_price_list', 'organizations_authorized_for_invoicing', 'default_organization', 'user_procedure_at_clinics', 'default_user_procedure_at_clinic', 'permission_policies', 'unwanted_notification_types', 'dashboard_reports', 'selected_clinics', 'selected_users', 'selected_rooms', 'selected_resources', 'hidden_weekdays', 'credentials', 'gui_items'.",
                        "required": false,
                        "type": "array",
                        "allowEmptyValue": true,
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "default": ""
                    },
                    {
                        "name": "clinic_id",
                        "in": "query",
                        "description": "'clinic_id' field",
                        "required": false,
                        "type": "string",
                        "allowEmptyValue": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "Retrieve a user-at-clinic",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/UserAtClinicsResponse"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "schema": {
                            "properties": {
                                "message": {
                                    "description": "Retrieve a user-at-clinic",
                                    "type": "string",
                                    "example": "Please make sure that request parameters is correct"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "user-at-clinics"
                ],
                "summary": "Edit a user-at-clinic",
                "description": "Returns edited user at clinics based on the given filters",
                "operationId": "patchUserAtClinic",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "'id' field",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Body of request (obligatory)",
                        "required": false,
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "Edit a user-at-clinic",
                                    "properties": {
                                        "attributes": {
                                            "description": "Edit a user-at-clinic",
                                            "properties": {
                                                "clinic_id": {
                                                    "description": "Edit a user-at-clinic",
                                                    "type": "integer",
                                                    "example": 5771
                                                },
                                                "user_id": {
                                                    "description": "Edit a user-at-clinic",
                                                    "type": "integer",
                                                    "example": 11223
                                                },
                                                "organizations_authorized_for_invoicing": {
                                                    "description": "Edit a user-at-clinic",
                                                    "type": "string"
                                                },
                                                "default_organization_id": {
                                                    "description": "Edit a user-at-clinic",
                                                    "type": "integer",
                                                    "example": 3331
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    {
                        "name": "clinic_id",
                        "in": "query",
                        "description": "'clinic_id' field",
                        "required": false,
                        "type": "string",
                        "allowEmptyValue": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "Edit a user-at-clinic",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/UserAtClinicsResponse"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "schema": {
                            "properties": {
                                "message": {
                                    "description": "Edit a user-at-clinic",
                                    "type": "string",
                                    "example": "Please make sure that request parameters is correct"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/users": {
            "get": {
                "tags": [
                    "users"
                ],
                "summary": "List users",
                "description": "Returns a list of users based on the given filters",
                "operationId": "getUsers",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "description": "Including 'role', 'eprescription_role', 'specialities', 'educations', 'languages', 'clinics', 'last_selected_clinic', 'clinics_where_all_user', 'preferences', 'user_at_clinics', 'change_logs', 'user_images', 'default_user_image', 'signed_received_remittances', 'signed_sent_remittances', 'received_remittances', 'sent_remittances', 'message_sender', 'notifications', 'tasks', 'two_factor_authentication_setup', 'email_addresses', 'default_email_address'.",
                        "required": false,
                        "type": "array",
                        "allowEmptyValue": true,
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "default": ""
                    },
                    {
                        "name": "clinic_id",
                        "in": "query",
                        "description": "'clinic_id' field",
                        "required": false,
                        "type": "string",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "accepts_referral",
                        "in": "query",
                        "description": "'accepts_referral' field",
                        "required": false,
                        "type": "boolean",
                        "allowEmptyValue": true,
                        "default": ""
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "List users",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/UserResponse"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "schema": {
                            "properties": {
                                "message": {
                                    "description": "List users",
                                    "type": "string",
                                    "example": "Please make sure that request parameters is correct"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "users"
                ],
                "summary": "Create a user",
                "description": "Returns created user based on the given filters",
                "operationId": "postUser",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Body of request (obligatory)",
                        "required": true,
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "Create a user",
                                    "properties": {
                                        "attributes": {
                                            "description": "Create a user",
                                            "properties": {
                                                "first_name": {
                                                    "description": "Create a user",
                                                    "type": "string",
                                                    "example": "John"
                                                },
                                                "last_name": {
                                                    "description": "Create a user",
                                                    "type": "string",
                                                    "example": "Otto"
                                                },
                                                "role_id": {
                                                    "description": "Create a user",
                                                    "type": "number",
                                                    "example": 23
                                                },
                                                "social_security_number": {
                                                    "description": "Create a user",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    {
                        "name": "country_id",
                        "in": "query",
                        "description": "'country_id' field",
                        "required": false,
                        "type": "number",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "eprescription_role_id",
                        "in": "query",
                        "description": "'eprescription_role_id' field",
                        "required": false,
                        "type": "number",
                        "allowEmptyValue": true,
                        "default": ""
                    },
                    {
                        "name": "specialities",
                        "in": "query",
                        "description": "'specialities' field.",
                        "required": false,
                        "type": "array",
                        "allowEmptyValue": true,
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "default": ""
                    },
                    {
                        "name": "languages",
                        "in": "query",
                        "description": "'languages' field.",
                        "required": false,
                        "type": "array",
                        "allowEmptyValue": true,
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "default": ""
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "Create a user",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/UserResponse"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "schema": {
                            "properties": {
                                "message": {
                                    "description": "Create a user",
                                    "type": "string",
                                    "example": "Please make sure that request parameters is correct"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/users/current": {
            "get": {
                "tags": [
                    "users"
                ],
                "summary": "Retrieve the current user",
                "description": "Retrieve the current user based on the given filters",
                "operationId": "getUserCurrent",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "description": "Including 'role', 'eprescription_role', 'specialities', 'educations', 'languages', 'clinics', 'last_selected_clinic', 'clinics_where_all_user', 'preferences', 'user_at_clinics', 'change_logs', 'user_images', 'default_user_image', 'signed_received_remittances', 'signed_sent_remittances', 'received_remittances', 'sent_remittances', 'message_sender', 'notifications', 'tasks', 'two_factor_authentication_setup', 'email_addresses', 'default_email_address'.",
                        "required": false,
                        "type": "array",
                        "allowEmptyValue": true,
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "default": ""
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "Retrieve the current user",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/UserResponse"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "schema": {
                            "properties": {
                                "message": {
                                    "description": "Retrieve the current user",
                                    "type": "string",
                                    "example": "Please make sure that request parameters is correct"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/users/{id}": {
            "get": {
                "tags": [
                    "users"
                ],
                "summary": "Retrieve a user",
                "description": "Returns certain user based on the given filters",
                "operationId": "getUser",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "'id' field",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "description": "Including 'role', 'eprescription_role', 'specialities', 'educations', 'languages', 'clinics', 'last_selected_clinic', 'clinics_where_all_user', 'preferences', 'user_at_clinics', 'change_logs', 'user_images', 'default_user_image', 'signed_received_remittances', 'signed_sent_remittances', 'received_remittances', 'sent_remittances', 'message_sender', 'notifications', 'tasks', 'two_factor_authentication_setup', 'email_addresses', 'default_email_address'.",
                        "required": false,
                        "type": "array",
                        "allowEmptyValue": true,
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "default": ""
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "Retrieve a user",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/UserResponse"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "schema": {
                            "properties": {
                                "message": {
                                    "description": "Retrieve a user",
                                    "type": "string",
                                    "example": "Please make sure that request parameters is correct"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "users"
                ],
                "summary": "Edit a user",
                "description": "Returns edited user based on the given filters",
                "operationId": "patchUser",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "'id' field",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Body of request (obligatory)",
                        "required": true,
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "Edit a user",
                                    "properties": {
                                        "attributes": {
                                            "description": "Edit a user",
                                            "properties": {
                                                "first_name": {
                                                    "description": "Edit a user",
                                                    "type": "string",
                                                    "example": "John"
                                                },
                                                "last_name": {
                                                    "description": "Edit a user",
                                                    "type": "string",
                                                    "example": "Otto"
                                                },
                                                "role_id": {
                                                    "description": "Edit a user",
                                                    "type": "number",
                                                    "example": 23
                                                },
                                                "social_security_number": {
                                                    "description": "Edit a user",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "Edit a user",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/UserResponse"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "schema": {
                            "properties": {
                                "message": {
                                    "description": "Edit a user",
                                    "type": "string",
                                    "example": "Please make sure that request parameters is correct"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/vat-codes": {
            "get": {
                "tags": [
                    "vat-codes"
                ],
                "summary": "List vat-codes",
                "description": "Returns a list of vat codes based on the given filters",
                "operationId": "getVatCodes",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "description": "Including 'country'.",
                        "required": false,
                        "type": "array",
                        "allowEmptyValue": true,
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "default": ""
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "List vat-codes",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/VatCodeWebhookRequest"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "schema": {
                            "properties": {
                                "message": {
                                    "description": "List vat-codes",
                                    "type": "string",
                                    "example": "Please make sure that request parameters is correct"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/webhooks:booking": {
            "post": {
                "tags": [
                    "webhooks"
                ],
                "summary": "Webhook for booking",
                "description": "Booking request be send to webhook endpoint",
                "operationId": "WebhookBookings",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "Webhook booking",
                                    "type": "object",
                                    "$ref": "#/definitions/BookingWebhookRequest"
                                },
                                "included": {
                                    "description": "Webhook booking",
                                    "properties": {
                                        "clinic": {
                                            "description": "Webhook booking",
                                            "type": "object",
                                            "$ref": "#/definitions/ClinicWebhookRequest"
                                        },
                                        "user": {
                                            "description": "Webhook booking",
                                            "type": "object",
                                            "$ref": "#/definitions/UserWebhookRequest"
                                        },
                                        "booking_attendees": {
                                            "description": "Webhook booking",
                                            "type": "object",
                                            "$ref": "#/definitions/BookingAttendeeWebhookRequest"
                                        },
                                        "patient": {
                                            "description": "Webhook booking",
                                            "type": "object",
                                            "$ref": "#/definitions/PatientWebhookRequest"
                                        },
                                        "booking_type": {
                                            "description": "Webhook booking",
                                            "type": "object",
                                            "$ref": "#/definitions/BookingTypeWebhookRequest"
                                        },
                                        "procedure": {
                                            "description": "Webhook booking",
                                            "type": "object",
                                            "$ref": "#/definitions/ProcedureWebhookRequest"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "type": "object"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/webhooks:journal-entry": {
            "post": {
                "tags": [
                    "webhooks"
                ],
                "summary": "Webhook for journal-entry",
                "description": "Journal entry request be send to webhook endpoint",
                "operationId": "WebhookJournalEntry",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "Webhook journal-entry",
                                    "type": "object",
                                    "$ref": "#/definitions/JournalEntryWebhookRequest"
                                },
                                "included": {
                                    "description": "Webhook journal-entry",
                                    "properties": {
                                        "clinic": {
                                            "description": "Webhook journal-entry",
                                            "type": "object",
                                            "$ref": "#/definitions/ClinicWebhookRequest"
                                        },
                                        "user": {
                                            "description": "Webhook journal-entry",
                                            "type": "object",
                                            "$ref": "#/definitions/UserWebhookRequest"
                                        },
                                        "currency": {
                                            "description": "Webhook journal-entry",
                                            "type": "object",
                                            "$ref": "#/definitions/CurrencyWebhookRequest"
                                        },
                                        "patient": {
                                            "description": "Webhook journal-entry",
                                            "type": "object",
                                            "$ref": "#/definitions/PatientWebhookRequest"
                                        },
                                        "vat_code": {
                                            "description": "Webhook journal-entry",
                                            "type": "object",
                                            "$ref": "#/definitions/VatCodeWebhookRequest"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "type": "object"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/webhooks:patients": {
            "post": {
                "tags": [
                    "webhooks"
                ],
                "summary": "Webhook for patient",
                "description": "Patient request be send to webhook endpoint",
                "operationId": "WebhookPatients",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "Webhook patients",
                                    "type": "object",
                                    "$ref": "#/definitions/PatientWebhookRequest"
                                },
                                "included": {
                                    "description": "Webhook patients",
                                    "properties": {
                                        "clinic": {
                                            "description": "Webhook patients",
                                            "type": "object",
                                            "$ref": "#/definitions/ClinicWebhookRequest"
                                        },
                                        "user": {
                                            "description": "Webhook patients",
                                            "type": "object",
                                            "$ref": "#/definitions/UserWebhookRequest"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "type": "object"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/webhooks:task": {
            "post": {
                "tags": [
                    "webhooks"
                ],
                "summary": "Webhook for task",
                "description": "Task request be send to webhook endpoint",
                "operationId": "WebhookTask",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "Webhook task",
                                    "type": "object",
                                    "$ref": "#/definitions/TaskWebhookRequest"
                                },
                                "included": {
                                    "description": "Webhook task",
                                    "properties": {
                                        "clinic": {
                                            "description": "Webhook task",
                                            "type": "object",
                                            "$ref": "#/definitions/ClinicWebhookRequest"
                                        },
                                        "patient": {
                                            "description": "Webhook task",
                                            "type": "object",
                                            "$ref": "#/definitions/PatientWebhookRequest"
                                        },
                                        "responsible": {
                                            "description": "Webhook task",
                                            "type": "object",
                                            "$ref": "#/definitions/UserWebhookRequest"
                                        },
                                        "creator": {
                                            "description": "Webhook task",
                                            "type": "object",
                                            "$ref": "#/definitions/UserWebhookRequest"
                                        },
                                        "comments": {
                                            "description": "Webhook task",
                                            "type": "object",
                                            "$ref": "#/definitions/TaskCommentWebhookRequest"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "type": "object"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/webhooks:verification": {
            "post": {
                "tags": [
                    "webhooks"
                ],
                "summary": "Webhook for verification",
                "description": "Verification request be send to webhook endpoint",
                "operationId": "WebhookVerification",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "properties": {
                                "data": {
                                    "description": "Webhook verification",
                                    "type": "object",
                                    "$ref": "#/definitions/VerificationWebhookRequest"
                                },
                                "included": {
                                    "description": "Webhook verification",
                                    "properties": {
                                        "currency": {
                                            "description": "Webhook verification",
                                            "type": "object",
                                            "$ref": "#/definitions/CurrencyWebhookRequest"
                                        },
                                        "fiscal_year": {
                                            "description": "Webhook verification",
                                            "type": "object",
                                            "$ref": "#/definitions/FiscalYearWebhookRequest"
                                        },
                                        "verification_serie": {
                                            "description": "Webhook verification",
                                            "type": "object",
                                            "$ref": "#/definitions/VerificationSerieWebhookRequest"
                                        },
                                        "transactions": {
                                            "description": "Webhook verification",
                                            "type": "object",
                                            "$ref": "#/definitions/TransactionWebhookRequest"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "type": "object"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        }
    },
    "definitions": {
        "ActionNeededPatientReportRowResponse": {
            "properties": {
                "type": {
                    "type": "string",
                    "example": "action_needed_patient_report_row"
                },
                "id": {
                    "type": "string",
                    "example": "1"
                },
                "attributes": {
                    "properties": {
                        "count": {
                            "type": "number",
                            "example": 1
                        },
                        "patient_id": {
                            "type": "string",
                            "example": "11"
                        },
                        "patient_name": {
                            "type": "string",
                            "example": "John"
                        }
                    },
                    "type": "object"
                }
            },
            "type": "object"
        },
        "AnimalJournalEntryResponse": {
            "properties": {
                "type": {
                    "type": "string",
                    "example": "animal_journal_entry"
                },
                "id": {
                    "type": "string",
                    "example": "1"
                },
                "attributes": {
                    "properties": {
                        "entry_date": {
                            "type": "string",
                            "example": "2028-10-22T00:00:00+02:00"
                        },
                        "entry_type": {
                            "type": "string"
                        },
                        "text": {
                            "type": "string"
                        },
                        "fee": {
                            "type": "number",
                            "example": 10
                        },
                        "discount_excluding_vat": {
                            "type": "number",
                            "example": 10
                        },
                        "signed_at": {
                            "type": "string",
                            "example": "2028-10-22T00:00:00+02:00"
                        },
                        "deleted": {
                            "type": "boolean",
                            "example": true
                        }
                    },
                    "type": "object"
                }
            },
            "type": "object"
        },
        "AnimalOwnerResponse": {
            "properties": {
                "type": {
                    "type": "string",
                    "example": "animal_owner"
                },
                "id": {
                    "type": "string",
                    "example": "1"
                },
                "attributes": {
                    "properties": {
                        "deleted": {
                            "type": "boolean",
                            "example": false
                        }
                    },
                    "type": "object"
                }
            },
            "type": "object"
        },
        "AnimalPrescriptionRowResponse": {
            "properties": {
                "type": {
                    "type": "string",
                    "example": "animal_prescription_row"
                },
                "id": {
                    "type": "string",
                    "example": "1"
                },
                "attributes": {
                    "properties": {
                        "animal_identification": {
                            "type": "string"
                        },
                        "animal_id_qualifier": {
                            "type": "string"
                        },
                        "animal_species": {
                            "type": "string"
                        },
                        "dosage_form": {
                            "type": "string"
                        },
                        "indication_for_prescription": {
                            "type": "string"
                        },
                        "license_id": {
                            "type": "string"
                        },
                        "package_content": {
                            "type": "string"
                        },
                        "pharmacy_id": {
                            "type": "string"
                        },
                        "quantity": {
                            "type": "number"
                        },
                        "quantity_unit": {
                            "type": "string"
                        },
                        "strength": {
                            "type": "string"
                        },
                        "supplementary_information": {
                            "type": "string"
                        },
                        "delegated": {
                            "type": "boolean"
                        },
                        "dispensing_repeat_number": {
                            "type": "number"
                        },
                        "dispensing_repeat_time_unit": {
                            "type": "string",
                            "example": "2024-06-28T12:14:26+02:00"
                        },
                        "dispensing_repeat_time_value": {
                            "type": "number",
                            "example": 10
                        },
                        "latest_requested_time_for_dispensing": {
                            "type": "string",
                            "example": "2024-06-28T12:14:26+02:00"
                        },
                        "npl_id": {
                            "type": "string"
                        },
                        "npl_pack_id": {
                            "type": "string"
                        },
                        "nvn": {
                            "type": "string"
                        },
                        "number_of_packages": {
                            "type": "number",
                            "example": 100
                        },
                        "prescription_item_id": {
                            "type": "string"
                        },
                        "unstructured_dosage_admin": {
                            "type": "string"
                        }
                    },
                    "type": "object"
                }
            },
            "type": "object"
        },
        "AnimalPrescriptionRowWaitingResponse": {
            "properties": {
                "type": {
                    "type": "string",
                    "example": "animal_prescription_row_waiting_time"
                },
                "id": {
                    "type": "string",
                    "example": "1"
                },
                "attributes": {
                    "properties": {
                        "number_of_days": {
                            "type": "number",
                            "example": 1
                        },
                        "type": {
                            "type": "string"
                        }
                    },
                    "type": "object"
                }
            },
            "type": "object"
        },
        "AnimalPrescriptionResponse": {
            "properties": {
                "type": {
                    "type": "string",
                    "example": "animal_prescription"
                },
                "id": {
                    "type": "string",
                    "example": "1"
                },
                "attributes": {
                    "properties": {
                        "accepted": {
                            "type": "boolean",
                            "example": true
                        },
                        "date": {
                            "type": "string",
                            "example": "2024-09-01T19:25:31+02:00"
                        },
                        "delivery_method": {
                            "type": "string"
                        },
                        "prescriber_cit": {
                            "type": "string"
                        },
                        "prescriber_code": {
                            "type": "string"
                        },
                        "prescriber_name": {
                            "type": "string"
                        },
                        "prescriber_number_or_name_of_house": {
                            "type": "string"
                        },
                        "prescriber_postal_code": {
                            "type": "string"
                        },
                        "prescriber_qualification_code": {
                            "type": "string"
                        },
                        "prescriber_telecommunication": {
                            "type": "string"
                        },
                        "prescribers_comment": {
                            "type": "string"
                        },
                        "subject_of_care_city": {
                            "type": "string"
                        },
                        "subject_of_care_family_name": {
                            "type": "string"
                        },
                        "subject_of_care_first_given_name": {
                            "type": "string"
                        },
                        "subject_of_care_id_scheme": {
                            "type": "string"
                        },
                        "subject_of_care_id_value": {
                            "type": "string"
                        },
                        "subject_of_care_postal_code": {
                            "type": "string"
                        },
                        "subject_of_care_street_name": {
                            "type": "string"
                        },
                        "subject_of_care_phone_number": {
                            "type": "string"
                        },
                        "test_indicator": {
                            "type": "string"
                        },
                        "callback_url": {
                            "type": "string"
                        },
                        "uuid": {
                            "type": "string"
                        },
                        "deleted": {
                            "type": "boolean",
                            "example": false
                        },
                        "delivery_location_city": {
                            "type": "string",
                            "example": "Stockholm"
                        },
                        "delivery_location_id": {
                            "type": "string"
                        },
                        "delivery_location_postal_code": {
                            "type": "string"
                        },
                        "delivery_location_street_name": {
                            "type": "string"
                        },
                        "delivery_location_telecommunication": {
                            "type": "string"
                        },
                        "include_prescription_fee": {
                            "type": "boolean",
                            "example": true
                        },
                        "prescription_fee_including_vat": {
                            "type": "number",
                            "example": 10
                        }
                    },
                    "type": "object"
                }
            },
            "type": "object"
        },
        "AnimalSpeciesResponse": {
            "properties": {
                "type": {
                    "type": "string",
                    "example": "animal_species"
                },
                "id": {
                    "type": "string",
                    "example": "1"
                },
                "attributes": {
                    "properties": {
                        "code": {
                            "type": "string",
                            "example": "052"
                        },
                        "name": {
                            "type": "string",
                            "example": "Hund"
                        },
                        "type": {
                            "type": "string",
                            "example": "pet"
                        }
                    },
                    "type": "object"
                }
            },
            "type": "object"
        },
        "AnimalResponse": {
            "properties": {
                "type": {
                    "type": "string",
                    "example": "animal"
                },
                "id": {
                    "type": "string",
                    "example": "1"
                },
                "attributes": {
                    "properties": {
                        "animal_identification": {
                            "type": "string",
                            "example": "Nytt test"
                        },
                        "animal_id_qualifier": {
                            "type": "string",
                            "example": "IND"
                        },
                        "deleted": {
                            "type": "boolean",
                            "example": false
                        }
                    },
                    "type": "object"
                }
            },
            "type": "object"
        },
        "AnonymousClaimPaymentResponse": {
            "properties": {
                "type": {
                    "type": "string",
                    "example": "anonymous_claim_payment"
                },
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "attributes": {
                    "properties": {
                        "deviating": {
                            "type": "boolean",
                            "example": true
                        },
                        "done": {
                            "type": "boolean",
                            "example": false
                        }
                    },
                    "type": "object"
                }
            },
            "type": "object"
        },
        "AnonymousClaimResponse": {
            "properties": {
                "type": {
                    "type": "string",
                    "example": "anonymous_claim"
                },
                "id": {
                    "type": "string",
                    "example": "1"
                },
                "attributes": {
                    "properties": {
                        "FK_validate_claim_status": {
                            "type": "string"
                        },
                        "FK_validate_claim_amount": {
                            "type": "number"
                        },
                        "FK_claim_id": {
                            "type": "string"
                        },
                        "FK_claim_amount": {
                            "type": "number"
                        },
                        "FK_claim_status": {
                            "type": "string"
                        },
                        "FK_submitted_amount": {
                            "type": "number"
                        },
                        "FK_reverse_claim_status": {
                            "type": "string"
                        },
                        "care_provider_org_number": {
                            "type": "string"
                        },
                        "government_organization_id": {
                            "type": "string"
                        },
                        "user_ssn": {
                            "type": "string"
                        },
                        "patient_ssn": {
                            "type": "string"
                        },
                        "patient_fin": {
                            "type": "string"
                        },
                        "dentist_ssn": {
                            "type": "string"
                        },
                        "treatment_date": {
                            "type": "string",
                            "example": "2024-08-31T00:00:00+02:00"
                        },
                        "eligible_from_date": {
                            "type": "string",
                            "example": "2024-08-31T00:00:00+02:00"
                        },
                        "high_cost_amount_before_treatments": {
                            "type": "number"
                        },
                        "late_sending_reason": {
                            "type": "string"
                        },
                        "atb_usage_atb_number": {
                            "type": "string"
                        },
                        "atb_usage_teeth_count": {
                            "type": "number"
                        },
                        "atb_usage_untreated_teeth_count": {
                            "type": "number"
                        },
                        "new_atb_start_date": {
                            "type": "string",
                            "example": "2024-08-31T00:00:00+02:00"
                        },
                        "new_atb_amount_before_claim": {
                            "type": "number",
                            "example": 123
                        },
                        "was_new_atb_used_before_claim": {
                            "type": "boolean",
                            "example": true
                        },
                        "old_atb_start_date": {
                            "type": "string",
                            "example": "2024-08-31T00:00:00+02:00"
                        },
                        "old_atb_amount_before_claim": {
                            "type": "number",
                            "example": 12
                        },
                        "was_old_atb_used_before_claim": {
                            "type": "boolean",
                            "example": false
                        },
                        "stb_disease_code": {
                            "type": "string"
                        },
                        "stb_amount_claimed": {
                            "type": "number"
                        },
                        "stb_amount_available": {
                            "type": "number"
                        },
                        "high_cost_reset": {
                            "type": "boolean",
                            "example": true
                        },
                        "disregard_subscription": {
                            "type": "boolean",
                            "example": true
                        },
                        "validated": {
                            "type": "boolean",
                            "example": true
                        },
                        "validation_sent_date": {
                            "type": "string",
                            "example": "2024-08-31T00:00:00+02:00"
                        },
                        "submitted": {
                            "type": "number"
                        },
                        "submitted_date": {
                            "type": "string",
                            "example": "2024-08-31T00:00:00+02:00"
                        },
                        "answered_at": {
                            "type": "string",
                            "example": "2024-08-31T00:00:00+02:00"
                        },
                        "error_code": {
                            "type": "string"
                        },
                        "error_text": {
                            "type": "string"
                        },
                        "error_details": {
                            "type": "string"
                        },
                        "reversed": {
                            "type": "boolean",
                            "example": false
                        },
                        "reversed_at": {
                            "type": "string",
                            "example": "2024-08-31T00:00:00+02:00"
                        },
                        "reversal_error_code": {
                            "type": "string"
                        },
                        "reversal_error_text": {
                            "type": "string"
                        },
                        "reversal_error_details": {
                            "type": "string"
                        },
                        "deducted_from_invoice": {
                            "type": "string"
                        },
                        "created_at": {
                            "type": "string",
                            "example": "2024-08-31T00:00:00+02:00"
                        },
                        "signed_at": {
                            "type": "string",
                            "example": "2024-08-31T00:00:00+02:00"
                        },
                        "deleted": {
                            "type": "boolean",
                            "example": true
                        }
                    },
                    "type": "object"
                }
            },
            "type": "object"
        },
        "AnonymouseInvoicePaymentResponse": {
            "properties": {
                "type": {
                    "type": "string",
                    "example": "anonymous_invoice_payment"
                },
                "id": {
                    "type": "string",
                    "example": "1"
                },
                "attributes": {
                    "properties": {
                        "amount": {
                            "type": "number",
                            "example": 0
                        },
                        "description": {
                            "type": "string",
                            "example": "Test description"
                        },
                        "succeeded": {
                            "type": "string"
                        },
                        "paid_at": {
                            "type": "string",
                            "example": "2024-07-12T10:43:49+02:00"
                        },
                        "created_at": {
                            "type": "string",
                            "example": "2024-08-12T10:43:49+02:00"
                        },
                        "updated_at": {
                            "type": "string",
                            "example": "2024-07-22T10:43:49+02:00"
                        },
                        "advance_payment": {
                            "type": "boolean",
                            "example": true
                        },
                        "deleted": {
                            "type": "boolean",
                            "example": false
                        }
                    },
                    "type": "object"
                }
            },
            "type": "object"
        },
        "AnonymousPatientInvoicesResponse": {
            "properties": {
                "type": {
                    "type": "string",
                    "example": "anonymous_patient_invoice"
                },
                "id": {
                    "type": "string",
                    "example": "1"
                },
                "attributes": {
                    "properties": {
                        "patient_name": {
                            "type": "string",
                            "example": "John"
                        },
                        "patient_street_address_1": {
                            "type": "string"
                        },
                        "patient_street_address_2": {
                            "type": "string"
                        },
                        "patient_postal_code": {
                            "type": "string"
                        },
                        "patient_city": {
                            "type": "string",
                            "example": "Stockholm"
                        },
                        "patient_country": {
                            "type": "string"
                        },
                        "patient_reference": {
                            "type": "string"
                        },
                        "third_party_city": {
                            "type": "string",
                            "example": "Kyiv"
                        },
                        "third_party_name": {
                            "type": "string",
                            "example": "Boom"
                        },
                        "third_party_postal_code": {
                            "type": "string"
                        },
                        "third_party_address_1": {
                            "type": "string"
                        },
                        "third_party_address_2": {
                            "type": "string"
                        },
                        "third_party_organization_id": {
                            "type": "string"
                        },
                        "generic_dental_subsidy": {
                            "type": "number",
                            "example": 10
                        },
                        "specific_dental_subsidy": {
                            "type": "number",
                            "example": 10
                        },
                        "state_dental_subsidy": {
                            "type": "number",
                            "example": 10
                        },
                        "read_by_recipient_at": {
                            "type": "string",
                            "example": "2024-08-31T00:00:00+02:00"
                        },
                        "printed_at": {
                            "type": "string",
                            "example": "2024-09-11T00:00:00+02:00"
                        }
                    },
                    "type": "object"
                }
            },
            "type": "object"
        },
        "BookingAttendeeResponse": {
            "properties": {
                "type": {
                    "type": "string",
                    "example": "booking_attendee"
                },
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "attributes": {
                    "properties": {
                        "dtstart": {
                            "type": "string",
                            "example": "2024-09-01T19:25:31+02:00"
                        },
                        "dtend": {
                            "type": "string",
                            "example": "2024-10-01T22:28:33+02:00"
                        },
                        "partstat": {
                            "type": "string",
                            "example": "ACCEPTED"
                        },
                        "rsvp": {
                            "type": "boolean",
                            "example": false
                        },
                        "arrived_at": {
                            "type": "string",
                            "example": "2024-09-01T19:25:31+02:00"
                        }
                    },
                    "type": "object"
                }
            },
            "type": "object"
        },
        "BookingExdateResponse": {
            "properties": {
                "type": {
                    "type": "string",
                    "example": "booking_exdate"
                },
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "attributes": {
                    "properties": {
                        "date": {
                            "type": "string",
                            "example": "2024-09-01T19:25:31+02:00"
                        }
                    },
                    "type": "object"
                }
            },
            "type": "object"
        },
        "BookingRruleByDayResponse": {
            "properties": {
                "type": {
                    "type": "string",
                    "example": "booking_rrule_by_day"
                },
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "attributes": {
                    "properties": {
                        "day": {
                            "type": "string"
                        }
                    },
                    "type": "object"
                }
            },
            "type": "object"
        },
        "BookingRruleResponse": {
            "properties": {
                "type": {
                    "type": "string",
                    "example": "booking_rrule"
                },
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "attributes": {
                    "properties": {
                        "count": {
                            "type": "number",
                            "example": 123
                        },
                        "freq": {
                            "type": "string"
                        },
                        "interval": {
                            "type": "number",
                            "example": 10
                        },
                        "until": {
                            "type": "string",
                            "example": "2024-09-01T19:25:31+02:00"
                        }
                    },
                    "type": "object"
                }
            },
            "type": "object"
        },
        "BookingResponse": {
            "properties": {
                "type": {
                    "type": "string",
                    "example": "booking"
                },
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "attributes": {
                    "properties": {
                        "class": {
                            "type": "string",
                            "example": "PUBLIC"
                        },
                        "summary": {
                            "type": "string",
                            "example": "Test summary"
                        },
                        "text": {
                            "type": "string",
                            "example": false
                        },
                        "dtstart": {
                            "type": "string",
                            "example": "2024-01-01T00:00:00+01:00"
                        },
                        "dtend": {
                            "type": "string",
                            "example": "2024-01-01T08:00:00+01:00"
                        },
                        "reschedulable": {
                            "type": "boolean",
                            "example": false
                        },
                        "duration_in_minutes": {
                            "type": "number",
                            "example": 10
                        },
                        "description": {
                            "type": "string",
                            "example": false
                        },
                        "location": {
                            "type": "number",
                            "format": "float"
                        },
                        "transparent": {
                            "type": "boolean",
                            "example": true
                        },
                        "status": {
                            "type": "string",
                            "example": "CONFIRMED"
                        },
                        "price": {
                            "type": "number",
                            "example": 111
                        },
                        "new_patient": {
                            "type": "boolean",
                            "example": false
                        },
                        "patient_wants_earlier_slot": {
                            "type": "boolean",
                            "example": false
                        },
                        "patient_made_late_cancellation": {
                            "type": "boolean",
                            "example": false
                        },
                        "patient_failed_to_appear": {
                            "type": "boolean",
                            "example": false
                        },
                        "patient_failed_to_appear_handled": {
                            "type": "boolean",
                            "example": false
                        },
                        "patient_declaration_allowed": {
                            "type": "boolean",
                            "example": false
                        },
                        "done": {
                            "type": "boolean",
                            "example": false
                        },
                        "archived_at": {
                            "type": "string",
                            "example": "2024-02-01T09:11:00+01:00"
                        }
                    },
                    "type": "object"
                }
            },
            "type": "object"
        },
        "CalendarViewResponse": {
            "properties": {
                "type": {
                    "type": "string",
                    "example": "calendar_view"
                },
                "id": {
                    "type": "string",
                    "example": "1"
                },
                "attributes": {
                    "properties": {
                        "name": {
                            "type": "string",
                            "example": "Test name"
                        },
                        "days": {
                            "type": "number",
                            "example": 10
                        },
                        "status": {
                            "type": "string",
                            "example": "CONFIRMED,TENTATIVE"
                        },
                        "display_recurring_bookings": {
                            "type": "boolean",
                            "example": true
                        },
                        "display_weekends": {
                            "type": "boolean",
                            "example": true
                        },
                        "from_minute": {
                            "type": "number",
                            "example": 10
                        },
                        "to_minute": {
                            "type": "boolean",
                            "example": 20
                        }
                    },
                    "type": "object"
                }
            },
            "type": "object"
        },
        "MuntraAcceptsReviewRequestsEmailSettingsResponse": {
            "properties": {
                "type": {
                    "type": "string",
                    "example": "muntra_accepts_review_requests_email_settings"
                },
                "id": {
                    "type": "string",
                    "example": "1"
                },
                "attributes": {
                    "properties": {
                        "accepts_review_request_emails": {
                            "type": "boolean",
                            "example": true
                        }
                    },
                    "type": "object"
                }
            },
            "type": "object"
        },
        "MuntraBookingAttendeesResponse": {
            "properties": {
                "type": {
                    "type": "string",
                    "example": "muntra-booking-attendee"
                },
                "id": {
                    "type": "string",
                    "example": "id"
                },
                "attributes": {
                    "properties": {
                        "partstat": {
                            "type": "string",
                            "example": "ACCEPTED"
                        },
                        "rsvp": {
                            "type": "boolean",
                            "example": true
                        }
                    },
                    "type": "object"
                }
            },
            "type": "object"
        },
        "MuntraBookings": {
            "properties": {
                "type": {
                    "type": "string",
                    "example": "muntra_booking"
                },
                "id": {
                    "type": "string",
                    "example": "BKel6a02b"
                },
                "attributes": {
                    "properties": {
                        "class": {
                            "type": "string",
                            "example": 3
                        },
                        "summary": {
                            "type": "string",
                            "example": "Title"
                        },
                        "text": {
                            "type": "string",
                            "example": "Text"
                        },
                        "dtstart": {
                            "type": "string",
                            "format": "date",
                            "example": "2023-01-30T16:49:23+01:00"
                        },
                        "dtend": {
                            "type": "string",
                            "format": "date",
                            "example": "2023-02-11T18:19:43+01:00"
                        },
                        "description": {
                            "type": "string",
                            "example": "Description"
                        },
                        "location": {
                            "type": "string",
                            "example": "Address"
                        },
                        "transparent": {
                            "type": "boolean",
                            "example": true
                        },
                        "status": {
                            "type": "string",
                            "example": "CONFIRMED"
                        },
                        "booked_by_patient": {
                            "type": "boolean",
                            "example": true
                        },
                        "new_patient": {
                            "type": "boolean",
                            "example": true
                        },
                        "referral_source": {
                            "type": "string",
                            "example": "muntra.com"
                        }
                    },
                    "type": "object"
                },
                "relationships": {
                    "properties": {
                        "data": {
                            "properties": {
                                "type": {
                                    "type": "string",
                                    "example": "muntra_clinic"
                                }
                            },
                            "type": "object"
                        }
                    },
                    "type": "object"
                }
            },
            "type": "object"
        },
        "MuntraCaregiverAtLocationResponse": {
            "properties": {
                "type": {
                    "type": "string",
                    "example": "muntra_caregiver_at_location"
                },
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "attributes": {
                    "properties": {
                        "latitude": {
                            "type": "number",
                            "format": "float",
                            "example": 49.427062
                        },
                        "longitude": {
                            "type": "number",
                            "format": "float",
                            "example": 32.081114
                        },
                        "auto_approve_patient_booking": {
                            "type": "boolean",
                            "example": true
                        },
                        "require_patient_email": {
                            "type": "boolean",
                            "example": true
                        },
                        "require_patient_cellphone": {
                            "type": "boolean",
                            "example": false
                        },
                        "calendar_activated": {
                            "type": "boolean",
                            "example": true
                        },
                        "distance": {
                            "type": "number",
                            "format": "float",
                            "example": 0
                        },
                        "latest_review_comment": {
                            "type": "string",
                            "example": "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt"
                        }
                    },
                    "type": "object"
                },
                "relationships": {
                    "properties": {
                        "clinic": {
                            "properties": {
                                "data": {
                                    "properties": {
                                        "type": {
                                            "type": "string",
                                            "example": "muntra_clinic"
                                        },
                                        "id": {
                                            "type": "integer",
                                            "example": 1
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "type": "object"
                        },
                        "caregiver": {
                            "properties": {
                                "data": {
                                    "properties": {
                                        "type": {
                                            "type": "string",
                                            "example": "muntra_caregiver"
                                        },
                                        "id": {
                                            "type": "integer",
                                            "example": 2
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "type": "object"
                        },
                        "free_bookable_slots": {
                            "properties": {
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "type": {
                                                "type": "string",
                                                "example": "muntra_free_bookable_slot"
                                            },
                                            "id": {
                                                "type": "string",
                                                "example": "1-2-1"
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            },
                            "type": "object"
                        },
                        "procedures": {
                            "properties": {
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "type": {
                                                "type": "string",
                                                "example": "muntra_caregiver_procedure_at_location"
                                            },
                                            "id": {
                                                "type": "integer",
                                                "example": 1
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            },
                            "type": "object"
                        },
                        "default_procedure": {
                            "properties": {
                                "data": {
                                    "properties": {
                                        "type": {
                                            "type": "string",
                                            "example": "muntra_caregiver_procedure_at_location"
                                        },
                                        "id": {
                                            "type": "integer",
                                            "example": 1
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "type": "object"
                        },
                        "next_free_bookable_slot": {
                            "properties": {
                                "data": {
                                    "properties": {
                                        "type": {
                                            "type": "string",
                                            "example": "muntra_free_bookable_slot"
                                        },
                                        "id": {
                                            "type": "integer",
                                            "example": "1-2-1"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "type": "object"
                        }
                    },
                    "type": "object"
                }
            },
            "type": "object"
        },
        "MuntraCaregiverProcedureAtLocationResponse": {
            "properties": {
                "type": {
                    "type": "string",
                    "example": "muntra_caregiver_procedure_at_location"
                },
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "attributes": {
                    "properties": {
                        "frequency_in_minutes": {
                            "type": "number",
                            "format": "float",
                            "example": 10
                        },
                        "duration_in_minutes_existing_patient": {
                            "type": "number",
                            "format": "float",
                            "example": 20
                        },
                        "duration_in_minutes_new_patient": {
                            "type": "number",
                            "format": "float",
                            "example": 30
                        },
                        "minimum_age": {
                            "type": "number",
                            "format": "float",
                            "example": 30
                        }
                    },
                    "type": "object"
                }
            },
            "type": "object"
        },
        "MuntraCaregiverResponse": {
            "properties": {
                "type": {
                    "type": "string",
                    "example": "muntra_caregiver"
                },
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "attributes": {
                    "properties": {
                        "clinic_name": {
                            "type": "string"
                        },
                        "booking_requires_two_factor_authentication": {
                            "type": "boolean",
                            "example": true
                        },
                        "latitude": {
                            "type": "number",
                            "format": "float",
                            "example": 0
                        },
                        "first_name": {
                            "type": "string"
                        },
                        "last_name": {
                            "type": "string"
                        },
                        "professional_statement": {
                            "type": "string"
                        },
                        "title": {
                            "type": "string"
                        },
                        "hide_reviews": {
                            "type": "boolean",
                            "example": true
                        },
                        "gender": {
                            "type": "string"
                        },
                        "active": {
                            "type": "boolean",
                            "example": true
                        },
                        "number_of_reviews": {
                            "type": "number",
                            "format": "integer",
                            "example": 0
                        },
                        "overall_rating": {
                            "type": "number",
                            "format": "float",
                            "example": 4.5
                        },
                        "info_rating_advice_and_tips": {
                            "type": "number",
                            "format": "float",
                            "example": 4.5
                        },
                        "info_rating_follow_up": {
                            "type": "number",
                            "format": "float",
                            "example": 4.5
                        },
                        "info_rating_how_to_find_place": {
                            "type": "number",
                            "format": "float",
                            "example": 4.5
                        },
                        "info_rating_patient_health": {
                            "type": "number",
                            "format": "float",
                            "example": 4.5
                        },
                        "info_rating_patient_treatment": {
                            "type": "number",
                            "format": "float",
                            "example": 4.5
                        },
                        "info_rating_pre_meeting": {
                            "type": "number",
                            "format": "float",
                            "example": 4.5
                        },
                        "info_rating_pricing": {
                            "type": "number",
                            "format": "float",
                            "example": 4.5
                        },
                        "rating_quality": {
                            "type": "number",
                            "format": "float",
                            "example": 4.5
                        },
                        "rating_bedside_manner": {
                            "type": "number",
                            "format": "float",
                            "example": 4.5
                        },
                        "rating_hygiene": {
                            "type": "number",
                            "format": "float",
                            "example": 4.5
                        },
                        "rating_reception_on_arrival": {
                            "type": "number",
                            "format": "float",
                            "example": 4.5
                        },
                        "rating_thoroughness": {
                            "type": "number",
                            "format": "float",
                            "example": 4.5
                        },
                        "rating_wait_time": {
                            "type": "number",
                            "format": "float",
                            "example": 4.5
                        }
                    },
                    "type": "object"
                }
            },
            "type": "object"
        },
        "MuntraClinicAdsResponse": {
            "properties": {
                "type": {
                    "type": "string",
                    "example": "muntra_clinic_ad"
                },
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "attributes": {
                    "properties": {
                        "per_page": {
                            "type": "number",
                            "format": "float",
                            "example": 3
                        }
                    },
                    "type": "object"
                }
            },
            "type": "object"
        },
        "MuntraClinicResponse": {
            "properties": {
                "type": {
                    "type": "string",
                    "example": "muntra_clinic"
                },
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "attributes": {
                    "properties": {
                        "clinic_name": {
                            "type": "string"
                        },
                        "clinic_address_1": {
                            "type": "string"
                        },
                        "clinic_address_2": {
                            "type": "string"
                        },
                        "clinic_postal_code": {
                            "type": "string"
                        },
                        "clinic_city": {
                            "type": "string"
                        },
                        "clinic_email_address": {
                            "type": "string"
                        },
                        "clinic_phone_number": {
                            "type": "string"
                        },
                        "clinic_phone_number_2": {
                            "type": "string"
                        },
                        "clinic_phone_mobile": {
                            "type": "string"
                        },
                        "clinic_fax": {
                            "type": "string"
                        },
                        "clinic_professional_statement": {
                            "type": "string"
                        },
                        "default_sms_reminder_text": {
                            "type": "string"
                        },
                        "website_address": {
                            "type": "string"
                        },
                        "booking_requires_two_factor_authentication": {
                            "type": "boolean",
                            "example": true
                        },
                        "active": {
                            "type": "boolean",
                            "example": true
                        },
                        "latitude": {
                            "type": "number",
                            "format": "float",
                            "example": 0
                        },
                        "longitude": {
                            "type": "number",
                            "format": "float",
                            "example": 0
                        },
                        "google_places_description": {
                            "type": "string"
                        },
                        "accepts_children": {
                            "type": "boolean",
                            "example": true
                        },
                        "accessible_via_elevator": {
                            "type": "boolean",
                            "example": true
                        },
                        "accessible_via_stairs": {
                            "type": "boolean",
                            "example": true
                        },
                        "capable_of_handling_fear_of_medical_procedures": {
                            "type": "boolean",
                            "example": true
                        },
                        "handicap_accessible": {
                            "type": "boolean",
                            "example": true
                        },
                        "has_drinks": {
                            "type": "boolean",
                            "example": true
                        },
                        "has_free_parking_directly_outside_of_clinic": {
                            "type": "boolean",
                            "example": true
                        },
                        "has_free_parking_near_the_clinic": {
                            "type": "boolean",
                            "example": true
                        },
                        "has_magazines": {
                            "type": "boolean",
                            "example": true
                        },
                        "has_music": {
                            "type": "boolean",
                            "example": true
                        },
                        "has_paid_parking_directly_outside_of_clinic": {
                            "type": "boolean",
                            "example": true
                        },
                        "has_paid_parking_near_the_clinic": {
                            "type": "boolean",
                            "example": true
                        },
                        "has_restroom": {
                            "type": "boolean",
                            "example": true
                        },
                        "has_toys": {
                            "type": "boolean",
                            "example": true
                        },
                        "has_tv": {
                            "type": "boolean",
                            "example": true
                        },
                        "has_waiting_room": {
                            "type": "boolean",
                            "example": true
                        },
                        "has_wifi": {
                            "type": "boolean",
                            "example": true
                        },
                        "number_of_reviews": {
                            "type": "number",
                            "format": "integer",
                            "example": 10
                        },
                        "overall_rating": {
                            "type": "number",
                            "format": "float",
                            "example": 4.5
                        },
                        "info_rating_advice_and_tips": {
                            "type": "number",
                            "format": "float",
                            "example": 4.5
                        },
                        "info_rating_follow_up": {
                            "type": "number",
                            "format": "float",
                            "example": 4.5
                        },
                        "info_rating_how_to_find_place": {
                            "type": "number",
                            "format": "float",
                            "example": 4.5
                        },
                        "info_rating_patient_health": {
                            "type": "number",
                            "format": "float",
                            "example": 4.5
                        },
                        "info_rating_patient_treatment": {
                            "type": "number",
                            "format": "float",
                            "example": 4.5
                        },
                        "info_rating_pre_meeting": {
                            "type": "number",
                            "format": "float",
                            "example": 4.5
                        },
                        "info_rating_pricing": {
                            "type": "number",
                            "format": "float",
                            "example": 4.5
                        },
                        "rating_quality": {
                            "type": "number",
                            "format": "float",
                            "example": 4.5
                        },
                        "rating_bedside_manner": {
                            "type": "number",
                            "format": "float",
                            "example": 4.5
                        },
                        "rating_hygiene": {
                            "type": "number",
                            "format": "float",
                            "example": 4.5
                        },
                        "rating_reception_on_arrival": {
                            "type": "number",
                            "format": "float",
                            "example": 4.5
                        },
                        "rating_thoroughness": {
                            "type": "number",
                            "format": "float",
                            "example": 4.5
                        },
                        "rating_wait_time": {
                            "type": "number",
                            "format": "float",
                            "example": 4.5
                        }
                    },
                    "type": "object"
                }
            },
            "type": "object"
        },
        "GooglePlaceAutocompleteResponse": {
            "properties": {
                "type": {
                    "type": "string",
                    "example": "muntra_google_place_autocomplete"
                },
                "id": {
                    "type": "string",
                    "example": "ChIJq6V7IxIQXEYRz-eMz_uA3Lo"
                },
                "attributes": {
                    "properties": {
                        "description": {
                            "type": "string",
                            "example": "Testa, Sverige"
                        },
                        "place_id": {
                            "type": "string",
                            "example": "ChIJq6V7IxIQXEYRz-eMz_uA3Lo"
                        },
                        "reference": {
                            "type": "string",
                            "example": "ChIJq6V7IxIQXEYRz-eMz_uA3Lo"
                        }
                    },
                    "type": "object"
                }
            },
            "type": "object"
        },
        "PatientClinicCurationResponse": {
            "properties": {
                "type": {
                    "type": "string",
                    "example": "muntra_patient_clinic_curation"
                },
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "attributes": {
                    "properties": {
                        "external_id": {
                            "type": "string",
                            "example": "RR2GEVn08i21zRslMuvz6KmM9K16cg60ot"
                        },
                        "accepts_children": {
                            "type": "boolean",
                            "example": true
                        },
                        "accessible_via_elevator": {
                            "type": "boolean",
                            "example": false
                        },
                        "accessible_via_stairs": {
                            "type": "boolean",
                            "example": true
                        },
                        "capable_of_handling_fear_of_medical_procedures": {
                            "type": "boolean",
                            "example": true
                        },
                        "handicap_accessible": {
                            "type": "boolean",
                            "example": false
                        },
                        "has_drinks": {
                            "type": "boolean",
                            "example": true
                        },
                        "has_free_parking_directly_outside_of_clinic": {
                            "type": "boolean",
                            "example": false
                        },
                        "has_free_parking_near_the_clinic": {
                            "type": "boolean",
                            "example": false
                        },
                        "has_magazines": {
                            "type": "boolean",
                            "example": true
                        },
                        "has_music": {
                            "type": "boolean",
                            "example": true
                        },
                        "phas_paid_parking_directly_outside_of_clinic": {
                            "type": "boolean",
                            "example": true
                        },
                        "has_paid_parking_near_the_clinic": {
                            "type": "boolean",
                            "example": false
                        },
                        "has_restroom": {
                            "type": "boolean",
                            "example": false
                        },
                        "has_toys": {
                            "type": "boolean",
                            "example": false
                        },
                        "has_tv": {
                            "type": "boolean",
                            "example": false
                        },
                        "has_waiting_room": {
                            "type": "boolean",
                            "example": false
                        },
                        "has_wifi": {
                            "type": "boolean",
                            "example": false
                        },
                        "created_date": {
                            "type": "string",
                            "example": "11-05-2024"
                        }
                    },
                    "type": "object"
                }
            },
            "type": "object"
        },
        "MuntraPatientReviewCaregiver": {
            "properties": {
                "type": {
                    "type": "string",
                    "example": "muntra_patient_review"
                },
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "attributes": {
                    "properties": {
                        "overall_rating": {
                            "type": "number",
                            "format": "float",
                            "example": 3
                        },
                        "patient_name": {
                            "type": "string",
                            "example": "Pontus G."
                        },
                        "review_comment": {
                            "type": "boolean",
                            "example": true
                        },
                        "created_date": {
                            "type": "string",
                            "format": "date",
                            "example": "2023-01-30T16:49:23+01:00"
                        }
                    },
                    "type": "object"
                }
            },
            "type": "object"
        },
        "MuntraRolesResponse": {
            "properties": {
                "type": {
                    "type": "string",
                    "example": "muntra-role"
                },
                "id": {
                    "type": "string",
                    "example": "id"
                },
                "attributes": {
                    "properties": {
                        "name": {
                            "type": "string",
                            "example": "Tandl\u00e4kare"
                        },
                        "slug": {
                            "type": "string",
                            "example": "slug"
                        },
                        "is_caregiver_role": {
                            "type": "boolean",
                            "example": true
                        }
                    },
                    "type": "object"
                }
            },
            "type": "object"
        },
        "ClinicCurrentResponse": {
            "properties": {
                "type": {
                    "type": "string",
                    "example": "clinic"
                },
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "attributes": {
                    "properties": {
                        "clinic_name": {
                            "type": "string",
                            "example": "Test Sverige"
                        },
                        "clinic_address_1": {
                            "type": "string",
                            "example": "Testv\u00e4gen 1"
                        },
                        "clinic_address_2": {
                            "type": "string",
                            "example": "Testv\u00e4gen 2"
                        },
                        "clinic_postal_code": {
                            "type": "string",
                            "example": "12345"
                        },
                        "clinic_city": {
                            "type": "string",
                            "example": "Stockholm"
                        },
                        "clinic_reference": {
                            "type": "string"
                        },
                        "clinic_email_address": {
                            "type": "string"
                        },
                        "clinic_phone_number": {
                            "type": "string"
                        },
                        "clinic_phone_number_2": {
                            "type": "string"
                        },
                        "clinic_phone_mobile": {
                            "type": "string"
                        },
                        "clinic_fax": {
                            "type": "string"
                        },
                        "clinic_professional_statement": {
                            "type": "string"
                        },
                        "workplace_code": {
                            "type": "string"
                        },
                        "website_address": {
                            "type": "string"
                        },
                        "booking_requires_two_factor_authentication": {
                            "type": "boolean",
                            "example": true
                        },
                        "show_user_in_invoice_clinic_reference": {
                            "type": "boolean",
                            "example": true
                        },
                        "timezone": {
                            "type": "string",
                            "example": "Europe/Stockholm"
                        },
                        "latitude": {
                            "type": "integer",
                            "format": "float"
                        },
                        "longitude": {
                            "type": "integer",
                            "format": "float"
                        },
                        "google_places_description": {
                            "type": "string"
                        },
                        "journal_entry_autosign_limit_in_days": {
                            "type": "integer",
                            "example": 30
                        },
                        "journal_entry_unsign_limit_in_days": {
                            "type": "integer",
                            "example": 30
                        },
                        "default_sms_invitation_text": {
                            "type": "string",
                            "example": "Hej [patient_first_name]! V\u00e4lkommen [booking_datetime] [clinic_address_1]. Bekr\u00e4fta tiden via [booking_confirmation_link]. Mvh, [caregiver_title] [caregiver_first_name] [caregiver_last_name] (OBS! det g\u00e5r inte att svara p\u00e5 detta meddelande)"
                        },
                        "default_sms_reminder_text": {
                            "type": "string",
                            "example": "Hej [patient_first_name]! H\u00e4r \u00e4r en p\u00e5minnelse om din tid p\u00e5 [clinic_name] p\u00e5 [clinic_address_1] kl. [booking_time] den [booking_date]. Mvh, [caregiver_first_name] [caregiver_last_name], [caregiver_title]"
                        },
                        "default_snail_mail_invitation_text": {
                            "type": "string",
                            "example": "Hej [patient_first_name]!\\r\\n\\r\\nNu \u00e4r det dags att bes\u00f6ka oss.\\r\\n\\r\\nV\u00e4lkommen till [clinic_name] p\u00e5 [clinic_address_1] kl. [booking_time] den [booking_date].\\r\\n\\r\\nBekr\u00e4fta g\u00e4rna tiden genom att g\u00e5 till f\u00f6ljande l\u00e4nk: [booking_confirmation_link]\\r\\n\\r\\nMed v\u00e4nlig h\u00e4lsning,\\r\\n[caregiver_first_name] [caregiver_last_name], [caregiver_title]"
                        },
                        "default_hours_until_sms_invitation_sent": {
                            "type": "integer",
                            "example": 48
                        },
                        "default_hours_before_sms_reminder_sent": {
                            "type": "integer",
                            "example": 48
                        },
                        "default_hours_until_snail_mail_invitation_sent": {
                            "type": "integer",
                            "example": 48
                        },
                        "allow_remittance_without_individual_recipient": {
                            "type": "boolean",
                            "example": true
                        },
                        "accepts_digital_remittance": {
                            "type": "boolean",
                            "example": true
                        },
                        "has_cbct": {
                            "type": "boolean",
                            "example": true
                        },
                        "has_music": {
                            "type": "boolean",
                            "example": true
                        },
                        "created_at": {
                            "type": "string",
                            "format": "date",
                            "example": "2024-07-02T19:16:42+02:00"
                        },
                        "updated_at": {
                            "type": "string",
                            "format": "date",
                            "example": "2024-07-02T19:17:48+02:00"
                        }
                    },
                    "type": "object"
                }
            },
            "type": "object"
        },
        "CountyCouncilPriceResponse": {
            "properties": {
                "type": {
                    "type": "string",
                    "example": "county_council_price"
                },
                "id": {
                    "type": "string",
                    "example": "1"
                },
                "attributes": {
                    "properties": {
                        "price_code": {
                            "type": "string"
                        },
                        "description": {
                            "type": "string",
                            "example": "Test description"
                        },
                        "total_excluding_vat": {
                            "type": "number",
                            "example": 10
                        },
                        "lab_fee": {
                            "type": "number",
                            "example": 5
                        },
                        "included_material": {
                            "type": "string"
                        },
                        "multi_tooth": {
                            "type": "boolean",
                            "example": true
                        },
                        "deleted": {
                            "type": "boolean",
                            "example": true
                        }
                    },
                    "type": "object"
                }
            },
            "type": "object"
        },
        "CountryCouncilResponse": {
            "properties": {
                "type": {
                    "type": "string",
                    "example": "county_council"
                },
                "id": {
                    "type": "string",
                    "example": "1"
                },
                "attributes": {
                    "properties": {
                        "invoice_address_1": {
                            "type": "string",
                            "example": "H\u00e4lso- och sjukv\u00e5rdsf\u00f6rvaltningen"
                        },
                        "invoice_address_2": {
                            "type": "string",
                            "example": "Box 120 81"
                        },
                        "invoice_city": {
                            "type": "string",
                            "example": "Stockholm"
                        },
                        "postal_code": {
                            "type": "string",
                            "example": "10223"
                        },
                        "organization_name": {
                            "type": "string",
                            "example": "Region Stockholm"
                        }
                    },
                    "type": "object"
                }
            },
            "type": "object"
        },
        "CreditChecksResponse": {
            "properties": {
                "type": {
                    "type": "string",
                    "example": "credit_check"
                },
                "id": {
                    "type": "string",
                    "example": "1"
                },
                "attributes": {
                    "properties": {
                        "amount": {
                            "type": "number",
                            "example": 10
                        },
                        "approved": {
                            "type": "boolean",
                            "example": true
                        },
                        "created_at": {
                            "type": "string",
                            "example": "2024-09-01T19:25:31+02:00"
                        },
                        "valid_until": {
                            "type": "string",
                            "example": "2025-11-01T19:25:31+02:00"
                        }
                    },
                    "type": "object"
                }
            },
            "type": "object"
        },
        "CurrencyWebhookRequest": {
            "properties": {
                "type": {
                    "type": "string",
                    "example": "task"
                },
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "attributes": {
                    "properties": {
                        "code": {
                            "type": "string"
                        },
                        "name": {
                            "type": "string",
                            "example": "Test title"
                        },
                        "suffix": {
                            "type": "string"
                        }
                    },
                    "type": "object"
                }
            },
            "type": "object"
        },
        "CustomPaymentTypeResponse": {
            "properties": {
                "type": {
                    "type": "string",
                    "example": "custom_payment_type"
                },
                "id": {
                    "type": "string",
                    "example": "1"
                },
                "attributes": {
                    "properties": {
                        "label": {
                            "type": "string"
                        }
                    },
                    "type": "object"
                }
            },
            "type": "object"
        },
        "DashboardReportResponse": {
            "properties": {
                "type": {
                    "type": "string",
                    "example": "dashboard_report"
                },
                "id": {
                    "type": "string",
                    "example": "1"
                },
                "attributes": {
                    "properties": {
                        "model_name": {
                            "type": "string",
                            "example": "action-needed-patient-report-row"
                        }
                    },
                    "type": "object"
                }
            },
            "type": "object"
        },
        "DeclarationItemTemplateResponse": {
            "properties": {
                "type": {
                    "type": "string",
                    "example": "declaration_item_template"
                },
                "id": {
                    "type": "string",
                    "example": "1"
                },
                "attributes": {
                    "properties": {
                        "label": {
                            "type": "string",
                            "example": "Astma"
                        },
                        "stub": {
                            "type": "string",
                            "example": "astma"
                        },
                        "cave": {
                            "type": "boolean",
                            "example": false
                        },
                        "deleted_at": {
                            "type": "string",
                            "example": "2024-08-31T00:00:00+02:00"
                        }
                    },
                    "type": "object"
                }
            },
            "type": "object"
        },
        "DeclarationsResponse": {
            "properties": {
                "type": {
                    "type": "string",
                    "example": "declaration"
                },
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "attributes": {
                    "properties": {
                        "asthma": {
                            "type": "boolean",
                            "example": false
                        },
                        "blood_infection": {
                            "type": "boolean",
                            "example": false
                        },
                        "hemophilia": {
                            "type": "boolean",
                            "example": false
                        },
                        "cancer": {
                            "type": "boolean",
                            "example": false
                        },
                        "diabetes": {
                            "type": "boolean",
                            "example": false
                        },
                        "epilepsy": {
                            "type": "boolean",
                            "example": false
                        },
                        "hiv_aids": {
                            "type": "boolean",
                            "example": false
                        },
                        "cerebral_haemorrhage": {
                            "type": "boolean",
                            "example": false
                        },
                        "cardiovascular_diseases": {
                            "type": "boolean",
                            "example": false
                        },
                        "high_blood_pressure": {
                            "type": "boolean",
                            "example": false
                        },
                        "immunological_disease": {
                            "type": "boolean",
                            "example": false
                        },
                        "supplement_for_dental_treatment": {
                            "type": "boolean",
                            "example": false
                        },
                        "nutrition_diet": {
                            "type": "boolean",
                            "example": false
                        },
                        "respiratory_disease": {
                            "type": "boolean",
                            "example": false
                        },
                        "parkinsons": {
                            "type": "boolean",
                            "example": false
                        },
                        "mental_health_problems": {
                            "type": "boolean",
                            "example": false
                        },
                        "rheumatic_disease": {
                            "type": "boolean",
                            "example": false
                        },
                        "smokes_takes_snuff": {
                            "type": "boolean",
                            "example": false
                        },
                        "gets_chemo_therapy": {
                            "type": "boolean",
                            "example": false
                        },
                        "eating_disorder": {
                            "type": "boolean",
                            "example": false
                        },
                        "ear_nose_throat": {
                            "type": "boolean",
                            "example": false
                        },
                        "other": {
                            "type": "boolean",
                            "example": false
                        },
                        "allergy_latex": {
                            "type": "boolean",
                            "example": false
                        },
                        "allergy_local_anesthesia": {
                            "type": "boolean",
                            "example": false
                        },
                        "allergy_edibles": {
                            "type": "boolean",
                            "example": false
                        },
                        "allergy_nickel": {
                            "type": "boolean",
                            "example": false
                        },
                        "allergy_penicillin": {
                            "type": "boolean",
                            "example": false
                        },
                        "allergy_pollen": {
                            "type": "boolean",
                            "example": false
                        },
                        "allergy_other": {
                            "type": "boolean",
                            "example": false
                        },
                        "mouth_bleeding_gums": {
                            "type": "boolean",
                            "example": false
                        },
                        "mouth_bruxism": {
                            "type": "boolean",
                            "example": false
                        },
                        "mouth_halitosis": {
                            "type": "boolean",
                            "example": false
                        },
                        "mouth_finger_sucker": {
                            "type": "boolean",
                            "example": false
                        },
                        "mouth_mouth_breather": {
                            "type": "boolean",
                            "example": false
                        },
                        "mouth_mouth_ulceration": {
                            "type": "boolean",
                            "example": false
                        },
                        "mouth_xerostomia": {
                            "type": "boolean",
                            "example": false
                        },
                        "mouth_sore_masticatory_muscles": {
                            "type": "boolean",
                            "example": false
                        },
                        "mouth_other": {
                            "type": "boolean",
                            "example": false
                        },
                        "osteoporosis": {
                            "type": "boolean",
                            "example": false
                        },
                        "other_impaired_hearing": {
                            "type": "boolean",
                            "example": false
                        },
                        "other_reduced_mobility": {
                            "type": "boolean",
                            "example": false
                        },
                        "other_impaired_vision": {
                            "type": "boolean",
                            "example": false
                        },
                        "other_impaired_speech": {
                            "type": "boolean",
                            "example": false
                        },
                        "pacemaker": {
                            "type": "boolean",
                            "example": false
                        },
                        "bisphosphonate": {
                            "type": "boolean",
                            "example": false
                        },
                        "pain_in_face_jaw_or_temple": {
                            "type": "boolean",
                            "example": false
                        },
                        "pain_when_opening_or_chewing": {
                            "type": "boolean",
                            "example": false
                        },
                        "locks_jaw": {
                            "type": "boolean",
                            "example": false
                        },
                        "patient_health_evaluation": {
                            "type": "string",
                            "example": false
                        },
                        "pregnant_due_date": {
                            "type": "string",
                            "example": false
                        },
                        "last_dental_treatment": {
                            "type": "string",
                            "example": false
                        },
                        "registration_date": {
                            "type": "string",
                            "example": false
                        },
                        "special_notes": {
                            "type": "string",
                            "example": false
                        },
                        "complementary_information": {
                            "type": "string",
                            "example": false
                        },
                        "medications": {
                            "type": "string",
                            "example": false
                        },
                        "medications_free_text": {
                            "type": "string",
                            "example": false
                        },
                        "medical_treatment_past_two_years": {
                            "type": "string",
                            "example": false
                        },
                        "medical_treatment": {
                            "type": "string",
                            "example": false
                        },
                        "reason_patient_visits": {
                            "type": "string",
                            "example": false
                        },
                        "submitted_by_patient_at": {
                            "type": "string",
                            "example": false
                        },
                        "signed_at": {
                            "type": "string"
                        },
                        "prev_history_id": {
                            "type": "string"
                        },
                        "next_history_id": {
                            "type": "string"
                        }
                    },
                    "type": "object"
                }
            },
            "type": "object"
        },
        "DeclarationsMuntraResponse": {
            "properties": {
                "type": {
                    "type": "string",
                    "example": "muntra-declaration"
                },
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "attributes": {
                    "properties": {
                        "asthma": {
                            "type": "boolean",
                            "example": false
                        },
                        "blood_infection": {
                            "type": "boolean",
                            "example": false
                        },
                        "hemophilia": {
                            "type": "boolean",
                            "example": false
                        },
                        "cancer": {
                            "type": "boolean",
                            "example": false
                        },
                        "diabetes": {
                            "type": "boolean",
                            "example": false
                        },
                        "epilepsy": {
                            "type": "boolean",
                            "example": false
                        },
                        "hiv_aids": {
                            "type": "boolean",
                            "example": false
                        },
                        "cerebral_haemorrhage": {
                            "type": "boolean",
                            "example": false
                        },
                        "cardiovascular_diseases": {
                            "type": "boolean",
                            "example": false
                        },
                        "high_blood_pressure": {
                            "type": "boolean",
                            "example": false
                        },
                        "immunological_disease": {
                            "type": "boolean",
                            "example": false
                        },
                        "supplement_for_dental_treatment": {
                            "type": "boolean",
                            "example": false
                        },
                        "nutrition_diet": {
                            "type": "boolean",
                            "example": false
                        },
                        "respiratory_disease": {
                            "type": "boolean",
                            "example": false
                        },
                        "parkinsons": {
                            "type": "boolean",
                            "example": false
                        },
                        "mental_health_problems": {
                            "type": "boolean",
                            "example": false
                        },
                        "rheumatic_disease": {
                            "type": "boolean",
                            "example": false
                        },
                        "smokes_takes_snuff": {
                            "type": "boolean",
                            "example": false
                        },
                        "gets_chemo_therapy": {
                            "type": "boolean",
                            "example": false
                        },
                        "eating_disorder": {
                            "type": "boolean",
                            "example": false
                        },
                        "ear_nose_throat": {
                            "type": "boolean",
                            "example": false
                        },
                        "other": {
                            "type": "boolean",
                            "example": false
                        },
                        "allergy_latex": {
                            "type": "boolean",
                            "example": false
                        },
                        "allergy_local_anesthesia": {
                            "type": "boolean",
                            "example": false
                        },
                        "allergy_edibles": {
                            "type": "boolean",
                            "example": false
                        },
                        "allergy_nickel": {
                            "type": "boolean",
                            "example": false
                        },
                        "allergy_penicillin": {
                            "type": "boolean",
                            "example": false
                        },
                        "allergy_pollen": {
                            "type": "boolean",
                            "example": false
                        },
                        "allergy_other": {
                            "type": "boolean",
                            "example": false
                        },
                        "mouth_bleeding_gums": {
                            "type": "boolean",
                            "example": false
                        },
                        "mouth_bruxism": {
                            "type": "boolean",
                            "example": false
                        },
                        "mouth_halitosis": {
                            "type": "boolean",
                            "example": false
                        },
                        "mouth_finger_sucker": {
                            "type": "boolean",
                            "example": false
                        },
                        "mouth_mouth_breather": {
                            "type": "boolean",
                            "example": false
                        },
                        "mouth_mouth_ulceration": {
                            "type": "boolean",
                            "example": false
                        },
                        "mouth_xerostomia": {
                            "type": "boolean",
                            "example": false
                        },
                        "mouth_sore_masticatory_muscles": {
                            "type": "boolean",
                            "example": false
                        },
                        "mouth_other": {
                            "type": "boolean",
                            "example": false
                        },
                        "osteoporosis": {
                            "type": "boolean",
                            "example": false
                        },
                        "other_impaired_hearing": {
                            "type": "boolean",
                            "example": false
                        },
                        "other_reduced_mobility": {
                            "type": "boolean",
                            "example": false
                        },
                        "other_impaired_vision": {
                            "type": "boolean",
                            "example": false
                        },
                        "other_impaired_speech": {
                            "type": "boolean",
                            "example": false
                        },
                        "pacemaker": {
                            "type": "boolean",
                            "example": false
                        },
                        "bisphosphonate": {
                            "type": "boolean",
                            "example": false
                        },
                        "pain_in_face_jaw_or_temple": {
                            "type": "boolean",
                            "example": false
                        },
                        "pain_when_opening_or_chewing": {
                            "type": "boolean",
                            "example": false
                        },
                        "locks_jaw": {
                            "type": "boolean",
                            "example": false
                        },
                        "patient_health_evaluation": {
                            "type": "string",
                            "example": false
                        },
                        "pregnant_due_date": {
                            "type": "string",
                            "example": false
                        },
                        "last_dental_treatment": {
                            "type": "string",
                            "example": false
                        },
                        "registration_date": {
                            "type": "string",
                            "example": false
                        },
                        "special_notes": {
                            "type": "string",
                            "example": false
                        },
                        "complementary_information": {
                            "type": "string",
                            "example": false
                        },
                        "medications": {
                            "type": "string",
                            "example": false
                        },
                        "medications_free_text": {
                            "type": "string",
                            "example": false
                        },
                        "medical_treatment_past_two_years": {
                            "type": "string",
                            "example": false
                        },
                        "medical_treatment": {
                            "type": "string",
                            "example": false
                        },
                        "reason_patient_visits": {
                            "type": "string",
                            "example": false
                        },
                        "submitted_by_patient_at": {
                            "type": "string",
                            "example": false
                        },
                        "signed_at": {
                            "type": "string"
                        },
                        "prev_history_id": {
                            "type": "string"
                        },
                        "next_history_id": {
                            "type": "string"
                        }
                    },
                    "type": "object"
                }
            },
            "type": "object"
        },
        "DeviceResponse": {
            "properties": {
                "type": {
                    "type": "string",
                    "example": "device"
                },
                "id": {
                    "type": "string",
                    "example": "1"
                },
                "attributes": {
                    "properties": {
                        "active_area_height_in_millimeters": {
                            "type": "number",
                            "example": 20
                        },
                        "active_area_width_in_millimeters": {
                            "type": "number",
                            "example": 30
                        },
                        "primary_device_identifier_number": {
                            "type": "string",
                            "example": "EKAV101038841"
                        },
                        "product_name": {
                            "type": "string",
                            "example": "Gendex GXS-700"
                        }
                    },
                    "type": "object"
                }
            },
            "type": "object"
        },
        "DraftEmailReportRowResponse": {
            "properties": {
                "type": {
                    "type": "string",
                    "example": "draft_email_report_row"
                },
                "id": {
                    "type": "string",
                    "example": "1"
                },
                "attributes": {
                    "properties": {
                        "count": {
                            "type": "number",
                            "example": 1
                        },
                        "patient_id": {
                            "type": "string",
                            "example": "11"
                        },
                        "patient_name": {
                            "type": "string",
                            "example": "John"
                        }
                    },
                    "type": "object"
                }
            },
            "type": "object"
        },
        "DraftSmsReportRowResponse": {
            "properties": {
                "type": {
                    "type": "string",
                    "example": "draft_sms_report_row"
                },
                "id": {
                    "type": "string",
                    "example": "1"
                },
                "attributes": {
                    "properties": {
                        "count": {
                            "type": "number",
                            "example": 1
                        },
                        "patient_id": {
                            "type": "string",
                            "example": "11"
                        },
                        "patient_name": {
                            "type": "string",
                            "example": "John"
                        }
                    },
                    "type": "object"
                }
            },
            "type": "object"
        },
        "DraftSnailMailReportResponse": {
            "properties": {
                "type": {
                    "type": "string",
                    "example": "draft_snail_mail_report_row"
                },
                "id": {
                    "type": "string",
                    "example": "1"
                },
                "attributes": {
                    "properties": {
                        "count": {
                            "type": "number",
                            "example": 1
                        },
                        "patient_id": {
                            "type": "string",
                            "example": "11"
                        },
                        "patient_name": {
                            "type": "string",
                            "example": "John"
                        }
                    },
                    "type": "object"
                }
            },
            "type": "object"
        },
        "EmailIcsResponse": {
            "properties": {
                "type": {
                    "type": "string",
                    "example": "email_ics"
                },
                "id": {
                    "type": "string",
                    "example": "1"
                },
                "attributes": {
                    "properties": {
                        "to": {
                            "type": "string"
                        },
                        "to_name": {
                            "type": "string",
                            "example": "Gordon"
                        },
                        "subject": {
                            "type": "string",
                            "example": "Test subject"
                        },
                        "body": {
                            "type": "string"
                        },
                        "sent_at": {
                            "type": "string",
                            "example": "2024-08-31T00:00:00+02:00"
                        },
                        "scheduled": {
                            "type": "boolean",
                            "example": true
                        },
                        "message_status": {
                            "type": "string"
                        },
                        "error_code": {
                            "type": "string"
                        },
                        "deleted": {
                            "type": "boolean",
                            "example": false
                        },
                        "created_at": {
                            "type": "string",
                            "example": "2024-09-11T29:25:31+02:00"
                        },
                        "wait_number_of_hours_after_send": {
                            "type": "number",
                            "example": 20
                        }
                    },
                    "type": "object"
                }
            },
            "type": "object"
        },
        "EmailsResponse": {
            "properties": {
                "type": {
                    "type": "string",
                    "example": "email"
                },
                "id": {
                    "type": "string",
                    "example": "1"
                },
                "attributes": {
                    "properties": {
                        "to": {
                            "type": "string"
                        },
                        "to_name": {
                            "type": "string"
                        },
                        "subject": {
                            "type": "string"
                        },
                        "body": {
                            "type": "string"
                        },
                        "sent_at": {
                            "type": "string",
                            "example": "2024-09-01T19:25:31+02:00"
                        },
                        "scheduled": {
                            "type": "boolean"
                        },
                        "message_status": {
                            "type": "string"
                        },
                        "error_code": {
                            "type": "string"
                        },
                        "deleted": {
                            "type": "boolean",
                            "example": true
                        },
                        "created_at": {
                            "type": "string",
                            "example": "2024-09-01T19:25:31+02:00"
                        }
                    },
                    "type": "object"
                }
            },
            "type": "object"
        },
        "EventsResponse": {
            "properties": {
                "type": {
                    "type": "string",
                    "example": "event"
                },
                "id": {
                    "type": "string",
                    "example": "bfa1d33f97396a54b3083d0c03e94719"
                },
                "attributes": {
                    "properties": {
                        "dtstart": {
                            "type": "string",
                            "example": "2024-07-02T21:31:00+02:00"
                        },
                        "dtend": {
                            "type": "string",
                            "example": "2024-07-02T23:26:00+02:00"
                        },
                        "recurring": {
                            "type": "boolean",
                            "example": false
                        },
                        "patient_id": {
                            "type": "string"
                        },
                        "patient_fullname": {
                            "type": "string"
                        },
                        "patient_partstat": {
                            "type": "string"
                        },
                        "arrived_at": {
                            "type": "string",
                            "example": "2024-06-28T12:14:26+02:00"
                        },
                        "patient_email_status": {
                            "type": "string"
                        },
                        "patient_sms_invitation_status": {
                            "type": "string"
                        },
                        "patient_sms_reminder_status": {
                            "type": "string"
                        },
                        "patient_snail_mail_status": {
                            "type": "string"
                        },
                        "patient_personal_id": {
                            "type": "string"
                        },
                        "user_ids": {
                            "type": "string"
                        },
                        "room_ids": {
                            "type": "string"
                        },
                        "resource_ids": {
                            "type": "string"
                        }
                    },
                    "type": "object"
                }
            },
            "type": "object"
        },
        "GooglePlaceDetailRequest": {
            "properties": {
                "type": {
                    "type": "string",
                    "example": "muntra-google-place-detail-request"
                },
                "id": {
                    "type": "string",
                    "example": "ChIJq6V7IxIQXEYRz-eMz_uA3Lo"
                },
                "attributes": {
                    "properties": {
                        "country_short_name": {
                            "type": "string",
                            "example": "sv"
                        },
                        "international_phone_number": {
                            "type": "string"
                        },
                        "location_lat": {
                            "type": "string",
                            "example": "57.726407"
                        },
                        "location_lng": {
                            "type": "string",
                            "example": "11.953961"
                        },
                        "viewport_northeast_lat": {
                            "type": "string",
                            "example": "59.25614253029151"
                        },
                        "viewport_northeast_lng": {
                            "type": "string",
                            "example": "17.8636166302915"
                        },
                        "viewport_southwest_lat": {
                            "type": "string",
                            "example": "59.25344456970849"
                        },
                        "viewport_southwest_lng": {
                            "type": "string",
                            "example": "17.8609186697085"
                        },
                        "name": {
                            "type": "string",
                            "example": "Test name"
                        },
                        "postal_code": {
                            "type": "string"
                        },
                        "postal_town": {
                            "type": "string"
                        },
                        "place_id": {
                            "type": "string",
                            "example": "ChIJq6V7IxIQXEYRz-eMz_uA3Lo"
                        },
                        "route": {
                            "type": "string"
                        },
                        "street_number": {
                            "type": "string",
                            "example": "11"
                        }
                    },
                    "type": "object"
                }
            },
            "type": "object"
        },
        "GooglePlaceDetailResponse": {
            "properties": {
                "type": {
                    "type": "string",
                    "example": "muntra_google_place_detail"
                },
                "id": {
                    "type": "string",
                    "example": "ChIJq6V7IxIQXEYRz-eMz_uA3Lo"
                },
                "attributes": {
                    "properties": {
                        "include_in_sitemap": {
                            "type": "boolean",
                            "example": true
                        },
                        "name": {
                            "type": "string",
                            "example": "Test name"
                        },
                        "location_lat": {
                            "type": "string",
                            "example": "57.726407"
                        },
                        "location_lng": {
                            "type": "string",
                            "example": "11.953961"
                        },
                        "viewport_northeast_lat": {
                            "type": "string",
                            "example": "59.25614253029151"
                        },
                        "viewport_northeast_lng": {
                            "type": "string",
                            "example": "17.8636166302915"
                        },
                        "viewport_southwest_lat": {
                            "type": "string",
                            "example": "59.25344456970849"
                        },
                        "viewport_southwest_lng": {
                            "type": "string",
                            "example": "17.8609186697085"
                        },
                        "reference": {
                            "type": "string"
                        },
                        "international_phone_number": {
                            "type": "string"
                        },
                        "place_id": {
                            "type": "string",
                            "example": "ChIJq6V7IxIQXEYRz-eMz_uA3Lo"
                        },
                        "formatted_address": {
                            "type": "string"
                        }
                    },
                    "type": "object"
                }
            },
            "type": "object"
        },
        "HumanPrescriptionRowResponse": {
            "properties": {
                "type": {
                    "type": "string",
                    "example": "human_prescription_row"
                },
                "id": {
                    "type": "string",
                    "example": "1"
                },
                "attributes": {
                    "properties": {
                        "dispensing_repeat_number": {
                            "type": "number"
                        },
                        "dispensing_repeat_time_unit": {
                            "type": "string",
                            "example": "2024-06-28T12:14:26+02:00"
                        },
                        "dispensing_repeat_time_value": {
                            "type": "number",
                            "example": 10
                        },
                        "latest_requested_time_for_dispensing": {
                            "type": "string",
                            "example": "2024-06-28T12:14:26+02:00"
                        },
                        "npl_id": {
                            "type": "string"
                        },
                        "npl_pack_id": {
                            "type": "string"
                        },
                        "nvn": {
                            "type": "string"
                        },
                        "number_of_packages": {
                            "type": "number",
                            "example": 100
                        },
                        "prescription_item_id": {
                            "type": "string"
                        },
                        "unstructured_dosage_admin": {
                            "type": "string"
                        },
                        "exchangable": {
                            "type": "boolean",
                            "example": true
                        },
                        "include_intro_pack": {
                            "type": "boolean",
                            "example": false
                        },
                        "reimbursed": {
                            "type": "boolean",
                            "example": true
                        }
                    },
                    "type": "object"
                }
            },
            "type": "object"
        },
        "HumanPrescriptionResponse": {
            "properties": {
                "type": {
                    "type": "string",
                    "example": "human_prescription"
                },
                "id": {
                    "type": "string",
                    "example": "5"
                },
                "attributes": {
                    "properties": {
                        "accepted": {
                            "type": "boolean",
                            "example": true
                        },
                        "date": {
                            "type": "string",
                            "example": "2024-06-28T12:14:26+02:00"
                        },
                        "delivery_method": {
                            "type": "string"
                        },
                        "designated_message_receiver": {
                            "type": "string"
                        },
                        "prescriber_city": {
                            "type": "string"
                        },
                        "prescriber_code": {
                            "type": "string"
                        },
                        "prescriber_name": {
                            "type": "string"
                        },
                        "prescriber_number_or_name_of_house": {
                            "type": "string"
                        },
                        "prescriber_postal_code": {
                            "type": "string"
                        },
                        "prescriber_qualification_code": {
                            "type": "string"
                        },
                        "prescriber_street_name": {
                            "type": "string"
                        },
                        "prescriber_telecommunication": {
                            "type": "string"
                        },
                        "prescribers_comment": {
                            "type": "string"
                        },
                        "subject_of_care_city": {
                            "type": "string"
                        },
                        "subject_of_care_family_name": {
                            "type": "string"
                        },
                        "subject_of_care_first_given_name": {
                            "type": "string"
                        },
                        "subject_of_care_id_scheme": {
                            "type": "string"
                        },
                        "subject_of_care_id_value": {
                            "type": "string"
                        },
                        "subject_of_care_postal_code": {
                            "type": "string"
                        },
                        "subject_of_care_street_name": {
                            "type": "string"
                        },
                        "subject_of_care_phone_number": {
                            "type": "string"
                        },
                        "test_indicator": {
                            "type": "string"
                        },
                        "callback_url": {
                            "type": "string"
                        },
                        "uuid": {
                            "type": "string"
                        },
                        "deleted": {
                            "type": "boolean",
                            "example": false
                        },
                        "healthcare_agent_id": {
                            "type": "string"
                        },
                        "subject_of_care_sex": {
                            "type": "string"
                        },
                        "signed_at": {
                            "type": "string",
                            "example": "2024-06-28T12:14:26+02:00"
                        }
                    },
                    "type": "object"
                }
            },
            "type": "object"
        },
        "ImageResponse": {
            "properties": {
                "type": {
                    "type": "string",
                    "example": "image"
                },
                "id": {
                    "type": "string",
                    "example": "1"
                },
                "attributes": {
                    "properties": {
                        "name": {
                            "type": "string"
                        },
                        "type": {
                            "type": "string",
                            "example": "image/png"
                        },
                        "size_in_bytes": {
                            "type": "string",
                            "example": "136941"
                        },
                        "backup": {
                            "type": "boolean",
                            "example": false
                        },
                        "backup_path": {
                            "type": "string"
                        },
                        "st_ctim": {
                            "type": "string"
                        },
                        "st_gid": {
                            "type": "string"
                        },
                        "st_ino": {
                            "type": "string"
                        },
                        "st_mode": {
                            "type": "string"
                        },
                        "st_mtim": {
                            "type": "string"
                        },
                        "st_size": {
                            "type": "string"
                        },
                        "st_uid": {
                            "type": "string"
                        },
                        "creation_date": {
                            "type": "string",
                            "example": "2024-08-31T00:00:00+02:00"
                        },
                        "width": {
                            "type": "number",
                            "example": 1024
                        },
                        "height": {
                            "type": "number",
                            "example": 768
                        },
                        "actual_width_in_mm": {
                            "type": "number",
                            "example": 1
                        },
                        "actual_height_in_mm": {
                            "type": "number",
                            "example": 2
                        },
                        "treatment_date": {
                            "type": "string",
                            "example": "2024-08-31T00:00:00+02:00"
                        },
                        "original": {
                            "type": "string"
                        },
                        "small_thumbnail": {
                            "type": "string"
                        },
                        "large_thumbnail": {
                            "type": "string"
                        },
                        "path": {
                            "type": "string"
                        },
                        "deleted_at": {
                            "type": "string",
                            "example": "2024-08-31T00:00:00+02:00"
                        }
                    },
                    "type": "object"
                }
            },
            "type": "object"
        },
        "IncompleteReceivedRemittanceReportRowResponse": {
            "properties": {
                "type": {
                    "type": "string",
                    "example": "incomplete_received_remittance_report_row"
                },
                "id": {
                    "type": "string",
                    "example": "1"
                },
                "attributes": {
                    "properties": {
                        "count": {
                            "type": "number",
                            "example": 1
                        },
                        "patient_id": {
                            "type": "string",
                            "example": "11"
                        },
                        "patient_name": {
                            "type": "string",
                            "example": "John"
                        }
                    },
                    "type": "object"
                }
            },
            "type": "object"
        },
        "InvoicePaymentResponse": {
            "properties": {
                "type": {
                    "type": "string",
                    "example": "invoice_payment"
                },
                "id": {
                    "type": "string",
                    "example": "205"
                },
                "attributes": {
                    "properties": {
                        "amount": {
                            "type": "number",
                            "example": 200
                        },
                        "vat_amount": {
                            "type": "number",
                            "example": 333
                        },
                        "description": {
                            "type": "string",
                            "example": "Test description"
                        },
                        "succeeded": {
                            "type": "boolean",
                            "example": true
                        },
                        "paid_at": {
                            "type": "string",
                            "example": "2024-09-06T11:36:23+02:00"
                        },
                        "created_at": {
                            "type": "string",
                            "example": "2024-11-06T11:36:10+02:00"
                        },
                        "updated_at": {
                            "type": "string",
                            "example": "2024-12-06T11:22:13+02:00"
                        },
                        "advance_payment": {
                            "type": "boolean",
                            "example": true
                        },
                        "deleted": {
                            "type": "boolean",
                            "example": true
                        }
                    },
                    "type": "object"
                }
            },
            "type": "object"
        },
        "InvoiceTypeResponse": {
            "properties": {
                "type": {
                    "type": "string",
                    "example": "invoice_type"
                },
                "id": {
                    "type": "string",
                    "example": "3"
                },
                "attributes": {
                    "properties": {
                        "name": {
                            "type": "string",
                            "example": "Test name"
                        },
                        "debit": {
                            "type": "boolean",
                            "example": false
                        }
                    },
                    "type": "object"
                }
            },
            "type": "object"
        },
        "JournalEntryMacroItemResponse": {
            "properties": {
                "type": {
                    "type": "string",
                    "example": "journal_entry_macro_item"
                },
                "id": {
                    "type": "string",
                    "example": "1"
                },
                "attributes": {
                    "properties": {
                        "entry_type": {
                            "type": "string"
                        },
                        "entry_date": {
                            "type": "string",
                            "example": "2024-09-01T19:25:31+02:00"
                        },
                        "text": {
                            "type": "string"
                        },
                        "quantity": {
                            "type": "number",
                            "example": 1
                        },
                        "fee": {
                            "type": "number",
                            "example": 33
                        },
                        "lab_fee": {
                            "type": "number",
                            "example": 11
                        },
                        "price_code": {
                            "type": "string"
                        },
                        "referral": {
                            "type": "boolean",
                            "example": true
                        },
                        "duration_in_minutes": {
                            "type": "integer",
                            "example": 30
                        },
                        "multi_tooth": {
                            "type": "boolean",
                            "example": true
                        },
                        "draft": {
                            "type": "boolean",
                            "example": true
                        },
                        "deleted": {
                            "type": "boolean",
                            "example": true
                        }
                    },
                    "type": "object"
                }
            },
            "type": "object"
        },
        "JournalEntryMacroResponse": {
            "properties": {
                "type": {
                    "type": "string",
                    "example": "journal_entry_macro"
                },
                "id": {
                    "type": "string",
                    "example": "1"
                },
                "attributes": {
                    "properties": {
                        "name": {
                            "type": "string",
                            "example": "Test name"
                        },
                        "deleted": {
                            "type": "boolean",
                            "example": false
                        },
                        "created_at": {
                            "type": "string",
                            "example": "2024-09-01T19:25:31+02:00"
                        },
                        "updated_at": {
                            "type": "string",
                            "example": "2024-09-01T19:25:31+02:00"
                        }
                    },
                    "type": "object"
                }
            },
            "type": "object"
        },
        "JournalEntryReportRowResponse": {
            "properties": {
                "type": {
                    "type": "string",
                    "example": "uninvoiced_journal_entry_report_row"
                },
                "id": {
                    "type": "string",
                    "example": "1"
                },
                "attributes": {
                    "properties": {
                        "count": {
                            "type": "number",
                            "example": 1
                        },
                        "patient_id": {
                            "type": "string",
                            "example": "802"
                        },
                        "patient_name": {
                            "type": "string",
                            "example": "John"
                        }
                    },
                    "type": "object"
                }
            },
            "type": "object"
        },
        "JournalEntryMissingBookingEpicrisisResponse": {
            "properties": {
                "type": {
                    "type": "string",
                    "example": "missing_booking_epicrisis_report_row"
                },
                "id": {
                    "type": "string",
                    "example": "1"
                },
                "attributes": {
                    "properties": {
                        "count": {
                            "type": "number",
                            "example": 1
                        },
                        "patient_id": {
                            "type": "string",
                            "example": "802"
                        },
                        "patient_name": {
                            "type": "string",
                            "example": "John"
                        }
                    },
                    "type": "object"
                }
            },
            "type": "object"
        },
        "MissingEpicrisisReportRowResponse": {
            "properties": {
                "type": {
                    "type": "string",
                    "example": "missing_epicrisis_report_row"
                },
                "id": {
                    "type": "string",
                    "example": "1"
                },
                "attributes": {
                    "properties": {
                        "count": {
                            "type": "number",
                            "example": 1
                        },
                        "patient_id": {
                            "type": "string",
                            "example": "802"
                        },
                        "patient_name": {
                            "type": "string",
                            "example": "John"
                        }
                    },
                    "type": "object"
                }
            },
            "type": "object"
        },
        "UnsignedJournalEntryReportRowResponse": {
            "properties": {
                "type": {
                    "type": "string",
                    "example": "unsigned_journal_entry_report_row"
                },
                "id": {
                    "type": "string",
                    "example": "1"
                },
                "attributes": {
                    "properties": {
                        "count": {
                            "type": "number",
                            "example": 1
                        },
                        "patient_id": {
                            "type": "string",
                            "example": "802"
                        },
                        "patient_name": {
                            "type": "string",
                            "example": "John"
                        }
                    },
                    "type": "object"
                }
            },
            "type": "object"
        },
        "UnclaimedJournalEntryReportRowResponse": {
            "properties": {
                "type": {
                    "type": "string",
                    "example": "unclaimed_journal_entry_report_row"
                },
                "id": {
                    "type": "string",
                    "example": "1"
                },
                "attributes": {
                    "properties": {
                        "count": {
                            "type": "number",
                            "example": 1
                        },
                        "patient_id": {
                            "type": "string",
                            "example": "802"
                        },
                        "patient_name": {
                            "type": "string",
                            "example": "John"
                        }
                    },
                    "type": "object"
                }
            },
            "type": "object"
        },
        "JournalEntryResponse": {
            "properties": {
                "type": {
                    "type": "string",
                    "example": "journal_entry"
                },
                "id": {
                    "type": "string",
                    "example": "12"
                },
                "attributes": {
                    "properties": {
                        "entry_date": {
                            "type": "string",
                            "example": "2024-06-21T08:21:16+02:00"
                        },
                        "text": {
                            "type": "string",
                            "example": "Registrering av parodontal status"
                        },
                        "printed_text": {
                            "type": "string",
                            "example": "Test printed text"
                        },
                        "referral": {
                            "type": "boolean",
                            "example": false
                        },
                        "quantity": {
                            "type": "number",
                            "example": 1
                        },
                        "fee": {
                            "type": "number",
                            "example": 1
                        },
                        "lab_fee": {
                            "type": "number",
                            "example": 1
                        },
                        "discount_excluding_vat": {
                            "type": "number",
                            "example": 1
                        },
                        "duration_in_minutes": {
                            "type": "number",
                            "example": 10
                        },
                        "entry_type": {
                            "type": "string",
                            "example": "parodont"
                        },
                        "included_in_insurance": {
                            "type": "boolean",
                            "example": true
                        },
                        "draft": {
                            "type": "boolean",
                            "example": true
                        },
                        "imported": {
                            "type": "boolean",
                            "example": true
                        },
                        "editable": {
                            "type": "boolean",
                            "example": true
                        },
                        "deleted": {
                            "type": "boolean",
                            "example": true
                        },
                        "status": {
                            "type": "string"
                        },
                        "signed_at": {
                            "type": "string",
                            "example": "2024-09-01T19:25:31+02:00"
                        }
                    },
                    "type": "object"
                }
            },
            "type": "object"
        },
        "MountResponse": {
            "properties": {
                "type": {
                    "type": "string",
                    "example": "mount"
                },
                "id": {
                    "type": "string",
                    "example": "1"
                },
                "attributes": {
                    "properties": {
                        "name": {
                            "type": "string"
                        },
                        "aspect_ratio": {
                            "type": "number"
                        },
                        "treatment_date": {
                            "type": "string",
                            "example": "2024-08-31T00:00:00+02:00"
                        },
                        "signed_at": {
                            "type": "string",
                            "example": "2024-09-31T00:00:00+02:00"
                        },
                        "created_at": {
                            "type": "string",
                            "example": "2024-08-31T00:00:00+02:00"
                        }
                    },
                    "type": "object"
                }
            },
            "type": "object"
        },
        "NotificationsResponse": {
            "properties": {
                "type": {
                    "type": "string",
                    "example": "notification"
                },
                "id": {
                    "type": "string",
                    "example": "1"
                },
                "attributes": {
                    "properties": {
                        "model_type": {
                            "type": "string"
                        },
                        "model_id": {
                            "type": "string"
                        },
                        "date": {
                            "type": "string",
                            "example": "2024-09-11T29:25:31+02:00"
                        },
                        "is_read": {
                            "type": "boolean",
                            "example": true
                        },
                        "deleted": {
                            "type": "boolean",
                            "example": false
                        }
                    },
                    "type": "object"
                }
            },
            "type": "object"
        },
        "NumberOfUnreadMessageRoomsResponse": {
            "properties": {
                "type": {
                    "type": "string",
                    "example": "number_of_unread_message_room"
                },
                "id": {
                    "type": "string",
                    "example": "cfcd208495d565ef66e7dff9f98764da"
                },
                "attributes": {
                    "properties": {
                        "unread_message_rooms": {
                            "type": "number",
                            "example": 0
                        }
                    },
                    "type": "object"
                }
            },
            "type": "object"
        },
        "OpeningHourResponse": {
            "properties": {
                "type": {
                    "type": "string",
                    "example": "opening_hours"
                },
                "id": {
                    "type": "string",
                    "example": "40098"
                },
                "attributes": {
                    "properties": {
                        "dtstart_in_minutes": {
                            "type": "number",
                            "example": 10
                        },
                        "dtend_in_minutes": {
                            "type": "number",
                            "example": 20
                        }
                    },
                    "type": "object"
                }
            },
            "type": "object"
        },
        "MuntraOrganizationsCurrentResponse": {
            "properties": {
                "type": {
                    "type": "string",
                    "example": "muntra_procedure"
                },
                "id": {
                    "type": "string",
                    "example": "id"
                },
                "attributes": {
                    "properties": {
                        "organization_number": {
                            "type": "string",
                            "example": "556935-2726"
                        },
                        "organization_name": {
                            "type": "string",
                            "example": "Muntra AB"
                        },
                        "invoice_address_1": {
                            "type": "string",
                            "example": "Katarinav\u00e4gen 15"
                        },
                        "invoice_address_2": {
                            "type": "string",
                            "example": "Katarinav\u00e4gen 24"
                        },
                        "invoice_postal_code": {
                            "type": "string",
                            "example": "11645"
                        },
                        "invoice_city": {
                            "type": "string",
                            "example": "Stockholm"
                        },
                        "invoice_email_address": {
                            "type": "string"
                        },
                        "invoice_phone_number": {
                            "type": "string"
                        },
                        "invoice_phone_number_2": {
                            "type": "string"
                        },
                        "invoice_phone_mobile": {
                            "type": "string"
                        },
                        "invoice_fax": {
                            "type": "string"
                        },
                        "created_at": {
                            "type": "string",
                            "example": "2017-09-11T14:59:38+02:00"
                        },
                        "updated_at": {
                            "type": "string",
                            "example": "2024-02-16T08:01:01+01:00"
                        },
                        "invoice_reference": {
                            "type": "string"
                        },
                        "invoice_country_code": {
                            "type": "string",
                            "example": "Tandblekning"
                        },
                        "name": {
                            "type": "string",
                            "example": "SE"
                        },
                        "invoice_plusgiro": {
                            "type": "string",
                            "example": "12831-8"
                        },
                        "invoice_bankgiro": {
                            "type": "string",
                            "example": "12831-9"
                        },
                        "invoice_account_number": {
                            "type": "string"
                        },
                        "invoice_clearing_number": {
                            "type": "string"
                        },
                        "invoice_swish_number": {
                            "type": "string",
                            "example": "1230955831"
                        },
                        "iban": {
                            "type": "string"
                        },
                        "type": {
                            "type": "string",
                            "example": "company"
                        },
                        "cert_exists": {
                            "type": "boolean",
                            "example": false
                        },
                        "has_unpaid_invoices": {
                            "type": "string",
                            "example": false
                        }
                    },
                    "type": "object"
                }
            },
            "type": "object"
        },
        "ParodEntryTypeResponse": {
            "properties": {
                "type": {
                    "type": "string",
                    "example": "parod_entry_type"
                },
                "id": {
                    "type": "string",
                    "example": "pocket"
                },
                "attributes": {
                    "properties": {
                        "name": {
                            "type": "string",
                            "example": "pocket"
                        },
                        "detail_type": {
                            "type": "boolean",
                            "example": false
                        }
                    },
                    "type": "object"
                }
            },
            "type": "object"
        },
        "PatientInvoiceRowResponse": {
            "properties": {
                "type": {
                    "type": "string",
                    "example": "patient_invoice_row"
                },
                "id": {
                    "type": "string",
                    "example": "1"
                },
                "attributes": {
                    "properties": {
                        "treatment_date": {
                            "type": "string",
                            "example": "2024-09-01T19:25:31+02:00"
                        }
                    },
                    "type": "object"
                }
            },
            "type": "object"
        },
        "PatientInvoiceResponse": {
            "properties": {
                "type": {
                    "type": "string",
                    "example": "patient_invoice"
                },
                "id": {
                    "type": "string",
                    "example": "id"
                },
                "attributes": {
                    "properties": {
                        "organization_name": {
                            "type": "string",
                            "example": "Mike's Clinic"
                        },
                        "organization_country": {
                            "type": "string",
                            "example": "Sverige"
                        },
                        "organization_city": {
                            "type": "string",
                            "example": "Stockholm"
                        },
                        "organization_street_address_1": {
                            "type": "string",
                            "example": "White street"
                        },
                        "organization_street_address_2": {
                            "type": "string",
                            "example": "Stone street"
                        },
                        "organization_postal_code": {
                            "type": "string",
                            "example": "111 22"
                        },
                        "organization_phone_nr": {
                            "type": "string"
                        },
                        "organization_email": {
                            "type": "string",
                            "example": "test_organization_email@email.com"
                        },
                        "organization_number": {
                            "type": "string",
                            "example": "123456-1234"
                        },
                        "ocr_number": {
                            "type": "string",
                            "example": "010000000269256"
                        },
                        "invoice_reference": {
                            "type": "string"
                        },
                        "swish_number": {
                            "type": "string"
                        },
                        "invoice_date": {
                            "type": "string",
                            "example": "2024-06-28T12:14:26+02:00"
                        },
                        "due_date": {
                            "type": "string",
                            "example": "2024-06-28T12:14:26+02:00"
                        },
                        "rounding_amount": {
                            "type": "number",
                            "example": 1
                        },
                        "invoice_fee": {
                            "type": "number",
                            "example": 1
                        },
                        "clearing_number": {
                            "type": "string"
                        },
                        "account_number": {
                            "type": "string"
                        },
                        "bankgiro_number": {
                            "type": "string"
                        },
                        "plusgiro_number": {
                            "type": "string"
                        },
                        "comment": {
                            "type": "string"
                        },
                        "deleted": {
                            "type": "boolean",
                            "example": false
                        },
                        "created_at": {
                            "type": "string",
                            "example": "2024-06-28T12:14:26+02:00"
                        },
                        "category": {
                            "type": "string",
                            "example": "regular"
                        },
                        "patient_name": {
                            "type": "string",
                            "example": "Over Lord"
                        },
                        "patient_street_address_1": {
                            "type": "string",
                            "example": "Yellow street"
                        },
                        "patient_street_address_2": {
                            "type": "string",
                            "example": "Blue street"
                        },
                        "patient_postal_code": {
                            "type": "string",
                            "example": "111 24"
                        },
                        "patient_city": {
                            "type": "string",
                            "example": "Kyiv"
                        },
                        "patient_country": {
                            "type": "string",
                            "example": "Ukraine"
                        },
                        "patient_reference": {
                            "type": "string"
                        },
                        "third_party_city": {
                            "type": "string"
                        },
                        "third_party_name": {
                            "type": "string"
                        },
                        "third_party_postal_code": {
                            "type": "string"
                        },
                        "third_party_address_1": {
                            "type": "string"
                        },
                        "third_party_address_2": {
                            "type": "string"
                        },
                        "third_party_organization_id": {
                            "type": "string"
                        },
                        "third_party_status": {
                            "type": "string"
                        },
                        "generic_dental_subsidy": {
                            "type": "number",
                            "example": 1
                        },
                        "specific_dental_subsidy": {
                            "type": "number",
                            "example": 2
                        },
                        "state_dental_subsidy": {
                            "type": "number",
                            "example": 3
                        },
                        "read_by_recipient_at": {
                            "type": "string"
                        },
                        "printed_at": {
                            "type": "string",
                            "example": "2024-06-28T11:10:21+02:00"
                        }
                    },
                    "type": "object"
                }
            },
            "type": "object"
        },
        "PatientTotalReceivableResponse": {
            "properties": {
                "type": {
                    "type": "string",
                    "example": "patient_total_receivable"
                },
                "id": {
                    "type": "string",
                    "example": "d3d9446802a44259755d38e6d163e811"
                },
                "attributes": {
                    "properties": {
                        "amount": {
                            "type": "number",
                            "example": 0
                        }
                    },
                    "type": "object"
                }
            },
            "type": "object"
        },
        "PatientResponse": {
            "properties": {
                "type": {
                    "type": "string",
                    "example": "patient"
                },
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "attributes": {
                    "properties": {
                        "social_security_number": {
                            "type": "string",
                            "example": "199008266972"
                        },
                        "first_name": {
                            "type": "string",
                            "example": "John"
                        },
                        "last_name": {
                            "type": "string",
                            "example": "Smith"
                        },
                        "maiden_name": {
                            "type": "string",
                            "example": "Lore"
                        },
                        "initials": {
                            "type": "string",
                            "example": "J.S."
                        },
                        "gender": {
                            "type": "string",
                            "example": "male"
                        },
                        "address_1": {
                            "type": "string"
                        },
                        "address_2": {
                            "type": "string"
                        },
                        "city": {
                            "type": "string",
                            "example": "Stockholm"
                        },
                        "postal_code": {
                            "type": "string"
                        },
                        "municipality": {
                            "type": "string"
                        },
                        "date_of_birth": {
                            "type": "string",
                            "example": "2002-06-14T00:00:00+02:00"
                        },
                        "passport_number": {
                            "type": "string"
                        },
                        "phone_number_cell": {
                            "type": "string"
                        },
                        "phone_number_home": {
                            "type": "string"
                        },
                        "phone_number_work": {
                            "type": "string"
                        },
                        "fax_number": {
                            "type": "string"
                        },
                        "e_mail_address": {
                            "type": "string",
                            "example": "muntra@email.com"
                        },
                        "deleted": {
                            "type": "boolean",
                            "example": true
                        },
                        "created_at": {
                            "type": "string",
                            "example": "2024-07-01T17:15:30+02:00"
                        },
                        "updated_at": {
                            "type": "string",
                            "example": "2024-07-01T17:15:30+02:00"
                        },
                        "patient_number": {
                            "type": "string",
                            "format": "number",
                            "example": "222"
                        },
                        "invoice_reference": {
                            "type": "string"
                        },
                        "status": {
                            "type": "string",
                            "example": "active"
                        },
                        "wants_anestesia": {
                            "type": "boolean",
                            "example": false
                        },
                        "start_date_free_card": {
                            "type": "string",
                            "example": "2024-07-01T17:15:30+02:00"
                        },
                        "end_date_free_card": {
                            "type": "string",
                            "example": "2024-07-01T17:15:30+02:00"
                        },
                        "free_card_number": {
                            "type": "string"
                        },
                        "county_council_certificate_number": {
                            "type": "string"
                        },
                        "county_council_certificate_end_date": {
                            "type": "string"
                        },
                        "euro_certificate_number": {
                            "type": "string"
                        },
                        "protected_identity": {
                            "type": "boolean",
                            "example": false
                        },
                        "warning": {
                            "type": "boolean",
                            "example": true
                        },
                        "warning_text": {
                            "type": "string"
                        },
                        "xray_id": {
                            "type": "string"
                        },
                        "notes": {
                            "type": "string"
                        },
                        "external_dentist": {
                            "type": "string"
                        },
                        "external_hygienist": {
                            "type": "string"
                        },
                        "auto_include_email_invitation": {
                            "type": "string"
                        },
                        "auto_include_sms_invitation": {
                            "type": "string"
                        },
                        "auto_include_sms_reminder": {
                            "type": "string"
                        },
                        "auto_include_snail_mail_invitation": {
                            "type": "string"
                        },
                        "prefers_not_to_be_contacted_by_clinic": {
                            "type": "boolean",
                            "example": true
                        },
                        "recurring": {
                            "type": "boolean",
                            "example": false
                        },
                        "referral_source": {
                            "type": "string"
                        },
                        "teeth_count": {
                            "type": "string"
                        },
                        "untreated_teeth_count": {
                            "type": "string"
                        },
                        "signed_at": {
                            "type": "string",
                            "example": "2024-07-01T17:15:30+02:00"
                        },
                        "nearest_booking_date": {
                            "type": "string",
                            "example": "2024-08-01T19:25:31+02:00"
                        },
                        "latest_unbooked_rebooking_date": {
                            "type": "string",
                            "example": "2024-09-01T19:25:31+02:00"
                        }
                    },
                    "type": "object"
                }
            },
            "type": "object"
        },
        "AnonymousPaymentReportRowResponse": {
            "properties": {
                "type": {
                    "type": "string",
                    "example": "anonymous_payment_report_row"
                },
                "id": {
                    "type": "string",
                    "example": "1"
                },
                "attributes": {
                    "properties": {
                        "account_number": {
                            "type": "string"
                        },
                        "verification_number": {
                            "type": "string"
                        },
                        "verification_date": {
                            "type": "string",
                            "example": "2024-09-11T29:25:31+02:00"
                        },
                        "verification_text": {
                            "type": "string"
                        },
                        "patient_name": {
                            "type": "string"
                        },
                        "amount": {
                            "type": "number",
                            "example": 10
                        }
                    },
                    "type": "object"
                }
            },
            "type": "object"
        },
        "PaymentTypeResponse": {
            "properties": {
                "type": {
                    "type": "string",
                    "example": "payment_type"
                },
                "id": {
                    "type": "string",
                    "example": "1"
                },
                "attributes": {
                    "properties": {
                        "name": {
                            "type": "string",
                            "example": "bankgiro"
                        },
                        "label": {
                            "type": "string",
                            "example": "Bankgiro"
                        }
                    },
                    "type": "object"
                }
            },
            "type": "object"
        },
        "PdfResponse": {
            "properties": {
                "type": {
                    "type": "string",
                    "example": "pdf"
                },
                "id": {
                    "type": "string",
                    "example": "1"
                },
                "attributes": {
                    "properties": {
                        "name": {
                            "type": "string"
                        },
                        "type": {
                            "type": "string"
                        },
                        "size_in_bytes": {
                            "type": "string",
                            "example": "201941"
                        },
                        "backup": {
                            "type": "boolean",
                            "example": false
                        },
                        "backup_path": {
                            "type": "string"
                        },
                        "st_ctim": {
                            "type": "string"
                        },
                        "st_gid": {
                            "type": "string"
                        },
                        "st_ino": {
                            "type": "string"
                        },
                        "st_mode": {
                            "type": "string"
                        },
                        "st_mtim": {
                            "type": "string"
                        },
                        "st_size": {
                            "type": "string"
                        },
                        "st_uid": {
                            "type": "string"
                        },
                        "creation_date": {
                            "type": "string",
                            "example": "2024-08-31T00:00:00+02:00"
                        }
                    },
                    "type": "object"
                }
            },
            "type": "object"
        },
        "JournalPharmacyResponse": {
            "properties": {
                "type": {
                    "type": "string",
                    "example": "journal_pharmacy"
                },
                "id": {
                    "type": "string",
                    "example": "1"
                },
                "attributes": {
                    "properties": {
                        "city": {
                            "type": "string",
                            "example": "Stockholm"
                        },
                        "code": {
                            "type": "string",
                            "example": "7350045512239"
                        },
                        "label": {
                            "type": "string",
                            "example": "RECEPTBREVL\u00c5DAN"
                        }
                    },
                    "type": "object"
                }
            },
            "type": "object"
        },
        "PricesResponse": {
            "properties": {
                "type": {
                    "type": "string",
                    "example": "price"
                },
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "attributes": {
                    "properties": {
                        "price_code": {
                            "type": "string",
                            "example": "p701"
                        },
                        "price_type": {
                            "type": "string",
                            "example": ""
                        },
                        "description": {
                            "type": "string",
                            "example": "Fyllning av en yta p\u00e5 framtand eller h\u00f6rntand"
                        },
                        "printed_text": {
                            "type": "string",
                            "example": ""
                        },
                        "total_excluding_vat": {
                            "type": "number",
                            "example": 0
                        },
                        "purchase_price_excluding_vat": {
                            "type": "number",
                            "example": 0
                        },
                        "lab_fee": {
                            "type": "number",
                            "example": 0
                        },
                        "included_material": {
                            "type": "string",
                            "example": "Komposit"
                        },
                        "time_based": {
                            "type": "boolean",
                            "example": true
                        },
                        "duration_in_minutes": {
                            "type": "number",
                            "example": 0
                        },
                        "standard_duration_in_minutes": {
                            "type": "number",
                            "example": 0
                        },
                        "multi_tooth": {
                            "type": "boolean",
                            "example": false
                        },
                        "class": {
                            "type": "string",
                            "example": ""
                        },
                        "deleted": {
                            "type": "boolean",
                            "example": true
                        }
                    },
                    "type": "object"
                }
            },
            "type": "object"
        },
        "MuntraProceduresResponse": {
            "properties": {
                "type": {
                    "type": "string",
                    "example": "muntra_procedure"
                },
                "id": {
                    "type": "string",
                    "example": "id"
                },
                "attributes": {
                    "properties": {
                        "name": {
                            "type": "string",
                            "example": "Tandblekning"
                        }
                    },
                    "type": "object"
                }
            },
            "type": "object"
        },
        "ProposalResponseResponse": {
            "properties": {
                "type": {
                    "type": "string",
                    "example": "proposal_response"
                },
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "attributes": {
                    "properties": {
                        "gives_consent": {
                            "type": "boolean",
                            "example": true
                        },
                        "created_at": {
                            "type": "string",
                            "example": "2024-09-01T19:25:31+02:00"
                        },
                        "deleted_at": {
                            "type": "string",
                            "example": "2024-09-01T19:25:31+02:00"
                        }
                    },
                    "type": "object"
                }
            },
            "type": "object"
        },
        "ProposalResponse": {
            "properties": {
                "type": {
                    "type": "string",
                    "example": "proposal"
                },
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "attributes": {
                    "properties": {
                        "title": {
                            "type": "string",
                            "example": "New Project Proposal"
                        },
                        "description": {
                            "type": "string",
                            "example": "This is a detailed description of the proposal."
                        },
                        "deleted_at": {
                            "type": "string",
                            "example": "2024-09-01T19:25:31+02:00"
                        }
                    },
                    "type": "object"
                }
            },
            "type": "object"
        },
        "RebookingsResponse": {
            "properties": {
                "type": {
                    "type": "string",
                    "example": "rebooking"
                },
                "id": {
                    "type": "string",
                    "example": "1"
                },
                "attributes": {
                    "properties": {
                        "date": {
                            "type": "string",
                            "example": "2024-07-31T00:00:00+02:00"
                        },
                        "description": {
                            "type": "string",
                            "example": "Test description"
                        },
                        "duration_in_minutes": {
                            "type": "number",
                            "example": 10
                        },
                        "rebooked": {
                            "type": "boolean",
                            "example": true
                        },
                        "last_treatment_date": {
                            "type": "string",
                            "example": "2024-08-31T00:00:00+02:00"
                        },
                        "next_treatment_date": {
                            "type": "string",
                            "example": "2024-09-08T19:25:31+02:00"
                        },
                        "created_at": {
                            "type": "string",
                            "example": "2024-09-01T19:25:31+02:00"
                        }
                    },
                    "type": "object"
                }
            },
            "type": "object"
        },
        "ReimbursementTypeResponse": {
            "properties": {
                "type": {
                    "type": "string",
                    "example": "reimbursement_type"
                },
                "id": {
                    "type": "string",
                    "example": "1"
                },
                "attributes": {
                    "properties": {
                        "name": {
                            "type": "string",
                            "example": "FK & patient name"
                        },
                        "active": {
                            "type": "boolean",
                            "example": true
                        }
                    },
                    "type": "object"
                }
            },
            "type": "object"
        },
        "RemittanceResponseResp": {
            "properties": {
                "type": {
                    "type": "string",
                    "example": "remittance_response"
                },
                "id": {
                    "type": "string",
                    "example": "id"
                },
                "attributes": {
                    "properties": {
                        "text": {
                            "type": "string",
                            "example": "Test text"
                        },
                        "external": {
                            "type": "boolean",
                            "example": true
                        },
                        "signed_at": {
                            "type": "string",
                            "example": "2024-01-01T00:00:00+01:00"
                        },
                        "receiver_signed_at": {
                            "type": "string",
                            "example": "2024-01-01T00:00:00+01:00"
                        },
                        "read_at": {
                            "type": "string",
                            "example": "2024-01-01T00:00:00+01:00"
                        },
                        "created_at": {
                            "type": "string",
                            "example": "2024-01-01T00:00:00+01:00"
                        },
                        "updated_at": {
                            "type": "string",
                            "example": "2024-01-01T00:00:00+01:00"
                        }
                    },
                    "type": "object"
                }
            },
            "type": "object"
        },
        "ReceivedRemittanceResponse": {
            "properties": {
                "type": {
                    "type": "string",
                    "example": "received_remittance"
                },
                "id": {
                    "type": "string",
                    "example": "id"
                },
                "attributes": {
                    "properties": {
                        "external_id": {
                            "type": "string"
                        },
                        "patient_address_1": {
                            "type": "string",
                            "example": "Test address 1"
                        },
                        "patient_address_2": {
                            "type": "string",
                            "example": "Test address 2"
                        },
                        "patient_city": {
                            "type": "string",
                            "example": "Stockholm"
                        },
                        "patient_date_of_birth": {
                            "type": "string"
                        },
                        "patient_e_mail_address": {
                            "type": "string",
                            "example": "patient_email_address@testemail.com"
                        },
                        "patient_first_name": {
                            "type": "string",
                            "example": "John"
                        },
                        "patient_gender": {
                            "type": "string",
                            "example": "male"
                        },
                        "patient_last_name": {
                            "type": "string",
                            "example": "Otto"
                        },
                        "patient_municipality": {
                            "type": "string"
                        },
                        "patient_phone_number_cell": {
                            "type": "string"
                        },
                        "patient_phone_number_home": {
                            "type": "string"
                        },
                        "patient_phone_number_work": {
                            "type": "string"
                        },
                        "patient_postal_code": {
                            "type": "string"
                        },
                        "patient_social_security_number": {
                            "type": "string"
                        },
                        "sender_clinic_address_1": {
                            "type": "string",
                            "example": "Test address clinic sender 1"
                        },
                        "sender_clinic_address_2": {
                            "type": "string",
                            "example": "Test address clinic sender 2"
                        },
                        "sender_clinic_city": {
                            "type": "string",
                            "example": "Kyiv"
                        },
                        "sender_clinic_email_address": {
                            "type": "string",
                            "example": "sender_clinic_email_address@testemail.com"
                        },
                        "sender_clinic_name": {
                            "type": "string"
                        },
                        "sender_clinic_phone_number": {
                            "type": "string"
                        },
                        "sender_clinic_postal_code": {
                            "type": "string"
                        },
                        "receiver_clinic_address_1": {
                            "type": "string",
                            "example": "Test receiver clinic address 1"
                        },
                        "receiver_clinic_address_2": {
                            "type": "string",
                            "example": "Test receiver clinic address 2"
                        },
                        "receiver_clinic_city": {
                            "type": "string",
                            "example": "Berlin"
                        },
                        "receiver_clinic_email_address": {
                            "type": "string",
                            "example": "receiver_clinic_email_address@testemail.com"
                        },
                        "receiver_clinic_name": {
                            "type": "string"
                        },
                        "receiver_clinic_phone_number": {
                            "type": "string"
                        },
                        "receiver_clinic_postal_code": {
                            "type": "string"
                        },
                        "receiver_user_email_address": {
                            "type": "string",
                            "example": "receiver_user_email_address@testemail.com"
                        },
                        "receiver_user_first_name": {
                            "type": "string",
                            "example": "John"
                        },
                        "receiver_user_last_name": {
                            "type": "string",
                            "example": "Smith"
                        },
                        "receiver_user_phone_number": {
                            "type": "string"
                        },
                        "receiver_user_social_security_number": {
                            "type": "string"
                        },
                        "receiver_user_signed_at": {
                            "type": "string",
                            "example": "2024-06-28T12:14:26+02:00"
                        },
                        "remittance_background": {
                            "type": "string"
                        },
                        "remittance_comment": {
                            "type": "string"
                        },
                        "remittance_question": {
                            "type": "string"
                        },
                        "desired_treatment": {
                            "type": "string"
                        },
                        "remittance_response": {
                            "type": "string"
                        },
                        "urgent": {
                            "type": "boolean",
                            "example": true
                        },
                        "consultation": {
                            "type": "boolean",
                            "example": true
                        },
                        "booked": {
                            "type": "boolean",
                            "example": true
                        },
                        "priority": {
                            "type": "string"
                        },
                        "due_date": {
                            "type": "string",
                            "example": "2024-06-28T12:14:26+02:00"
                        },
                        "signed_at": {
                            "type": "string",
                            "example": "2024-06-28T12:14:26+02:00"
                        },
                        "sender_user_email_address": {
                            "type": "string",
                            "example": "sender_user_email_address@testemail.com"
                        },
                        "sender_user_first_name": {
                            "type": "string",
                            "example": "Bob"
                        },
                        "sender_user_last_name": {
                            "type": "string",
                            "example": "Blue"
                        },
                        "sender_user_phone_number": {
                            "type": "string"
                        },
                        "sender_user_social_security_number": {
                            "type": "string"
                        },
                        "receiver_first_view_at": {
                            "type": "string",
                            "example": "2024-06-28T12:14:26+02:00"
                        },
                        "confirmed_receipt_at": {
                            "type": "string",
                            "example": "2024-06-28T12:14:26+02:00"
                        },
                        "declined_at": {
                            "type": "string",
                            "example": "2024-06-28T12:14:26+02:00"
                        },
                        "closed_at": {
                            "type": "string",
                            "example": "2024-06-28T12:14:26+02:00"
                        },
                        "printed_at": {
                            "type": "string",
                            "example": "2024-06-28T12:14:26+02:00"
                        },
                        "approved_at": {
                            "type": "string",
                            "example": "2024-06-28T12:14:26+02:00"
                        },
                        "created_at": {
                            "type": "string",
                            "example": "2024-06-28T12:14:26+02:00"
                        },
                        "updated_at": {
                            "type": "string",
                            "example": "2024-06-28T12:14:26+02:00"
                        }
                    },
                    "type": "object"
                }
            },
            "type": "object"
        },
        "SentRemittanceResponse": {
            "properties": {
                "type": {
                    "type": "string",
                    "example": "sent_remittance"
                },
                "id": {
                    "type": "string",
                    "example": "id"
                },
                "attributes": {
                    "properties": {
                        "external_id": {
                            "type": "string"
                        },
                        "patient_address_1": {
                            "type": "string",
                            "example": "Test address 1"
                        },
                        "patient_address_2": {
                            "type": "string",
                            "example": "Test address 2"
                        },
                        "patient_city": {
                            "type": "string",
                            "example": "Stockholm"
                        },
                        "patient_date_of_birth": {
                            "type": "string"
                        },
                        "patient_e_mail_address": {
                            "type": "string",
                            "example": "patient_email_address@testemail.com"
                        },
                        "patient_first_name": {
                            "type": "string",
                            "example": "John"
                        },
                        "patient_gender": {
                            "type": "string",
                            "example": "male"
                        },
                        "patient_last_name": {
                            "type": "string",
                            "example": "Otto"
                        },
                        "patient_municipality": {
                            "type": "string"
                        },
                        "patient_phone_number_cell": {
                            "type": "string"
                        },
                        "patient_phone_number_home": {
                            "type": "string"
                        },
                        "patient_phone_number_work": {
                            "type": "string"
                        },
                        "patient_postal_code": {
                            "type": "string"
                        },
                        "patient_social_security_number": {
                            "type": "string"
                        },
                        "sender_clinic_address_1": {
                            "type": "string",
                            "example": "Test address clinic sender 1"
                        },
                        "sender_clinic_address_2": {
                            "type": "string",
                            "example": "Test address clinic sender 2"
                        },
                        "sender_clinic_city": {
                            "type": "string",
                            "example": "Kyiv"
                        },
                        "sender_clinic_email_address": {
                            "type": "string",
                            "example": "sender_clinic_email_address@testemail.com"
                        },
                        "sender_clinic_name": {
                            "type": "string"
                        },
                        "sender_clinic_phone_number": {
                            "type": "string"
                        },
                        "sender_clinic_postal_code": {
                            "type": "string"
                        },
                        "receiver_clinic_address_1": {
                            "type": "string",
                            "example": "Test receiver clinic address 1"
                        },
                        "receiver_clinic_address_2": {
                            "type": "string",
                            "example": "Test receiver clinic address 2"
                        },
                        "receiver_clinic_city": {
                            "type": "string",
                            "example": "Berlin"
                        },
                        "receiver_clinic_email_address": {
                            "type": "string",
                            "example": "receiver_clinic_email_address@testemail.com"
                        },
                        "receiver_clinic_name": {
                            "type": "string"
                        },
                        "receiver_clinic_phone_number": {
                            "type": "string"
                        },
                        "receiver_clinic_postal_code": {
                            "type": "string"
                        },
                        "receiver_user_email_address": {
                            "type": "string",
                            "example": "receiver_user_email_address@testemail.com"
                        },
                        "receiver_user_first_name": {
                            "type": "string",
                            "example": "John"
                        },
                        "receiver_user_last_name": {
                            "type": "string",
                            "example": "Smith"
                        },
                        "receiver_user_phone_number": {
                            "type": "string"
                        },
                        "receiver_user_social_security_number": {
                            "type": "string"
                        },
                        "receiver_user_signed_at": {
                            "type": "string",
                            "example": "2024-06-28T12:14:26+02:00"
                        },
                        "remittance_background": {
                            "type": "string"
                        },
                        "remittance_comment": {
                            "type": "string"
                        },
                        "remittance_question": {
                            "type": "string"
                        },
                        "desired_treatment": {
                            "type": "string"
                        },
                        "remittance_response": {
                            "type": "string"
                        },
                        "urgent": {
                            "type": "boolean",
                            "example": true
                        },
                        "consultation": {
                            "type": "boolean",
                            "example": true
                        },
                        "booked": {
                            "type": "boolean",
                            "example": true
                        },
                        "priority": {
                            "type": "string"
                        },
                        "due_date": {
                            "type": "string",
                            "example": "2024-06-28T12:14:26+02:00"
                        },
                        "signed_at": {
                            "type": "string",
                            "example": "2024-06-28T12:14:26+02:00"
                        },
                        "sender_user_email_address": {
                            "type": "string",
                            "example": "sender_user_email_address@testemail.com"
                        },
                        "sender_user_first_name": {
                            "type": "string",
                            "example": "Bob"
                        },
                        "sender_user_last_name": {
                            "type": "string",
                            "example": "Blue"
                        },
                        "sender_user_phone_number": {
                            "type": "string"
                        },
                        "sender_user_social_security_number": {
                            "type": "string"
                        },
                        "receiver_first_view_at": {
                            "type": "string",
                            "example": "2024-06-28T12:14:26+02:00"
                        },
                        "confirmed_receipt_at": {
                            "type": "string",
                            "example": "2024-06-28T12:14:26+02:00"
                        },
                        "declined_at": {
                            "type": "string",
                            "example": "2024-06-28T12:14:26+02:00"
                        },
                        "closed_at": {
                            "type": "string",
                            "example": "2024-06-28T12:14:26+02:00"
                        },
                        "printed_at": {
                            "type": "string",
                            "example": "2024-06-28T12:14:26+02:00"
                        },
                        "approved_at": {
                            "type": "string",
                            "example": "2024-06-28T12:14:26+02:00"
                        },
                        "created_at": {
                            "type": "string",
                            "example": "2024-06-28T12:14:26+02:00"
                        },
                        "updated_at": {
                            "type": "string",
                            "example": "2024-06-28T12:14:26+02:00"
                        }
                    },
                    "type": "object"
                }
            },
            "type": "object"
        },
        "RemittanceResponse": {
            "properties": {
                "type": {
                    "type": "string",
                    "example": "remittance"
                },
                "id": {
                    "type": "string",
                    "example": "id"
                },
                "attributes": {
                    "properties": {
                        "external_id": {
                            "type": "string"
                        },
                        "patient_address_1": {
                            "type": "string",
                            "example": "Test address 1"
                        },
                        "patient_address_2": {
                            "type": "string",
                            "example": "Test address 2"
                        },
                        "patient_city": {
                            "type": "string",
                            "example": "Stockholm"
                        },
                        "patient_date_of_birth": {
                            "type": "string"
                        },
                        "patient_e_mail_address": {
                            "type": "string",
                            "example": "patient_email_address@testemail.com"
                        },
                        "patient_first_name": {
                            "type": "string",
                            "example": "John"
                        },
                        "patient_gender": {
                            "type": "string",
                            "example": "male"
                        },
                        "patient_last_name": {
                            "type": "string",
                            "example": "Otto"
                        },
                        "patient_municipality": {
                            "type": "string"
                        },
                        "patient_phone_number_cell": {
                            "type": "string"
                        },
                        "patient_phone_number_home": {
                            "type": "string"
                        },
                        "patient_phone_number_work": {
                            "type": "string"
                        },
                        "patient_postal_code": {
                            "type": "string"
                        },
                        "patient_social_security_number": {
                            "type": "string"
                        },
                        "sender_clinic_address_1": {
                            "type": "string",
                            "example": "Test address clinic sender 1"
                        },
                        "sender_clinic_address_2": {
                            "type": "string",
                            "example": "Test address clinic sender 2"
                        },
                        "sender_clinic_city": {
                            "type": "string",
                            "example": "Kyiv"
                        },
                        "sender_clinic_email_address": {
                            "type": "string",
                            "example": "sender_clinic_email_address@testemail.com"
                        },
                        "sender_clinic_name": {
                            "type": "string"
                        },
                        "sender_clinic_phone_number": {
                            "type": "string"
                        },
                        "sender_clinic_postal_code": {
                            "type": "string"
                        },
                        "receiver_clinic_address_1": {
                            "type": "string",
                            "example": "Test receiver clinic address 1"
                        },
                        "receiver_clinic_address_2": {
                            "type": "string",
                            "example": "Test receiver clinic address 2"
                        },
                        "receiver_clinic_city": {
                            "type": "string",
                            "example": "Berlin"
                        },
                        "receiver_clinic_email_address": {
                            "type": "string",
                            "example": "receiver_clinic_email_address@testemail.com"
                        },
                        "receiver_clinic_name": {
                            "type": "string"
                        },
                        "receiver_clinic_phone_number": {
                            "type": "string"
                        },
                        "receiver_clinic_postal_code": {
                            "type": "string"
                        },
                        "receiver_user_email_address": {
                            "type": "string",
                            "example": "receiver_user_email_address@testemail.com"
                        },
                        "receiver_user_first_name": {
                            "type": "string",
                            "example": "John"
                        },
                        "receiver_user_last_name": {
                            "type": "string",
                            "example": "Smith"
                        },
                        "receiver_user_phone_number": {
                            "type": "string"
                        },
                        "receiver_user_social_security_number": {
                            "type": "string"
                        },
                        "receiver_user_signed_at": {
                            "type": "string",
                            "example": "2024-06-28T12:14:26+02:00"
                        },
                        "remittance_background": {
                            "type": "string"
                        },
                        "remittance_comment": {
                            "type": "string"
                        },
                        "remittance_question": {
                            "type": "string"
                        },
                        "desired_treatment": {
                            "type": "string"
                        },
                        "remittance_response": {
                            "type": "string"
                        },
                        "urgent": {
                            "type": "boolean",
                            "example": true
                        },
                        "consultation": {
                            "type": "boolean",
                            "example": true
                        },
                        "booked": {
                            "type": "boolean",
                            "example": true
                        },
                        "priority": {
                            "type": "string"
                        },
                        "due_date": {
                            "type": "string",
                            "example": "2024-06-28T12:14:26+02:00"
                        },
                        "signed_at": {
                            "type": "string",
                            "example": "2024-06-28T12:14:26+02:00"
                        },
                        "sender_user_email_address": {
                            "type": "string",
                            "example": "sender_user_email_address@testemail.com"
                        },
                        "sender_user_first_name": {
                            "type": "string",
                            "example": "Bob"
                        },
                        "sender_user_last_name": {
                            "type": "string",
                            "example": "Blue"
                        },
                        "sender_user_phone_number": {
                            "type": "string"
                        },
                        "sender_user_social_security_number": {
                            "type": "string"
                        },
                        "receiver_first_view_at": {
                            "type": "string",
                            "example": "2024-06-28T12:14:26+02:00"
                        },
                        "confirmed_receipt_at": {
                            "type": "string",
                            "example": "2024-06-28T12:14:26+02:00"
                        },
                        "declined_at": {
                            "type": "string",
                            "example": "2024-06-28T12:14:26+02:00"
                        },
                        "closed_at": {
                            "type": "string",
                            "example": "2024-06-28T12:14:26+02:00"
                        },
                        "printed_at": {
                            "type": "string",
                            "example": "2024-06-28T12:14:26+02:00"
                        },
                        "approved_at": {
                            "type": "string",
                            "example": "2024-06-28T12:14:26+02:00"
                        },
                        "created_at": {
                            "type": "string",
                            "example": "2024-06-28T12:14:26+02:00"
                        },
                        "updated_at": {
                            "type": "string",
                            "example": "2024-06-28T12:14:26+02:00"
                        }
                    },
                    "type": "object"
                }
            },
            "type": "object"
        },
        "ResourceResponse": {
            "properties": {
                "type": {
                    "type": "string",
                    "example": "resource"
                },
                "id": {
                    "type": "string",
                    "example": "1"
                },
                "attributes": {
                    "properties": {
                        "name": {
                            "type": "string",
                            "example": "Test name"
                        }
                    },
                    "type": "object"
                }
            },
            "type": "object"
        },
        "RoomsResponse": {
            "properties": {
                "type": {
                    "type": "string",
                    "example": "room"
                },
                "id": {
                    "type": "string",
                    "example": "1"
                },
                "attributes": {
                    "properties": {
                        "name": {
                            "type": "string",
                            "example": "Test name"
                        },
                        "floor": {
                            "type": "string",
                            "example": "5"
                        },
                        "order": {
                            "type": "number",
                            "example": 10
                        },
                        "replace_with_default_users": {
                            "type": "boolean",
                            "example": true
                        }
                    },
                    "type": "object"
                }
            },
            "type": "object"
        },
        "SupplierResponse": {
            "properties": {
                "type": {
                    "type": "string",
                    "example": "event"
                },
                "id": {
                    "type": "string",
                    "example": "bfa1d33f97396a54b3083d0c03e94719"
                },
                "attributes": {
                    "properties": {
                        "invoice_address_1": {
                            "type": "string",
                            "example": "Katarinav\u00e4gen 15"
                        },
                        "invoice_address_2": {
                            "type": "string"
                        },
                        "invoice_city": {
                            "type": "string",
                            "example": "Stockholm"
                        },
                        "invoice_postal_code": {
                            "type": "string"
                        },
                        "invoice_phone_number": {
                            "type": "string"
                        },
                        "organization_name": {
                            "type": "string",
                            "example": "Muntra AB"
                        },
                        "organization_number": {
                            "type": "string",
                            "example": "556935-2726"
                        }
                    },
                    "type": "object"
                }
            },
            "type": "object"
        },
        "SearchUserResponse": {
            "properties": {
                "type": {
                    "type": "string",
                    "example": "search_user"
                },
                "id": {
                    "type": "string",
                    "example": "1"
                },
                "attributes": {
                    "properties": {
                        "city": {
                            "type": "string",
                            "example": "Stockholm"
                        },
                        "first_name": {
                            "type": "string",
                            "example": "John"
                        },
                        "last_name": {
                            "type": "string",
                            "example": "Otto"
                        },
                        "role_name": {
                            "type": "string"
                        },
                        "title": {
                            "type": "string"
                        }
                    },
                    "type": "object"
                }
            },
            "type": "object"
        },
        "SmsInvitationResponse": {
            "properties": {
                "type": {
                    "type": "string",
                    "example": "sms_invitation"
                },
                "id": {
                    "type": "string",
                    "example": "1"
                },
                "attributes": {
                    "properties": {
                        "sender_id": {
                            "type": "string"
                        },
                        "from": {
                            "type": "string"
                        },
                        "to": {
                            "type": "string"
                        },
                        "body": {
                            "type": "string",
                            "example": "Test message"
                        },
                        "segments": {
                            "type": "number",
                            "example": 3
                        },
                        "message_status": {
                            "type": "string"
                        },
                        "error_code": {
                            "type": "string"
                        },
                        "sent_at": {
                            "type": "string",
                            "example": "2024-09-17T00:00:00+02:00"
                        },
                        "created_at": {
                            "type": "string",
                            "example": "2024-09-18T10:26:13+02:00"
                        },
                        "scheduled": {
                            "type": "boolean",
                            "example": true
                        },
                        "deleted": {
                            "type": "boolean",
                            "example": true
                        },
                        "wait_number_of_hours_after_send": {
                            "type": "number",
                            "example": 1
                        },
                        "only_send_if_booking_unconfirmed": {
                            "type": "number",
                            "example": 1
                        }
                    },
                    "type": "object"
                }
            },
            "type": "object"
        },
        "SmsReminderResponse": {
            "properties": {
                "type": {
                    "type": "string",
                    "example": "sms_reminder"
                },
                "id": {
                    "type": "string",
                    "example": "1"
                },
                "attributes": {
                    "properties": {
                        "sender_id": {
                            "type": "string"
                        },
                        "from": {
                            "type": "string"
                        },
                        "to": {
                            "type": "string"
                        },
                        "body": {
                            "type": "string"
                        },
                        "segments": {
                            "type": "number"
                        },
                        "message_status": {
                            "type": "string"
                        },
                        "error_code": {
                            "type": "string"
                        },
                        "sent_at": {
                            "type": "string",
                            "example": "2024-09-18T00:00:00+02:00"
                        },
                        "created_at": {
                            "type": "string",
                            "example": "2024-09-18T17:06:51+02:00"
                        },
                        "scheduled": {
                            "type": "boolean",
                            "example": true
                        },
                        "deleted": {
                            "type": "boolean",
                            "example": true
                        },
                        "send_number_of_hours_before_booking": {
                            "type": "number",
                            "example": 20
                        }
                    },
                    "type": "object"
                }
            },
            "type": "object"
        },
        "SmsResponse": {
            "properties": {
                "type": {
                    "type": "string",
                    "example": "sms"
                },
                "id": {
                    "type": "string",
                    "example": "1"
                },
                "attributes": {
                    "properties": {
                        "sender_id": {
                            "type": "string",
                            "example": "123"
                        },
                        "from": {
                            "type": "string"
                        },
                        "to": {
                            "type": "string"
                        },
                        "body": {
                            "type": "string"
                        },
                        "segments": {
                            "type": "string"
                        },
                        "message_status": {
                            "type": "string"
                        },
                        "error_code": {
                            "type": "string"
                        },
                        "sent_at": {
                            "type": "string",
                            "example": "2024-09-01T19:25:31+02:00"
                        },
                        "created_at": {
                            "type": "string",
                            "example": "2024-09-03T19:25:31+02:00"
                        },
                        "scheduled": {
                            "type": "boolean",
                            "example": false
                        },
                        "deleted": {
                            "type": "boolean",
                            "example": true
                        }
                    },
                    "type": "object"
                }
            },
            "type": "object"
        },
        "SnailMailResponse": {
            "properties": {
                "type": {
                    "type": "string",
                    "example": "snail_mail"
                },
                "id": {
                    "type": "string",
                    "example": "1"
                },
                "attributes": {
                    "properties": {
                        "first_name": {
                            "type": "string",
                            "example": "Gorro"
                        },
                        "last_name": {
                            "type": "string",
                            "example": "Gordon"
                        },
                        "address_1": {
                            "type": "string"
                        },
                        "address_2": {
                            "type": "string"
                        },
                        "city": {
                            "type": "string",
                            "example": "Kyiv"
                        },
                        "postal_code": {
                            "type": "string"
                        },
                        "color": {
                            "type": "string"
                        },
                        "body": {
                            "type": "string"
                        },
                        "wait_number_of_hours_after_send": {
                            "type": "number",
                            "example": 12
                        },
                        "sent_at": {
                            "type": "string",
                            "example": "2024-08-31T00:00:00+02:00"
                        },
                        "only_send_if_booking_unconfirmed": {
                            "type": "boolean",
                            "example": true
                        },
                        "only_send_if_invoice_unread": {
                            "type": "boolean",
                            "example": true
                        },
                        "only_send_if_remittance_unread": {
                            "type": "boolean",
                            "example": true
                        },
                        "scheduled": {
                            "type": "boolean",
                            "example": true
                        },
                        "message_status": {
                            "type": "string"
                        },
                        "error_code": {
                            "type": "string"
                        },
                        "deleted": {
                            "type": "boolean",
                            "example": false
                        },
                        "created_at": {
                            "type": "string",
                            "example": "2024-09-11T29:25:31+02:00"
                        }
                    },
                    "type": "object"
                }
            },
            "type": "object"
        },
        "StbDiseaseResponse": {
            "properties": {
                "type": {
                    "type": "string",
                    "example": "stb_disease"
                },
                "id": {
                    "type": "string",
                    "example": "id"
                },
                "attributes": {
                    "properties": {
                        "code": {
                            "type": "string",
                            "example": "1100"
                        },
                        "description": {
                            "type": "string",
                            "example": "Muntorrhet pga. l\u00e4kemedelsbehandling"
                        }
                    },
                    "type": "object"
                }
            },
            "type": "object"
        },
        "SurfacesResponse": {
            "properties": {
                "type": {
                    "type": "string",
                    "example": "surface"
                },
                "id": {
                    "type": "string",
                    "example": "1"
                },
                "attributes": {
                    "properties": {
                        "surface": {
                            "type": "string"
                        },
                        "selectable": {
                            "type": "string",
                            "example": "tooth"
                        },
                        "tooth": {
                            "type": "string",
                            "example": "11"
                        },
                        "points": {
                            "type": "string"
                        }
                    },
                    "type": "object"
                }
            },
            "type": "object"
        },
        "TandenCheckResponse": {
            "properties": {
                "type": {
                    "type": "string",
                    "example": "tanden_check"
                },
                "id": {
                    "type": "string",
                    "example": "id"
                },
                "attributes": {
                    "properties": {
                        "eligble": {
                            "type": "boolean",
                            "example": "Tandblekning"
                        },
                        "eligible_from_date": {
                            "type": "string"
                        },
                        "stb_amount_available": {
                            "type": "number",
                            "example": 10
                        },
                        "hcd_amount": {
                            "type": "number",
                            "example": 10
                        },
                        "hcd_start_date": {
                            "type": "string"
                        },
                        "hcd_end_date": {
                            "type": "string"
                        },
                        "last_treatment_date": {
                            "type": "string"
                        },
                        "faultcode": {
                            "type": "number"
                        },
                        "faultstring": {
                            "type": "string"
                        },
                        "error_code": {
                            "type": "number"
                        },
                        "error_text": {
                            "type": "string"
                        },
                        "created_at": {
                            "type": "string",
                            "example": "2024-08-01T11:35:00+02:00"
                        }
                    },
                    "type": "object"
                }
            },
            "type": "object"
        },
        "TaskResponse": {
            "properties": {
                "type": {
                    "type": "string",
                    "example": "task"
                },
                "id": {
                    "type": "string",
                    "example": "2"
                },
                "attributes": {
                    "properties": {
                        "title": {
                            "type": "string",
                            "example": "Test title"
                        },
                        "details": {
                            "type": "string"
                        },
                        "from_address": {
                            "type": "string"
                        },
                        "from_name": {
                            "type": "string"
                        },
                        "date": {
                            "type": "string",
                            "example": "2024-09-01T19:25:31+02:00"
                        },
                        "due_at": {
                            "type": "string",
                            "example": "2024-09-01T19:25:31+02:00"
                        },
                        "completed": {
                            "type": "boolean",
                            "example": true
                        },
                        "created_at": {
                            "type": "string",
                            "example": "2024-09-01T19:25:31+02:00"
                        },
                        "deleted_at": {
                            "type": "string",
                            "example": "2024-09-02T19:25:31+02:00"
                        }
                    },
                    "type": "object"
                }
            },
            "type": "object"
        },
        "TenantDatabaseResponse": {
            "properties": {
                "type": {
                    "type": "string",
                    "example": "tenant_database"
                },
                "id": {
                    "type": "string",
                    "example": "1"
                },
                "attributes": {
                    "properties": {
                        "database": {
                            "type": "string",
                            "example": "prodentor_823"
                        }
                    },
                    "type": "object"
                }
            },
            "type": "object"
        },
        "JournalEntryTextTemplateResponse": {
            "properties": {
                "type": {
                    "type": "string",
                    "example": "journal_entry_text_template"
                },
                "id": {
                    "type": "string",
                    "example": "220731"
                },
                "attributes": {
                    "properties": {
                        "name": {
                            "type": "string"
                        },
                        "text": {
                            "type": "string"
                        }
                    },
                    "type": "object"
                }
            },
            "type": "object"
        },
        "ThreeDImageResponse": {
            "properties": {
                "type": {
                    "type": "string",
                    "example": "three-d-image"
                },
                "id": {
                    "type": "string",
                    "example": "1"
                },
                "attributes": {
                    "properties": {
                        "name": {
                            "type": "string"
                        },
                        "type": {
                            "type": "string",
                            "example": "application/octet-stream"
                        },
                        "size_in_bytes": {
                            "type": "string",
                            "example": "136941"
                        },
                        "backup": {
                            "type": "boolean",
                            "example": false
                        },
                        "backup_path": {
                            "type": "string"
                        },
                        "st_ctim": {
                            "type": "string"
                        },
                        "st_gid": {
                            "type": "string"
                        },
                        "st_ino": {
                            "type": "string"
                        },
                        "st_mode": {
                            "type": "string"
                        },
                        "st_mtim": {
                            "type": "string"
                        },
                        "st_size": {
                            "type": "string"
                        },
                        "st_uid": {
                            "type": "string"
                        },
                        "creation_date": {
                            "type": "string",
                            "example": "2024-08-31T00:00:00+02:00"
                        },
                        "width": {
                            "type": "number",
                            "example": 1024
                        },
                        "height": {
                            "type": "number",
                            "example": 768
                        },
                        "actual_width_in_mm": {
                            "type": "number",
                            "example": 1
                        },
                        "actual_height_in_mm": {
                            "type": "number",
                            "example": 2
                        },
                        "treatment_date": {
                            "type": "string",
                            "example": "2024-08-31T00:00:00+02:00"
                        },
                        "original": {
                            "type": "string"
                        }
                    },
                    "type": "object"
                }
            },
            "type": "object"
        },
        "TicketResponse": {
            "properties": {
                "type": {
                    "type": "string",
                    "example": "ticket"
                },
                "id": {
                    "type": "string",
                    "example": "1"
                },
                "attributes": {
                    "properties": {
                        "subject": {
                            "type": "string"
                        },
                        "created_at": {
                            "type": "string",
                            "example": "2024-08-31T00:00:00+02:00"
                        },
                        "updated_at": {
                            "type": "string",
                            "example": "2024-09-31T00:00:00+02:00"
                        },
                        "closed_at": {
                            "type": "string",
                            "example": "2024-10-31T00:00:00+02:00"
                        }
                    },
                    "type": "object"
                }
            },
            "type": "object"
        },
        "ToothSideResponse": {
            "properties": {
                "type": {
                    "type": "string",
                    "example": "buccal"
                },
                "id": {
                    "type": "string",
                    "example": "1"
                },
                "attributes": {
                    "properties": {
                        "name": {
                            "type": "string",
                            "example": "buccal"
                        },
                        "two_side": {
                            "type": "boolean",
                            "example": false
                        },
                        "four_side": {
                            "type": "boolean",
                            "example": false
                        },
                        "six_side": {
                            "type": "boolean",
                            "example": false
                        }
                    },
                    "type": "object"
                }
            },
            "type": "object"
        },
        "ToothSurfaceSnapshotResponse": {
            "properties": {
                "type": {
                    "type": "string",
                    "example": "tooth_surface_snapshot"
                },
                "id": {
                    "type": "string",
                    "example": "T_11"
                },
                "attributes": {
                    "properties": {
                        "element_id": {
                            "type": "string",
                            "example": "11"
                        },
                        "position": {
                            "type": "number",
                            "example": 22
                        },
                        "status": {
                            "type": "string",
                            "example": "intact"
                        },
                        "treated": {
                            "type": "boolean",
                            "example": true
                        },
                        "type": {
                            "type": "string",
                            "example": "permanent"
                        },
                        "text": {
                            "type": "string",
                            "example": "Test text"
                        },
                        "deepest_pocket": {
                            "type": "boolean",
                            "example": true
                        }
                    },
                    "type": "object"
                }
            },
            "type": "object"
        },
        "TransactionResponse": {
            "properties": {
                "type": {
                    "type": "string",
                    "example": "transaction"
                },
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "attributes": {
                    "properties": {
                        "amount": {
                            "type": "number",
                            "example": 10
                        },
                        "account_number": {
                            "type": "string",
                            "example": "1040"
                        },
                        "account_name": {
                            "type": "string",
                            "example": "Licenser"
                        },
                        "cost_center_code": {
                            "type": "string"
                        },
                        "cost_center_name": {
                            "type": "string"
                        }
                    },
                    "type": "object"
                }
            },
            "type": "object"
        },
        "TranslationResponse": {
            "properties": {
                "type": {
                    "type": "string",
                    "example": "translation"
                },
                "id": {
                    "type": "string",
                    "example": "1"
                },
                "attributes": {
                    "properties": {
                        "key": {
                            "type": "string"
                        },
                        "value": {
                            "type": "number"
                        }
                    },
                    "type": "object"
                }
            },
            "type": "object"
        },
        "TreatmentPlanItemResponse": {
            "properties": {
                "type": {
                    "type": "string",
                    "example": "treatment_plan_item"
                },
                "id": {
                    "type": "string",
                    "example": "4"
                },
                "attributes": {
                    "properties": {
                        "entry_type": {
                            "type": "string"
                        },
                        "price_code": {
                            "type": "string"
                        },
                        "date": {
                            "type": "string",
                            "example": "2024-08-31T00:00:00+02:00"
                        },
                        "referral": {
                            "type": "boolean",
                            "example": true
                        },
                        "quantity": {
                            "type": "number",
                            "example": 1
                        },
                        "fee": {
                            "type": "number",
                            "example": 11
                        },
                        "lab_fee": {
                            "type": "number",
                            "example": 22
                        },
                        "discount_excluding_vat": {
                            "type": "number",
                            "example": 33
                        },
                        "vat_percentage": {
                            "type": "number",
                            "example": 11.4
                        },
                        "duration_in_minutes": {
                            "type": "integer",
                            "example": 30
                        },
                        "multi_tooth": {
                            "type": "boolean",
                            "example": true
                        },
                        "text": {
                            "type": "string",
                            "example": "Test text"
                        },
                        "order": {
                            "type": "string"
                        },
                        "done": {
                            "type": "boolean",
                            "example": true
                        },
                        "deleted": {
                            "type": "boolean",
                            "example": true
                        }
                    },
                    "type": "object"
                }
            },
            "type": "object"
        },
        "TreatmentPlansResponse": {
            "properties": {
                "type": {
                    "type": "string",
                    "example": "treatment_plan"
                },
                "id": {
                    "type": "string",
                    "example": "id"
                },
                "attributes": {
                    "properties": {
                        "name": {
                            "type": "string",
                            "example": "Terapiplan"
                        },
                        "terms": {
                            "type": "string",
                            "example": "Detta \u00e4r ett kostnadsf\u00f6rslag som kan komma att revideras vid f\u00f6r\u00e4ndrad behandlingsplan."
                        },
                        "reference": {
                            "type": "string",
                            "example": "Test reference"
                        },
                        "atb_amount_claimed": {
                            "type": "number",
                            "example": 1
                        },
                        "disregard_subscription": {
                            "type": "boolean",
                            "example": false
                        },
                        "high_cost_amount_before_treatments": {
                            "type": "number",
                            "example": 1
                        },
                        "stb_amount_claimed": {
                            "type": "number",
                            "example": 1
                        },
                        "validated_reimbursement_amount": {
                            "type": "string"
                        },
                        "hcd_end_date": {
                            "type": "string"
                        },
                        "treatment_plan_free_text": {
                            "type": "string"
                        },
                        "deleted": {
                            "type": "boolean",
                            "example": false
                        },
                        "created_at": {
                            "type": "string",
                            "example": "2024-06-28T12:14:26+02:00"
                        },
                        "updated_at": {
                            "type": "string",
                            "example": "2024-06-28T12:14:26+02:00"
                        }
                    },
                    "type": "object"
                }
            },
            "type": "object"
        },
        "TreatmentResponse": {
            "properties": {
                "type": {
                    "type": "string",
                    "example": "treatment"
                },
                "id": {
                    "type": "string",
                    "example": "1"
                },
                "attributes": {
                    "properties": {
                        "text": {
                            "type": "string",
                            "example": "Amalgam"
                        },
                        "code": {
                            "type": "string",
                            "example": "AM"
                        },
                        "selectable": {
                            "type": "string",
                            "example": "surface"
                        },
                        "crown_background_color": {
                            "type": "string",
                            "example": "rgba(0,0,0,0.8)"
                        },
                        "crown_border_color": {
                            "type": "string",
                            "example": "rgba(255,255,255,1)"
                        },
                        "root_background_color": {
                            "type": "string",
                            "example": "rgba(255,255,255,1)"
                        },
                        "root_border_color": {
                            "type": "string",
                            "example": "rgba(255,255,255,1)"
                        },
                        "clear_history": {
                            "type": "boolean",
                            "example": true
                        },
                        "surface_text": {
                            "type": "string",
                            "example": "Test text"
                        },
                        "surface_text_color": {
                            "type": "string",
                            "example": "rgba(255,255,255,1)"
                        },
                        "tooth_status": {
                            "type": "string"
                        }
                    },
                    "type": "object"
                }
            },
            "type": "object"
        },
        "UnassignedReceivedRemittanceReportRowResponse": {
            "properties": {
                "type": {
                    "type": "string",
                    "example": "unassigned_received_remittance_report_row"
                },
                "id": {
                    "type": "string",
                    "example": "1"
                },
                "attributes": {
                    "properties": {
                        "count": {
                            "type": "number",
                            "example": 1
                        },
                        "patient_id": {
                            "type": "string",
                            "example": "11"
                        },
                        "patient_name": {
                            "type": "string",
                            "example": "John"
                        }
                    },
                    "type": "object"
                }
            },
            "type": "object"
        },
        "UnbookkeptClaimPaymentReportRowResponse": {
            "properties": {
                "type": {
                    "type": "string",
                    "example": "unbookkept_claim_payment_report_row"
                },
                "id": {
                    "type": "string",
                    "example": "1"
                },
                "attributes": {
                    "properties": {
                        "count": {
                            "type": "number",
                            "example": 1
                        },
                        "patient_id": {
                            "type": "string",
                            "example": "11"
                        },
                        "patient_name": {
                            "type": "string",
                            "example": "John"
                        }
                    },
                    "type": "object"
                }
            },
            "type": "object"
        },
        "UnbookkeptClaimReportRowResponse": {
            "properties": {
                "type": {
                    "type": "string",
                    "example": "unbookkept_claim_report_row"
                },
                "id": {
                    "type": "string",
                    "example": "1"
                },
                "attributes": {
                    "properties": {
                        "count": {
                            "type": "number",
                            "example": 1
                        },
                        "patient_id": {
                            "type": "string",
                            "example": "11"
                        },
                        "patient_name": {
                            "type": "string",
                            "example": "John"
                        }
                    },
                    "type": "object"
                }
            },
            "type": "object"
        },
        "UnbookkeptPatientInvoiceReportRowResponse": {
            "properties": {
                "type": {
                    "type": "string",
                    "example": "unbookkept_patient_invoice_report_row"
                },
                "id": {
                    "type": "string",
                    "example": "1"
                },
                "attributes": {
                    "properties": {
                        "count": {
                            "type": "number",
                            "example": 1
                        },
                        "patient_id": {
                            "type": "string",
                            "example": "11"
                        },
                        "patient_name": {
                            "type": "string",
                            "example": "John"
                        }
                    },
                    "type": "object"
                }
            },
            "type": "object"
        },
        "UnreadDentalLabOrderReportRowResponse": {
            "properties": {
                "type": {
                    "type": "string",
                    "example": "unread_dental_lab_order_report_row"
                },
                "id": {
                    "type": "string",
                    "example": "1"
                },
                "attributes": {
                    "properties": {
                        "count": {
                            "type": "number",
                            "example": 1
                        },
                        "patient_id": {
                            "type": "string",
                            "example": "11"
                        },
                        "patient_name": {
                            "type": "string",
                            "example": "John"
                        }
                    },
                    "type": "object"
                }
            },
            "type": "object"
        },
        "UnreadReceivedRemittanceReportRowResponse": {
            "properties": {
                "type": {
                    "type": "string",
                    "example": "unread_received_remittance_report_row"
                },
                "id": {
                    "type": "string",
                    "example": "1"
                },
                "attributes": {
                    "properties": {
                        "count": {
                            "type": "number",
                            "example": 1
                        },
                        "patient_id": {
                            "type": "string",
                            "example": "11"
                        },
                        "patient_name": {
                            "type": "string",
                            "example": "John"
                        }
                    },
                    "type": "object"
                }
            },
            "type": "object"
        },
        "UnreadSentRemittanceReportRowResponse": {
            "properties": {
                "type": {
                    "type": "string",
                    "example": "unread_sent_remittance_report_row"
                },
                "id": {
                    "type": "string",
                    "example": "1"
                },
                "attributes": {
                    "properties": {
                        "count": {
                            "type": "number",
                            "example": 1
                        },
                        "patient_id": {
                            "type": "string",
                            "example": "11"
                        },
                        "patient_name": {
                            "type": "string",
                            "example": "John"
                        }
                    },
                    "type": "object"
                }
            },
            "type": "object"
        },
        "UserAtClinicsResponse": {
            "properties": {
                "type": {
                    "type": "string",
                    "example": "user_at_clinic"
                },
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "attributes": {
                    "properties": {
                        "change_user_allowed": {
                            "type": "boolean",
                            "example": true
                        },
                        "allowed_to_do_treatment": {
                            "type": "boolean",
                            "example": true
                        },
                        "use_specialist_reference_prices": {
                            "type": "boolean",
                            "example": true
                        },
                        "use_patient_properties_for_teeth_statistics": {
                            "type": "boolean",
                            "example": true
                        },
                        "save_delay_in_milliseconds": {
                            "type": "boolean",
                            "example": 3000
                        },
                        "remittance_user": {
                            "type": "boolean",
                            "example": false
                        },
                        "enable_shortcuts": {
                            "type": "boolean",
                            "example": true
                        },
                        "require_patient_email": {
                            "type": "boolean",
                            "example": false
                        },
                        "require_patient_cellphone": {
                            "type": "boolean",
                            "example": true
                        },
                        "default_to_recurring_patient": {
                            "type": "boolean",
                            "example": false
                        },
                        "confirm_booking_time_changing": {
                            "type": "boolean",
                            "example": true
                        },
                        "auto_approve_patient_booking": {
                            "type": "boolean",
                            "example": true
                        },
                        "auto_include_email_invitation": {
                            "type": "boolean",
                            "example": false
                        },
                        "auto_include_sms_invitation": {
                            "type": "boolean",
                            "example": true
                        },
                        "auto_include_sms_reminder": {
                            "type": "boolean",
                            "example": true
                        },
                        "auto_include_snail_mail_invitation": {
                            "type": "boolean",
                            "example": false
                        },
                        "auto_include_declaration_email": {
                            "type": "boolean",
                            "example": true
                        },
                        "auto_include_declaration_sms": {
                            "type": "boolean",
                            "example": true
                        },
                        "include_ics_in_email_invitation": {
                            "type": "boolean",
                            "example": false
                        },
                        "auto_check_public_records_on_snail_mail_creation": {
                            "type": "boolean",
                            "example": true
                        },
                        "only_add_snail_mail_when_others_missing": {
                            "type": "boolean",
                            "example": true
                        },
                        "default_booking_title": {
                            "type": "string"
                        },
                        "default_booking_disclaimer": {
                            "type": "string"
                        },
                        "default_booking_cancelling_text": {
                            "type": "boolean",
                            "example": "Patienten ringde och l\u00e4mnade"
                        },
                        "default_booking_duration": {
                            "type": "number",
                            "example": 10
                        },
                        "max_nr_of_days_before_first_sendout": {
                            "type": "number",
                            "example": 20
                        },
                        "default_months_to_rebooking": {
                            "type": "number",
                            "example": 20
                        },
                        "default_sms_sender_id": {
                            "type": "string",
                            "example": "NoReply"
                        },
                        "default_days_in_calendar": {
                            "type": "string"
                        },
                        "calendar_time_label_interval_minutes": {
                            "type": "number",
                            "example": 20
                        },
                        "calendar_minute_increment": {
                            "type": "number",
                            "example": 20
                        },
                        "calendar_zoom_value": {
                            "type": "number",
                            "example": 20
                        },
                        "calendar_from_minute": {
                            "type": "string"
                        },
                        "calendar_to_minute": {
                            "type": "string"
                        },
                        "calendar_color": {
                            "type": "string"
                        },
                        "base_booking_color_on_calendar_color": {
                            "type": "boolean",
                            "example": false
                        },
                        "default_patient_booking_text": {
                            "type": "string",
                            "example": "Test text"
                        },
                        "default_patient_partstat": {
                            "type": "string",
                            "example": "NEEDS-ACTION"
                        },
                        "display_pride_config": {
                            "type": "boolean",
                            "example": false
                        },
                        "display_patient_names": {
                            "type": "boolean",
                            "example": true
                        },
                        "display_booking_times": {
                            "type": "boolean",
                            "example": true
                        },
                        "display_recurring_bookings": {
                            "type": "boolean",
                            "example": true
                        },
                        "display_recurring_booking_text": {
                            "type": "boolean",
                            "example": true
                        },
                        "display_weekends": {
                            "type": "boolean",
                            "example": false
                        },
                        "search_events_by_or": {
                            "type": "boolean",
                            "example": false
                        },
                        "display_all_parked_bookings": {
                            "type": "boolean",
                            "example": false
                        },
                        "enable_done": {
                            "type": "boolean",
                            "example": false
                        },
                        "public_calendar_activated": {
                            "type": "boolean",
                            "example": false
                        },
                        "booking_requests_activated": {
                            "type": "boolean",
                            "example": false
                        },
                        "order_in_public_clinic_page": {
                            "type": "string"
                        },
                        "hidden_in_online_booking": {
                            "type": "boolean",
                            "example": false
                        },
                        "reviews_deactivated": {
                            "type": "boolean",
                            "example": false
                        },
                        "default_invoice_credit_days": {
                            "type": "number"
                        },
                        "default_invoice_fee": {
                            "type": "number"
                        },
                        "auto_include_invoice_email": {
                            "type": "boolean",
                            "example": false
                        },
                        "default_to_printing_on_invoice_handling": {
                            "type": "boolean",
                            "example": false
                        },
                        "default_to_printing_receipt_on_payment": {
                            "type": "boolean",
                            "example": false
                        },
                        "default_to_no_atb": {
                            "type": "boolean",
                            "example": false
                        },
                        "use_default_journal_entry_filters": {
                            "type": "boolean",
                            "example": false
                        },
                        "default_journal_entry_status_filter": {
                            "type": "string"
                        },
                        "default_journal_entry_type_filter": {
                            "type": "string"
                        },
                        "default_treatment_plan_terms": {
                            "type": "string"
                        },
                        "sign_all_entries": {
                            "type": "boolean",
                            "example": false
                        },
                        "include_admin_journal_entries": {
                            "type": "boolean",
                            "example": false
                        },
                        "display_journal_entry_rows": {
                            "type": "boolean",
                            "example": false
                        },
                        "enable_deepest_pocket": {
                            "type": "boolean",
                            "example": false
                        },
                        "display_red_pocket_depth_text_in_perio": {
                            "type": "boolean",
                            "example": false
                        },
                        "display_roots_in_perio": {
                            "type": "boolean",
                            "example": false
                        },
                        "get_reimbursement_data_on_patient_select": {
                            "type": "boolean",
                            "example": false
                        },
                        "auto_include_prescription_fee": {
                            "type": "boolean",
                            "example": false
                        },
                        "auto_include_prescription_email": {
                            "type": "boolean",
                            "example": false
                        },
                        "default_to_any_pharmacy": {
                            "type": "boolean",
                            "example": false
                        },
                        "accepts_referrals": {
                            "type": "boolean",
                            "example": false
                        },
                        "telemedicine_activated": {
                            "type": "boolean",
                            "example": false
                        },
                        "recommend_diagnoses": {
                            "type": "boolean",
                            "example": false
                        }
                    },
                    "type": "object"
                }
            },
            "type": "object"
        },
        "UserResponse": {
            "properties": {
                "type": {
                    "type": "string",
                    "example": "user"
                },
                "id": {
                    "type": "string",
                    "example": "1"
                },
                "attributes": {
                    "properties": {
                        "social_security_number": {
                            "type": "string"
                        },
                        "first_name": {
                            "type": "string",
                            "example": "John"
                        },
                        "last_name": {
                            "type": "string",
                            "example": "Otto"
                        },
                        "maiden_name": {
                            "type": "string",
                            "example": "Forester"
                        },
                        "gender": {
                            "type": "string",
                            "example": "male"
                        },
                        "address_1": {
                            "type": "string",
                            "example": "Testgatan"
                        },
                        "address_2": {
                            "type": "string",
                            "example": "Testgatan 2"
                        },
                        "city": {
                            "type": "string",
                            "example": "Stockholm"
                        },
                        "postal_code": {
                            "type": "string",
                            "example": "01003"
                        },
                        "municipality": {
                            "type": "string",
                            "example": "1995-11-10T00:00:00+01:00"
                        },
                        "passport_number": {
                            "type": "string"
                        },
                        "phone_number_cell": {
                            "type": "string",
                            "example": "+46734100450"
                        },
                        "phone_number_home": {
                            "type": "string",
                            "example": "+46734100450"
                        },
                        "phone_number_work": {
                            "type": "string",
                            "example": "+46734100450"
                        },
                        "fax_number": {
                            "type": "string"
                        },
                        "deleted": {
                            "type": "boolean",
                            "example": true
                        },
                        "created_at": {
                            "type": "string",
                            "example": "2017-09-11T14:51:52+02:00"
                        },
                        "updated_at": {
                            "type": "string",
                            "example": "2024-09-10T09:32:14+02:00"
                        },
                        "active": {
                            "type": "boolean",
                            "example": true
                        },
                        "prescriber_code": {
                            "type": "string"
                        },
                        "professional_statement": {
                            "type": "string"
                        },
                        "title": {
                            "type": "string",
                            "example": "Supportmedarbetare, Muntra"
                        },
                        "hide_reviews": {
                            "type": "boolean",
                            "example": true
                        },
                        "hide_reviews_discreetly": {
                            "type": "boolean",
                            "example": true
                        },
                        "number_of_reviews": {
                            "type": "number",
                            "example": 4.5
                        },
                        "overall_rating": {
                            "type": "number",
                            "example": 4.5
                        }
                    },
                    "type": "object"
                }
            },
            "type": "object"
        },
        "VatCodeWebhookRequest": {
            "properties": {
                "type": {
                    "type": "string",
                    "example": "verification"
                },
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "attributes": {
                    "properties": {
                        "name": {
                            "type": "string",
                            "example": "Test name"
                        },
                        "vat_percentage": {
                            "type": "number",
                            "example": 33.5
                        }
                    },
                    "type": "object"
                }
            },
            "type": "object"
        },
        "TreatmentPlanVersionResponse": {
            "properties": {
                "type": {
                    "type": "string",
                    "example": "treatment_plan_version"
                },
                "id": {
                    "type": "string",
                    "example": "draft"
                },
                "attributes": {
                    "properties": {
                        "date": {
                            "type": "string",
                            "example": "2024-09-01T19:25:31+02:00"
                        }
                    },
                    "type": "object"
                }
            },
            "type": "object"
        },
        "AnswerWebhookRequest": {
            "properties": {
                "type": {
                    "type": "string",
                    "example": "answer"
                },
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "attributes": {
                    "properties": {
                        "body": {
                            "type": "string"
                        },
                        "accepted": {
                            "type": "boolean",
                            "example": true
                        },
                        "up_vote_count": {
                            "type": "number",
                            "example": 10
                        },
                        "down_vote_count": {
                            "type": "number",
                            "example": 10
                        },
                        "creation_date": {
                            "type": "string",
                            "example": "2024-09-01T19:25:31+02:00"
                        }
                    },
                    "type": "object"
                }
            },
            "type": "object"
        },
        "BookingAttendeeWebhookRequest": {
            "properties": {
                "type": {
                    "type": "string",
                    "example": "booking_attendee"
                },
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "attributes": {
                    "properties": {
                        "dtstart": {
                            "type": "string",
                            "example": "2024-09-01T19:25:31+02:00"
                        },
                        "dtend": {
                            "type": "string",
                            "example": "2024-09-02T19:25:31+02:00"
                        },
                        "partstat": {
                            "type": "string"
                        },
                        "rsvp": {
                            "type": "boolean",
                            "example": true
                        },
                        "first_sendout_on": {
                            "type": "string",
                            "example": "2024-09-01T19:25:31+02:00"
                        },
                        "arrived_at": {
                            "type": "string",
                            "example": "2024-09-01T19:25:31+02:00"
                        }
                    },
                    "type": "object"
                }
            },
            "type": "object"
        },
        "BookingWebhookRequest": {
            "properties": {
                "type": {
                    "type": "string",
                    "example": "booking"
                },
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "attributes": {
                    "properties": {
                        "summary": {
                            "type": "string",
                            "example": "Test summary"
                        },
                        "text": {
                            "type": "string",
                            "example": "Test text"
                        },
                        "dtstart": {
                            "type": "string",
                            "example": "2024-09-01T19:25:31+02:00"
                        },
                        "dtend": {
                            "type": "string",
                            "example": "2024-09-02T19:25:31+02:00"
                        },
                        "status": {
                            "type": "string"
                        },
                        "patient_declaration_allowed": {
                            "type": "boolean",
                            "example": true
                        },
                        "patient_declaration_submitted": {
                            "type": "boolean",
                            "example": true
                        },
                        "payment_prepared": {
                            "type": "boolean",
                            "example": false
                        },
                        "price": {
                            "type": "number",
                            "example": 132
                        },
                        "source": {
                            "type": "string"
                        }
                    },
                    "type": "object"
                },
                "relationships": {
                    "properties": {
                        "clinic": {
                            "properties": {
                                "data": {
                                    "properties": {
                                        "type": {
                                            "type": "string",
                                            "example": "clinic"
                                        },
                                        "id": {
                                            "type": "integer",
                                            "example": 1
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "type": "object"
                        },
                        "user": {
                            "properties": {
                                "data": {
                                    "properties": {
                                        "type": {
                                            "type": "string",
                                            "example": "user"
                                        },
                                        "id": {
                                            "type": "integer",
                                            "example": 1
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "type": "object"
                        },
                        "booking_attendees": {
                            "properties": {
                                "data": {
                                    "properties": {
                                        "type": {
                                            "type": "string",
                                            "example": "booking_attendee"
                                        },
                                        "id": {
                                            "type": "integer",
                                            "example": 1
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "type": "object"
                        },
                        "patient": {
                            "properties": {
                                "data": {
                                    "properties": {
                                        "type": {
                                            "type": "string",
                                            "example": "patient"
                                        },
                                        "id": {
                                            "type": "integer",
                                            "example": 1
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "type": "object"
                        },
                        "booking_type": {
                            "properties": {
                                "data": {
                                    "properties": {
                                        "type": {
                                            "type": "string",
                                            "example": "booking_type"
                                        },
                                        "id": {
                                            "type": "integer",
                                            "example": 1
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "type": "object"
                        },
                        "procedure": {
                            "properties": {
                                "data": {
                                    "properties": {
                                        "type": {
                                            "type": "string",
                                            "example": "procedure"
                                        },
                                        "id": {
                                            "type": "integer",
                                            "example": 1
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "type": "object"
                        }
                    },
                    "type": "object"
                }
            },
            "type": "object"
        },
        "BookingTypeWebhookRequest": {
            "properties": {
                "type": {
                    "type": "string",
                    "example": "booking_type"
                },
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "attributes": {
                    "properties": {
                        "name": {
                            "type": "string",
                            "example": "Test name"
                        },
                        "text": {
                            "type": "string",
                            "example": "Test text"
                        },
                        "color": {
                            "type": "string"
                        },
                        "text_color": {
                            "type": "string"
                        },
                        "color_order": {
                            "type": "string"
                        },
                        "duration_in_minutes": {
                            "type": "number",
                            "example": 123
                        },
                        "reschedulable": {
                            "type": "boolean",
                            "example": true
                        },
                        "patient_declaration_allowed": {
                            "type": "boolean",
                            "example": false
                        },
                        "default": {
                            "type": "boolean",
                            "example": true
                        }
                    },
                    "type": "object"
                }
            },
            "type": "object"
        },
        "ClinicWebhookRequest": {
            "properties": {
                "type": {
                    "type": "string",
                    "example": "clinic"
                },
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "attributes": {
                    "properties": {
                        "clinic_name": {
                            "type": "string",
                            "example": "Dental Clinic"
                        },
                        "clinic_city": {
                            "type": "string",
                            "example": "Stockholm"
                        },
                        "clinic_address_1": {
                            "type": "string",
                            "example": "Central Street 12"
                        },
                        "clinic_address_2": {
                            "type": "string"
                        },
                        "clinic_email_address": {
                            "type": "string",
                            "example": "dental.clinic@dental.com"
                        },
                        "clinic_phone_number": {
                            "type": "string",
                            "example": "0465636985"
                        },
                        "clinic_postal_code": {
                            "type": "string",
                            "example": "07586"
                        }
                    },
                    "type": "object"
                }
            },
            "type": "object"
        },
        "FiscalYearWebhookRequest": {
            "properties": {
                "type": {
                    "type": "string",
                    "example": "fiscal_year"
                },
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "attributes": {
                    "properties": {
                        "start_date": {
                            "type": "string",
                            "example": "2024-09-01T19:25:31+02:00"
                        },
                        "end_date": {
                            "type": "string",
                            "example": "2024-09-01T19:25:31+02:00"
                        },
                        "cash_accounting_method": {
                            "type": "boolean",
                            "example": false
                        }
                    },
                    "type": "object"
                }
            },
            "type": "object"
        },
        "JournalEntryWebhookRequest": {
            "properties": {
                "type": {
                    "type": "string",
                    "example": "journal_entry"
                },
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "attributes": {
                    "properties": {
                        "entry_date": {
                            "type": "string",
                            "example": "2024-09-01T19:25:31+02:00"
                        },
                        "text": {
                            "type": "string",
                            "example": "Test text"
                        },
                        "referral": {
                            "type": "string"
                        },
                        "quantity": {
                            "type": "number",
                            "example": 100
                        },
                        "fee": {
                            "type": "number",
                            "example": 333
                        },
                        "lab_fee": {
                            "type": "number",
                            "example": 111
                        },
                        "discount_excluding_vat": {
                            "type": "number",
                            "example": 8.5
                        },
                        "duration_in_minutes": {
                            "type": "number",
                            "example": 16
                        },
                        "entry_type": {
                            "type": "string"
                        },
                        "included_in_insurance": {
                            "type": "boolean",
                            "example": false
                        },
                        "draft": {
                            "type": "boolean",
                            "example": true
                        },
                        "imported": {
                            "type": "boolean",
                            "example": true
                        },
                        "editable": {
                            "type": "boolean",
                            "example": true
                        },
                        "deleted": {
                            "type": "boolean",
                            "example": true
                        },
                        "signed_at": {
                            "type": "string",
                            "example": "2024-09-01T19:25:31+02:00"
                        }
                    },
                    "type": "object"
                },
                "relationships": {
                    "properties": {
                        "clinic": {
                            "properties": {
                                "data": {
                                    "properties": {
                                        "type": {
                                            "type": "string",
                                            "example": "clinic"
                                        },
                                        "id": {
                                            "type": "integer",
                                            "example": 1
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "type": "object"
                        },
                        "user": {
                            "properties": {
                                "data": {
                                    "properties": {
                                        "type": {
                                            "type": "string",
                                            "example": "user"
                                        },
                                        "id": {
                                            "type": "integer",
                                            "example": 1
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "type": "object"
                        },
                        "currency": {
                            "properties": {
                                "data": {
                                    "properties": {
                                        "type": {
                                            "type": "string",
                                            "example": "currency"
                                        },
                                        "id": {
                                            "type": "integer",
                                            "example": 1
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "type": "object"
                        },
                        "patient": {
                            "properties": {
                                "data": {
                                    "properties": {
                                        "type": {
                                            "type": "string",
                                            "example": "patient"
                                        },
                                        "id": {
                                            "type": "integer",
                                            "example": 1
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "type": "object"
                        },
                        "vat_code": {
                            "properties": {
                                "data": {
                                    "properties": {
                                        "type": {
                                            "type": "string",
                                            "example": "vat_code"
                                        },
                                        "id": {
                                            "type": "integer",
                                            "example": 1
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "type": "object"
                        }
                    },
                    "type": "object"
                }
            },
            "type": "object"
        },
        "OrganizationWebhookRequest": {
            "properties": {
                "type": {
                    "type": "string",
                    "example": "organization"
                },
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "attributes": {
                    "properties": {
                        "organization_number": {
                            "type": "string"
                        },
                        "organization_name": {
                            "type": "string",
                            "example": "Test organization name"
                        },
                        "invoice_address_1": {
                            "type": "string"
                        },
                        "invoice_address_2": {
                            "type": "string"
                        }
                    },
                    "type": "object"
                },
                "invoice_postal_code": {
                    "type": "string"
                },
                "invoice_city": {
                    "type": "string"
                },
                "invoice_email_address": {
                    "type": "string"
                },
                "invoice_phone_number": {
                    "type": "string"
                },
                "invoice_phone_number_2": {
                    "type": "string"
                },
                "invoice_phone_mobile": {
                    "type": "string"
                },
                "invoice_fax": {
                    "type": "string"
                },
                "invoice_reference": {
                    "type": "string"
                },
                "invoice_country_code": {
                    "type": "string"
                },
                "invoice_plusgiro": {
                    "type": "string"
                },
                "invoice_bankgiro": {
                    "type": "string"
                },
                "invoice_account_number": {
                    "type": "string"
                },
                "invoice_clearing_number": {
                    "type": "string"
                },
                "invoice_swish_number": {
                    "type": "string"
                },
                "iban": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string",
                    "example": "2024-09-01T19:25:31+02:00"
                },
                "updated_at": {
                    "type": "string",
                    "example": "2024-09-02T22:25:31+02:00"
                }
            },
            "type": "object"
        },
        "PatientWebhookRequest": {
            "properties": {
                "type": {
                    "type": "string",
                    "example": "patient"
                },
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "attributes": {
                    "properties": {
                        "address_1": {
                            "type": "string",
                            "example": "Test address 1"
                        },
                        "address_2": {
                            "type": "string",
                            "example": "Test address 2"
                        },
                        "city": {
                            "type": "string",
                            "example": "Stockholm"
                        },
                        "date_of_birth": {
                            "type": "string",
                            "example": "1956-01-01"
                        },
                        "deleted": {
                            "type": "boolean",
                            "example": true
                        },
                        "e_mail_address": {
                            "type": "string",
                            "example": "test@email.com"
                        },
                        "first_name": {
                            "type": "string",
                            "example": "John"
                        },
                        "last_name": {
                            "type": "string",
                            "example": "Otto"
                        },
                        "gender": {
                            "type": "string",
                            "example": "male"
                        },
                        "patient_number": {
                            "type": "string"
                        },
                        "postal_code": {
                            "type": "string"
                        },
                        "phone_number_cell": {
                            "type": "string"
                        },
                        "prefers_not_to_be_contacted_by_clinic": {
                            "type": "boolean",
                            "example": false
                        },
                        "protected_identity": {
                            "type": "boolean",
                            "example": false
                        },
                        "social_security_number": {
                            "type": "string"
                        },
                        "status": {
                            "type": "string",
                            "example": "CONFIRMED"
                        }
                    },
                    "type": "object"
                },
                "relationships": {
                    "properties": {
                        "clinic": {
                            "properties": {
                                "data": {
                                    "properties": {
                                        "type": {
                                            "type": "string",
                                            "example": "clinic"
                                        },
                                        "id": {
                                            "type": "integer",
                                            "example": 1
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "type": "object"
                        },
                        "user": {
                            "properties": {
                                "data": {
                                    "properties": {
                                        "type": {
                                            "type": "string",
                                            "example": "user"
                                        },
                                        "id": {
                                            "type": "integer",
                                            "example": 1
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "type": "object"
                        }
                    },
                    "type": "object"
                }
            },
            "type": "object"
        },
        "ProcedureWebhookRequest": {
            "properties": {
                "type": {
                    "type": "string",
                    "example": "procedure"
                },
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "attributes": {
                    "properties": {
                        "name": {
                            "type": "string",
                            "example": "Test name"
                        }
                    },
                    "type": "object"
                }
            },
            "type": "object"
        },
        "QuestionWebhookRequest": {
            "properties": {
                "type": {
                    "type": "string",
                    "example": "question"
                },
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "attributes": {
                    "properties": {
                        "title": {
                            "type": "string",
                            "example": "Test title"
                        },
                        "body": {
                            "type": "string"
                        },
                        "view_count": {
                            "type": "number",
                            "example": 10
                        },
                        "up_vote_count": {
                            "type": "number",
                            "example": 10
                        },
                        "down_vote_count": {
                            "type": "number",
                            "example": 10
                        },
                        "creation_date": {
                            "type": "string",
                            "example": "2024-09-01T19:25:31+02:00"
                        },
                        "last_activity_date": {
                            "type": "string",
                            "example": "2024-09-01T19:25:31+02:00"
                        },
                        "closed_at": {
                            "type": "string",
                            "example": "2024-09-01T19:25:31+02:00"
                        },
                        "embedded_text": {
                            "type": "string",
                            "example": "Test embeded text"
                        },
                        "embedding": {
                            "type": "string"
                        },
                        "relevant_for_clinic_support": {
                            "type": "boolean",
                            "example": true
                        },
                        "internal": {
                            "type": "boolean",
                            "example": true
                        }
                    },
                    "type": "object"
                }
            },
            "type": "object"
        },
        "TaskCommentWebhookRequest": {
            "properties": {
                "type": {
                    "type": "string",
                    "example": "task_comment"
                },
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "attributes": {
                    "properties": {
                        "body": {
                            "type": "string"
                        },
                        "public": {
                            "type": "boolean",
                            "example": 10
                        },
                        "created_at": {
                            "type": "string",
                            "example": "2024-09-01T19:25:31+02:00"
                        }
                    },
                    "type": "object"
                }
            },
            "type": "object"
        },
        "TaskWebhookRequest": {
            "properties": {
                "type": {
                    "type": "string",
                    "example": "task"
                },
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "attributes": {
                    "properties": {
                        "title": {
                            "type": "string",
                            "example": "Test title"
                        },
                        "details": {
                            "type": "string"
                        },
                        "from_address": {
                            "type": "string"
                        },
                        "from_name": {
                            "type": "string"
                        },
                        "date": {
                            "type": "string",
                            "example": "2024-09-01T19:25:31+02:00"
                        },
                        "due_at": {
                            "type": "string",
                            "example": "2024-09-01T19:25:31+02:00"
                        },
                        "completed": {
                            "type": "boolean",
                            "example": true
                        },
                        "created_at": {
                            "type": "string",
                            "example": "2024-09-01T19:25:31+02:00"
                        },
                        "deleted_at": {
                            "type": "string",
                            "example": "2024-09-01T19:25:31+02:00"
                        }
                    },
                    "type": "object"
                },
                "relationships": {
                    "properties": {
                        "clinic": {
                            "properties": {
                                "data": {
                                    "properties": {
                                        "type": {
                                            "type": "string",
                                            "example": "clinic"
                                        },
                                        "id": {
                                            "type": "integer",
                                            "example": 1
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "type": "object"
                        },
                        "responsible": {
                            "properties": {
                                "data": {
                                    "properties": {
                                        "type": {
                                            "type": "string",
                                            "example": "responsible"
                                        },
                                        "id": {
                                            "type": "integer",
                                            "example": 1
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "type": "object"
                        },
                        "creator": {
                            "properties": {
                                "data": {
                                    "properties": {
                                        "type": {
                                            "type": "string",
                                            "example": "creator"
                                        },
                                        "id": {
                                            "type": "integer",
                                            "example": 1
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "type": "object"
                        },
                        "patient": {
                            "properties": {
                                "data": {
                                    "properties": {
                                        "type": {
                                            "type": "string",
                                            "example": "patient"
                                        },
                                        "id": {
                                            "type": "integer",
                                            "example": 1
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "type": "object"
                        },
                        "comments": {
                            "properties": {
                                "data": {
                                    "properties": {
                                        "type": {
                                            "type": "string",
                                            "example": "comment"
                                        },
                                        "id": {
                                            "type": "integer",
                                            "example": 1
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "type": "object"
                        }
                    },
                    "type": "object"
                }
            },
            "type": "object"
        },
        "TransactionWebhookRequest": {
            "properties": {
                "type": {
                    "type": "string",
                    "example": "transaction"
                },
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "attributes": {
                    "properties": {
                        "amount": {
                            "type": "number",
                            "example": 10
                        },
                        "account_number": {
                            "type": "string"
                        },
                        "account_name": {
                            "type": "string"
                        },
                        "cost_center_code": {
                            "type": "string"
                        },
                        "cost_center_name": {
                            "type": "string"
                        }
                    },
                    "type": "object"
                }
            },
            "type": "object"
        },
        "UserWebhookRequest": {
            "properties": {
                "type": {
                    "type": "string",
                    "example": "user"
                },
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "attributes": {
                    "properties": {
                        "first_name": {
                            "type": "string",
                            "example": "Jerald"
                        },
                        "last_name": {
                            "type": "string",
                            "example": "Smith"
                        },
                        "social_security_number": {
                            "type": "string"
                        },
                        "title": {
                            "type": "string"
                        }
                    },
                    "type": "object"
                }
            },
            "type": "object"
        },
        "VerificationSerieWebhookRequest": {
            "properties": {
                "type": {
                    "type": "string",
                    "example": "verification_serie"
                },
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "attributes": {
                    "properties": {
                        "code": {
                            "type": "string"
                        },
                        "label": {
                            "type": "string"
                        },
                        "manual_accountcoding": {
                            "type": "boolean"
                        }
                    },
                    "type": "object"
                }
            },
            "type": "object"
        },
        "VerificationWebhookRequest": {
            "properties": {
                "type": {
                    "type": "string",
                    "example": "verification"
                },
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "attributes": {
                    "properties": {
                        "verification_date": {
                            "type": "string",
                            "example": "2024-09-01T19:25:31+02:00"
                        },
                        "verification_text": {
                            "type": "string",
                            "example": "Test verification text"
                        },
                        "verification_number": {
                            "type": "string"
                        },
                        "created_at": {
                            "type": "string",
                            "example": "2024-09-01T19:25:31+02:00"
                        }
                    },
                    "type": "object"
                },
                "relationships": {
                    "properties": {
                        "currency": {
                            "properties": {
                                "data": {
                                    "properties": {
                                        "type": {
                                            "type": "string",
                                            "example": "currency"
                                        },
                                        "id": {
                                            "type": "integer",
                                            "example": 1
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "type": "object"
                        },
                        "fiscal_year": {
                            "properties": {
                                "data": {
                                    "properties": {
                                        "type": {
                                            "type": "string",
                                            "example": "fiscal_year"
                                        },
                                        "id": {
                                            "type": "integer",
                                            "example": 1
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "type": "object"
                        },
                        "verification_serie": {
                            "properties": {
                                "data": {
                                    "properties": {
                                        "type": {
                                            "type": "string",
                                            "example": "verification_serie"
                                        },
                                        "id": {
                                            "type": "integer",
                                            "example": 1
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "type": "object"
                        },
                        "transactions": {
                            "properties": {
                                "data": {
                                    "properties": {
                                        "type": {
                                            "type": "string",
                                            "example": "transactions"
                                        },
                                        "id": {
                                            "type": "integer",
                                            "example": 1
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "type": "object"
                        }
                    },
                    "type": "object"
                }
            },
            "type": "object"
        }
    },
    "parameters": {
        "body": {
            "name": "body",
            "in": "body",
            "description": "Body of request (obligatory)",
            "required": true,
            "schema": {
                "properties": {
                    "data": {
                        "description": "List booking attendees",
                        "properties": {
                            "attributes": {
                                "description": "List booking attendees",
                                "properties": {
                                    "patient_id": {
                                        "description": "List booking attendees",
                                        "type": "number",
                                        "example": "1"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "type": "object"
                    }
                }
            }
        }
    },
    "responses": {
        "422": {
            "description": "Validation error",
            "schema": {
                "properties": {
                    "message": {
                        "description": "List muntra-clinics",
                        "type": "string",
                        "example": "Please make sure that request parameters is correct"
                    }
                },
                "type": "object"
            }
        }
    }
}
